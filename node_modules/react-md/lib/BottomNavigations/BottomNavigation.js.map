{"version":3,"sources":["../../src/js/BottomNavigations/BottomNavigation.js"],"names":["BottomNavigation","props","visible","initiallyVisible","defaultVisible","state","portalVisible","activeIndex","defaultActiveIndex","dynamic","_addTouchEvents","nextProps","_removeTouchEvents","nextState","onVisibilityChange","_timeout","clearTimeout","className","actions","colored","lastChild","animate","portal","propLinks","links","propActiveIndex","propRenderNode","renderNode","onNavChange","dynamicThreshold","transitionDuration","onChange","containerStyle","containerClassName","transitionName","transitionEnterTimeout","transitionLeaveTimeout","fixed","length","context","navigation","map","action","index","key","_handleNavChange","propTypes","style","object","string","propName","component","args","len","Error","arrayOf","shape","label","node","isRequired","icon","element","iconChildren","iconClassName","oneOfType","func","bool","number","initialActiveIndex","array","defaultProps","contextTypes","window","_handleTouchStart","_handleTouchMove","_handleTouchEnd","_animateIn","setTimeout","setState","_animateOut","e","pageY","changedTouches","_pageY","_scrolling","touchY","passedThreshold","Math","abs"],"mappings":"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","file":"BottomNavigation.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport { addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\nimport Portal from '../Helpers/Portal';\nimport Paper from '../Papers/Paper';\nimport BottomNav from './BottomNav';\n\n/**\n * The `BottomNavigation` component is an alternative to the `NavigationDrawer` for handling navigation\n * only on mobile devices.\n */\nexport default class BottomNavigation extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * A list of objects to generate a bottom navigation link. There must be at least 3 and no more\n     * than 5 links. A link gets rendered as the `AccessibleFakeButton` component, so any additional\n     * props in the link's shape will be passed along.\n     *\n     * ```docgen\n     * PropTypes.arrayOf(PropTypes.shape({\n     *   label: PropTypes.node.isRequired,\n     *   icon: PropTypes.element,\n     *   component: PropTypes.oneOfType([\n     *      PropTypes.func,\n     *      PropTypes.string,\n     *   ]),\n     * }).isRequired\n     * ```\n     */\n    links: (props, propName, component, ...args) => {\n      const links = props[propName] || props.actions;\n      const len = links.length;\n\n      if (len < 3) {\n        return new Error(\n          `Only ${len} \\`${propName}\\` were given to the ${component}. At least 3 are required.`\n        );\n      } else if (len > 5) {\n        return new Error(\n          `${len} \\`${propName}\\` were given to the ${component}. No more than 5 may be given.`\n        );\n      }\n\n      return PropTypes.arrayOf(PropTypes.shape({\n        label: PropTypes.node.isRequired,\n        icon: PropTypes.element,\n        iconChildren: deprecated(PropTypes.node, 'Use `icon` instead'),\n        iconClassName: deprecated(PropTypes.string, 'Use `icon` instead'),\n        component: PropTypes.oneOfType([\n          PropTypes.func,\n          PropTypes.string,\n        ]),\n      })).isRequired(props, propName, component, ...args);\n    },\n\n    /**\n     * Boolean if the bottom navigation should be colored with the primary color or whatever color\n     * was a result of the `react-md-theme-bottom-navigations-colored` mixin.\n     */\n    colored: PropTypes.bool,\n\n    /**\n     * Boolean if the bottom navigation should dynamically appear based on scrolling. When the user\n     * scrolls the `dynamicThreshold` amount, this component will either disappear (scrolling down)\n     * or appear (scrolling up).\n     */\n    dynamic: PropTypes.bool,\n\n    /**\n     * The distance a user must scroll before the bottom navigation appears or disappears when it is `dynamic`.\n     */\n    dynamicThreshold: PropTypes.number.isRequired,\n\n    /**\n     * An optional function to call when a link has been clicked. The callback will\n     * include the new active index and the click event.\n     *\n     * ```js\n     * onNavChange(newActiveIndex, event);\n     * ```\n     */\n    onNavChange: PropTypes.func,\n\n    /**\n     * An optional active index to use. This will make the component controlled and require the\n     * `onNavChange` prop to be defined.\n     */\n    activeIndex: controlled(PropTypes.number, 'onNavChange', 'defaultActiveIndex'),\n\n    /**\n     * The index for the link that is active by default.\n     */\n    defaultActiveIndex: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the bottom navigation is visible by default. This *should* probably always\n     * be true.\n     */\n    defaultVisible: PropTypes.bool.isRequired,\n\n    /**\n     * The component to render the bottom navigation as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the bottom navigation.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * Since the `BottomNavigation` component uses the `Portal` component, you can pass an optional\n     * HTML Node to render in.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the bottom navigation should render as the last child in the `renderNode` or `body`\n     * instead of as the first.\n     */\n    lastChild: PropTypes.bool,\n\n    /**\n     * The transition duration for the dynamic bottom navigation to appear or disappear. This should\n     * match the `$md-bottom-navigation-transition-time` variable.\n     */\n    transitionDuration: PropTypes.number.isRequired,\n\n    /**\n     * An optional function to call when the visibility of the bottom navigation changes. The callback\n     * will include the new visibility.\n     *\n     * ```js\n     * onVisibilityChange(!visible);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * Boolean if the label on a shifting navigation should animate in and out.\n     */\n    animate: PropTypes.bool,\n\n    onChange: deprecated(PropTypes.func, 'Use `onNavChange` instead'),\n    initiallyVisible: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    initialActiveIndex: deprecated(PropTypes.number, 'Use `defaultActiveIndex` instead'),\n    containerStyle: deprecated(PropTypes.object, 'Use `style` instead'),\n    containerClassName: deprecated(PropTypes.string, 'Use `className` instead'),\n    transitionName: deprecated(PropTypes.string, 'There is no CSSTransitionGroup used anymore'),\n    transitionEnterTimeout: deprecated(PropTypes.number, 'Use `transitionDuration` instead'),\n    transitionLeaveTimeout: deprecated(PropTypes.number, 'Use `transitionDuration` instead'),\n    actions: deprecated(PropTypes.array, 'Use `links` instead'),\n  };\n\n  static defaultProps = {\n    animate: true,\n    defaultActiveIndex: 0,\n    component: 'footer',\n    defaultVisible: true,\n    transitionDuration: 300,\n    portal: false,\n    dynamicThreshold: 5,\n  };\n\n  static contextTypes = {\n    renderNode: PropTypes.object,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const visible = typeof props.initiallyVisible === 'boolean' ? props.initiallyVisible : props.defaultVisible;\n    this.state = {\n      visible,\n      portalVisible: visible,\n    };\n\n    if (typeof props.activeIndex === 'undefined') {\n      this.state.activeIndex = props.defaultActiveIndex;\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.dynamic) {\n      this._addTouchEvents();\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { dynamic } = nextProps;\n    if (this.props.dynamic === dynamic) {\n      return;\n    }\n\n    if (dynamic) {\n      this._addTouchEvents();\n    } else {\n      this._removeTouchEvents();\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (this.state.visible !== nextState.visible && nextProps.onVisibilityChange) {\n      nextProps.onVisibilityChange(nextState.visible);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.props.dynamic) {\n      this._removeTouchEvents();\n    }\n\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  _addTouchEvents = () => {\n    addTouchEvent(window, 'start', this._handleTouchStart);\n    addTouchEvent(window, 'move', this._handleTouchMove);\n    addTouchEvent(window, 'end', this._handleTouchEnd);\n  };\n\n  _removeTouchEvents = () => {\n    removeTouchEvent(window, 'start', this._handleTouchStart);\n    removeTouchEvent(window, 'move', this._handleTouchMove);\n    removeTouchEvent(window, 'end', this._handleTouchEnd);\n  };\n\n  _animateIn = () => {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this._timeout = null;\n      this.setState({ visible: true });\n    }, 17);\n\n    this.setState({ portalVisible: true });\n  };\n\n  _animateOut = () => {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this._timeout = null;\n      this.setState({ portalVisible: false });\n    }, this.props.transitionDuration);\n\n    this.setState({ visible: false });\n  };\n\n  _handleTouchStart = (e) => {\n    const { pageY } = e.changedTouches[0];\n\n    this._pageY = pageY;\n    this._scrolling = true;\n  };\n\n  _handleTouchMove = (e) => {\n    const { visible } = this.state;\n    if (!this._scrolling) {\n      return;\n    }\n\n    const touchY = e.changedTouches[0].pageY;\n    const { dynamicThreshold } = this.props;\n    const passedThreshold = Math.abs(this._pageY - touchY) >= dynamicThreshold;\n    if (this._pageY > touchY && visible && passedThreshold) {\n      this._pageY = touchY;\n      this._animateOut();\n    } else if (this._pageY < touchY && !visible && passedThreshold) {\n      this._pageY = touchY;\n      this._animateIn();\n    }\n  };\n\n  _handleTouchEnd = () => {\n    this._scrolling = false;\n  };\n\n  _handleNavChange = (index, e) => {\n    if (this.props.onNavChange || this.props.onChange) {\n      (this.props.onNavChange || this.props.onChange)(index, e);\n    }\n\n    if (typeof this.props.activeIndex === 'undefined') {\n      this.setState({ activeIndex: index });\n    }\n  };\n\n  render() {\n    const { visible, portalVisible } = this.state;\n    const {\n      className,\n      actions,\n      colored,\n      dynamic,\n      lastChild,\n      animate,\n      portal,\n      /* eslint-disable no-unused-vars */\n      links: propLinks,\n      activeIndex: propActiveIndex,\n      renderNode: propRenderNode,\n      onNavChange,\n      onVisibilityChange,\n      defaultVisible,\n      defaultActiveIndex,\n      dynamicThreshold,\n      transitionDuration,\n\n      // deprecated\n      onChange,\n      initiallyVisible,\n      containerStyle,\n      containerClassName,\n      transitionName,\n      transitionEnterTimeout,\n      transitionLeaveTimeout,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { links } = this.props;\n    if (actions) {\n      links = actions;\n    }\n\n    const fixed = links.length === 3;\n    const activeIndex = getField(this.props, this.state, 'activeIndex');\n    const renderNode = getField(this.props, this.context, 'renderNode');\n    const navigation = (\n      <Paper\n        {...props}\n        key=\"navigation\"\n        className={cn('md-bottom-navigation', {\n          'md-background--card': !colored,\n          'md-background--primary': colored,\n          'md-bottom-navigation--dynamic': dynamic,\n          'md-bottom-navigation--dynamic-inactive': dynamic && !visible,\n        }, className)}\n        role=\"navigation\"\n      >\n        {links.map((action, index) => (\n          <BottomNav\n            {...action}\n            animate={animate}\n            key={action.key || index}\n            index={index}\n            onNavChange={this._handleNavChange}\n            active={activeIndex === index}\n            colored={colored}\n            fixed={fixed}\n          />\n        ))}\n      </Paper>\n    );\n\n    if (!portal) {\n      return portalVisible ? navigation : null;\n    }\n\n    return (\n      <Portal renderNode={renderNode} visible={portalVisible} lastChild={lastChild}>\n        {navigation}\n      </Portal>\n    );\n  }\n}\n"]}