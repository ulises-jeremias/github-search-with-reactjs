{"version":3,"sources":["../../src/js/Cards/CardActions.js"],"names":["CardActions","props","className","children","isExpander","expander","centered","stacked","propTypes","bool","string","node"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAaqBA,W;;;;;;;;;;;+BA+BV;AAAA,qBASH,KAAKC,KATF;AAAA,YAELC,SAFK,UAELA,SAFK;AAAA,YAGLC,QAHK,UAGLA,QAHK;AAAA,YAILC,UAJK,UAILA,UAJK;AAAA,YAKLC,QALK,UAKLA,QALK;AAAA,YAMLC,QANK,UAMLA,QANK;AAAA,YAOLC,OAPK,UAOLA,OAPK;AAAA,YAQFN,KARE;;AAUP,eACE;AAAA;AAAA,uBACMA,KADN;AAEE,uBAAW,0BAAG,wBAAH,EAA6B;AACtC,0CAA4B,CAACM,OADS;AAEtC,2CAA6BA,OAFS;AAGtC,iDAAmCD;AAHG,aAA7B,EAIRJ,SAJQ;AAFb;AAQGC,kBARH;AASGC,wBAAcC,YAAY;AAT7B,SADF;AAaD;;;;;;AAtDkBL,a,CACZQ,S,GAAY;AACjB;;;;AAIAH,cAAU,oBAAUI,IALH;;AAOjB;;;AAGAP,eAAW,oBAAUQ,MAVJ;;AAYjB;;;AAGAP,cAAU,oBAAUQ,IAfH;;AAiBjB;;;AAGAL,cAAU,oBAAUG,IApBH;;AAsBjB;;;AAGAF,aAAS,oBAAUE,IAzBF;;AA2BjBL,gBAAY,0BAAW,oBAAUK,IAArB,EAA2B,wBAA3B;AA3BK,G;oBADAT,W","file":"CardActions.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport CardExpander from './CardExpander';\n\n/**\n * The `CardActions` component is used for adding actions on your card.\n * The actions should be `FlatButton`s or `IconButton`s.\n *\n * This component can act as a `CardExpander`.\n */\nexport default class CardActions extends Component {\n  static propTypes = {\n    /**\n     * Boolean if this component should act as an expander and inject the\n     * `CardExpander`.\n     */\n    expander: PropTypes.bool,\n\n    /**\n     * An optional className to apply to the actions container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An actions to display.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the actions should be centered.\n     */\n    centered: PropTypes.bool,\n\n    /**\n     * Boolean if the actions should be stacked.\n     */\n    stacked: PropTypes.bool,\n\n    isExpander: deprecated(PropTypes.bool, 'Use `expander` instead'),\n  };\n\n  render() {\n    const {\n      className,\n      children,\n      isExpander,\n      expander,\n      centered,\n      stacked,\n      ...props\n    } = this.props;\n    return (\n      <section\n        {...props}\n        className={cn('md-dialog-footer--card', {\n          'md-dialog-footer--inline': !stacked,\n          'md-dialog-footer--stacked': stacked,\n          'md-dialog-footer--card-centered': centered,\n        }, className)}\n      >\n        {children}\n        {isExpander || expander && <CardExpander />}\n      </section>\n    );\n  }\n}\n"]}