{"version":3,"sources":["../../src/js/Cards/CardMedia.js"],"names":["CardMedia","props","className","children","overlay","aspect","equal","wide","propTypes","string","node","forceAspect","bool","aspectRatio","oneOf","isRequired","expandable","component","oneOfType","func","deprecated","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAaqBA,S;;;;;;;;;;;+BA2DV;AAAA,qBAKH,KAAKC,KALF;AAAA,YAELC,SAFK,UAELA,SAFK;AAAA,YAGLC,QAHK,UAGLA,QAHK;AAAA,YAIFF,KAJE;;AAMP,eAAOA,MAAMG,OAAb;;AANO,YAQDA,OARC,GAQW,KAAKH,KARhB,CAQDG,OARC;;AASP,YAAIA,OAAJ,EAAa;AACXA,oBAAU;AAAA;AAAA;AAAeA;AAAf,WAAV;AACD;;AAED,eACE;AAAA;AAAA,qBAAO,WAAW,0BAAG,eAAH,EAAoBF,SAApB,CAAlB,IAAsDD,KAAtD;AACGE,kBADH;AAEGC;AAFH,SADF;AAMD;;;;;;AA9EkBJ,W,CACZK,M,GAAS;AACdC,WAAO,KADO;AAEdC,UAAM;AAFQ,G;AADGP,W,CAMZQ,S,GAAY;AACjB;;;AAGAN,eAAW,oBAAUO,MAJJ;;AAMjB;;;;AAIAL,aAAS,0BAAW,oBAAUM,IAArB,EAA2B,qDAA3B,CAVQ;;AAYjB;;;AAGAP,cAAU,oBAAUO,IAfH;;AAiBjB;;;AAGAC,iBAAa,oBAAUC,IApBN;;AAsBjB;;;AAGAC,iBAAa,oBAAUC,KAAV,CAAgB,CAACd,UAAUK,MAAV,CAAiBC,KAAlB,EAAyBN,UAAUK,MAAV,CAAiBE,IAA1C,CAAhB,EAAiEQ,UAzB7D;;AA2BjB;;;;AAIAC,gBAAY,oBAAUJ,IA/BL;;AAiCjB;;;AAGAK,eAAW,oBAAUC,SAAV,CAAoB,CAC7B,oBAAUC,IADmB,EAE7B,oBAAUV,MAFmB,CAApB,EAGRM,UAvCc;;AAyCjBK,gBAAY,mCACV,qFACA,oBAFU;AAzCK,G;AANApB,W,CAqDZqB,Y,GAAe;AACpBV,iBAAa,IADO;AAEpBE,iBAAab,UAAUK,MAAV,CAAiBE,IAFV;AAGpBU,eAAW;AAHS,G;oBArDHjB,S","file":"CardMedia.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport componentDeprecated from '../utils/PropTypes/componentDeprecated';\nimport Media from '../Media/Media';\nimport MediaOverlay from '../Media/MediaOverlay';\n\n/**\n * The `CardMedia` component is used to display images or some sort\n * media.\n */\nexport default class CardMedia extends PureComponent {\n  static aspect = {\n    equal: '1-1',\n    wide: '16-9',\n  };\n\n  static propTypes = {\n    /**\n     * An optional className to apply to the card media component.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional overlay component to be rendered over the media. This *should*\n     * be A `CardTitle`, `CardActions` or both.\n     */\n    overlay: deprecated(PropTypes.node, 'Use the `MediaOverlay` component as a child instead'),\n\n    /**\n     * Any media to display.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the aspect ratio should be forced.\n     */\n    forceAspect: PropTypes.bool,\n\n    /**\n     * The aspect ratio to use.\n     */\n    aspectRatio: PropTypes.oneOf([CardMedia.aspect.equal, CardMedia.aspect.wide]).isRequired,\n\n    /**\n     * Boolean if this component should be expandable when there is a `CardExpander`\n     * above it in the `Card`.\n     */\n    expandable: PropTypes.bool,\n\n    /**\n     * The component to render the card media as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n\n    deprecated: componentDeprecated(\n      'There were no unique styles for media in cards so it is simpler to just use the ' +\n      '`Media` component.'\n    ),\n  };\n\n  static defaultProps = {\n    forceAspect: true,\n    aspectRatio: CardMedia.aspect.wide,\n    component: 'section',\n  };\n\n  render() {\n    const {\n      className,\n      children,\n      ...props\n    } = this.props;\n    delete props.overlay;\n\n    let { overlay } = this.props;\n    if (overlay) {\n      overlay = <MediaOverlay>{overlay}</MediaOverlay>;\n    }\n\n    return (\n      <Media className={cn('md-card-media', className)} {...props}>\n        {children}\n        {overlay}\n      </Media>\n    );\n  }\n}\n"]}