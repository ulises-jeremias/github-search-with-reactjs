{"version":3,"sources":["../../src/js/Cards/CardTitle.js"],"names":["CardTitle","props","id","style","className","title","subtitle","expander","isExpander","children","propAvatar","avatar","avatarClassName","only","propTypes","oneOfType","number","string","object","node","isRequired","element","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAYqBA,S;;;;;;;;;;;+BAkDV;AAAA,qBAYH,KAAKC,KAZF;AAAA,YAELC,EAFK,UAELA,EAFK;AAAA,YAGLC,KAHK,UAGLA,KAHK;AAAA,YAILC,SAJK,UAILA,SAJK;AAAA,YAKLC,KALK,UAKLA,KALK;AAAA,YAMLC,QANK,UAMLA,QANK;AAAA,YAOLC,QAPK,UAOLA,QAPK;AAAA,YAQLC,UARK,UAQLA,UARK;AAAA,YASLC,QATK,UASLA,QATK;AAAA,YAUGC,UAVH,UAULC,MAVK;AAAA,YAWFV,KAXE;;AAAA,YAcDU,MAdC,GAcU,KAAKV,KAdf,CAcDU,MAdC;;AAeP,YAAIA,MAAJ,EAAY;AAAA,cACSC,eADT,GAC6B,gBAASC,IAAT,CAAcF,MAAd,EAAsBV,KADnD,CACFG,SADE;;AAEVO,mBAAS,yBAAaA,MAAb,EAAqB;AAC5BP,uBAAW,0BAAG,iBAAH,EAAsBQ,eAAtB;AADiB,WAArB,CAAT;AAGD;AACD,eACE;AAAA;AAAA,uBACMX,KADN;AAEE,mBAAOE,KAFT;AAGE,uBAAW,0BAAG,eAAH,EAAoB;AAC7B,wCAA0B,CAACQ;AADE,aAApB,EAERP,SAFQ;AAHb;AAOGO,gBAPH;AAQE,oEAAgB,IAAIT,EAApB,EAAwB,OAAOG,KAA/B,EAAsC,UAAUC,QAAhD,EAA0D,QAAQ,CAAC,CAACK,MAApE,GARF;AASGF,kBATH;AAUGD,wBAAcD,YAAY;AAV7B,SADF;AAcD;;;;;;AArFkBP,W,CACZc,S,GAAY;AACjB;;;AAGAZ,QAAI,oBAAUa,SAAV,CAAoB,CACtB,oBAAUC,MADY,EAEtB,oBAAUC,MAFY,CAApB,CAJa;;AASjB;;;AAGAd,WAAO,oBAAUe,MAZA;;AAcjB;;;AAGAd,eAAW,oBAAUa,MAjBJ;;AAmBjB;;;AAGAZ,WAAO,oBAAUc,IAAV,CAAeC,UAtBL;;AAwBjB;;;AAGAd,cAAU,oBAAUa,IA3BH;;AA6BjB;;;;AAIAV,cAAU,oBAAUU,IAjCH;;AAmCjB;;;AAGAR,YAAQ,oBAAUU,OAtCD;;AAwCjB;;;;AAIAd,cAAU,oBAAUe,IA5CH;;AA8CjBd,gBAAY,0BAAW,oBAAUc,IAArB,EAA2B,wBAA3B;AA9CK,G;oBADAtB,S","file":"CardTitle.js","sourcesContent":["import React, { Component, Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport CardTitleBlock from './CardTitleBlock';\nimport CardExpander from './CardExpander';\n\n/**\n * The `CardTitle` component is used to render a title in a Card along\n * with an optional subtitle or avatar.\n */\nexport default class CardTitle extends Component {\n  static propTypes = {\n    /**\n     * An optional id to add to the `title`.\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The title to display.\n     */\n    title: PropTypes.node.isRequired,\n\n    /**\n     * An optional subtitle to display.\n     */\n    subtitle: PropTypes.node,\n\n    /**\n     * Any additional children to display in the title block\n     * after the avatar, title, and subtitle.\n     */\n    children: PropTypes.node,\n\n    /**\n     * An optional avatar to display before the title and subtitle.\n     */\n    avatar: PropTypes.element,\n\n    /**\n     * Boolean if the `CardTitle` component should inject a button\n     * for expanding all children below it.\n     */\n    expander: PropTypes.bool,\n\n    isExpander: deprecated(PropTypes.bool, 'Use `expander` instead'),\n  };\n\n  render() {\n    const {\n      id,\n      style,\n      className,\n      title,\n      subtitle,\n      expander,\n      isExpander,\n      children,\n      avatar: propAvatar, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    let { avatar } = this.props;\n    if (avatar) {\n      const { className: avatarClassName } = Children.only(avatar).props;\n      avatar = cloneElement(avatar, {\n        className: cn('md-avatar--card', avatarClassName),\n      });\n    }\n    return (\n      <div\n        {...props}\n        style={style}\n        className={cn('md-card-title', {\n          'md-card-title--primary': !avatar,\n        }, className)}\n      >\n        {avatar}\n        <CardTitleBlock id={id} title={title} subtitle={subtitle} avatar={!!avatar} />\n        {children}\n        {isExpander || expander && <CardExpander />}\n      </div>\n    );\n  }\n}\n"]}