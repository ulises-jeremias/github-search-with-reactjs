{"version":3,"sources":["../../src/js/DataTables/DropdownMenuColumn.js"],"names":["DropdownMenuColumn","props","style","className","menuStyle","menuClassName","header","adjusted","tooltipLabel","tooltipDelay","tooltipPosition","Positions","HorizontalAnchors","VerticalAnchors","propTypes","id","oneOfType","number","string","object","fixedTo","oneOf","repositionOnScroll","bool","repositionOnResize","simplifiedMenu","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAQMA,kB;;;;;;;;;;;+BA6GK;AAAA,qBAYH,KAAKC,KAZF;AAAA,YAELC,KAFK,UAELA,KAFK;AAAA,YAGLC,SAHK,UAGLA,SAHK;AAAA,YAILC,SAJK,UAILA,SAJK;AAAA,YAKLC,aALK,UAKLA,aALK;AAAA,YAMLC,MANK,UAMLA,MANK;AAAA,YAOLC,QAPK,UAOLA,QAPK;AAAA,YAQLC,YARK,UAQLA,YARK;AAAA,YASLC,YATK,UASLA,YATK;AAAA,YAULC,eAVK,UAULA,eAVK;AAAA,YAWFT,KAXE;;AAaP,eACE;AAAA;AAAA;AACE,mBAAOC,KADT;AAEE,uBAAWC,SAFb;AAGE,oBAAQG,MAHV;AAIE,sBAAUC,QAJZ;AAKE,0BAAcC,YALhB;AAME,0BAAcC,YANhB;AAOE,6BAAiBC;AAPnB;AASE,6EAAkBT,KAAlB,IAAyB,OAAOG,SAAhC,EAA2C,WAAWC,aAAtD;AATF,SADF;AAaD;;;;;;AAvIGL,oB,CACGW,S,GAAY,uBAAaA,S;AAD5BX,oB,CAEGY,iB,GAAoB,uBAAaA,iB;AAFpCZ,oB,CAGGa,e,GAAkB,uBAAaA,e;AAHlCb,oB,CAIGc,S,GAAY;AACjB;;;;AAIAC,QAAI,oBAAUC,SAAV,CAAoB,CACtB,oBAAUC,MADY,EAEtB,oBAAUC,MAFY,CAApB,CALa;;AAUjB;;;AAGAhB,WAAO,oBAAUiB,MAbA;;AAejB;;;AAGAhB,eAAW,oBAAUe,MAlBJ;;AAoBjB;;;;;AAKAd,eAAW,oBAAUe,MAzBJ;;AA2BjB;;;;;AAKAd,mBAAe,oBAAUa,MAhCR;;AAkCjB;;;;;;;AAOAE,mCAzCiB;;AA2CjB;;;;;AAKAZ,kBAAc,oBAAUU,MAhDP;;AAkDjB;;;;;AAKAT,kBAAc,oBAAUQ,MAvDP;;AAyDjB;;;;;AAKAP,qBAAiB,oBAAUW,KAAV,CAAgB,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,CAAhB,CA9DA;;AAgEjB;;;;;;AAMAC,wBAAoB,oBAAUC,IAtEb;;AAwEjB;;;;;;AAMAC,wBAAoB,oBAAUD,IA9Eb;;AAgFjB;;;;;;;AAOAE,oBAAgB,oBAAUF,IAvFT;;AAyFjB;;;;AAIAjB,YAAQ,oBAAUiB,IA7FD;;AA+FjB;;;AAGAhB,cAAU,oBAAUgB;AAlGH,G;AAJfvB,oB,CAyGG0B,Y,GAAe;AACpBD,oBAAgB;AADI,G;oBAiCT,8BAAezB,kBAAf,EAAmC,aAAnC,C","file":"DropdownMenuColumn.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport fixedToShape from '../Helpers/fixedToShape';\nimport withTableFixes from './withTableFixes';\nimport DropdownMenu from '../Menus/DropdownMenu';\nimport TableColumn from './TableColumn';\n\nclass DropdownMenuColumn extends PureComponent {\n  static Positions = DropdownMenu.Positions;\n  static HorizontalAnchors = DropdownMenu.HorizontalAnchors;\n  static VerticalAnchors = DropdownMenu.VerticalAnchors;\n  static propTypes = {\n    /**\n     * An optional id to use for the menu button in the column. If this is omitted, it's value will be\n     * `${rowId}-${cellIndex}-menu-button`\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * This is the optional style to apply to the `TableColumn`.\n     */\n    style: PropTypes.object,\n\n    /**\n     * This is the optional className to apply to the `TableColumn`.\n     */\n    className: PropTypes.string,\n\n    /**\n     * The is the optional style to apply to the menu button's menu container.\n     *\n     * @see {@link Menus/DropdownMenu#style}\n     */\n    menuStyle: PropTypes.object,\n\n    /**\n     * The is the optional class name to apply to the menu button's menu container.\n     *\n     * @see {@link Menus/DropdownMenu#className}\n     */\n    menuClassName: PropTypes.string,\n\n    /**\n     * This is how the select field should be fixed within the table. When this is omitted,\n     * it will automatically use the responsive table as the fixture so that the select field\n     * will close/adjust itself to the scrolling of the table.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * The optional tooltip to render on hover.\n     *\n     * @see {@link DataTables/TableColumn#tooltipLabel}\n     */\n    tooltipLabel: PropTypes.string,\n\n    /**\n     * An optional delay to apply to the tooltip before it appears.\n     *\n     * @see {@link DataTables/TableColumn#tooltipDelay}\n     */\n    tooltipDelay: PropTypes.number,\n\n    /**\n     * The position of the tooltip.\n     *\n     * @see {@link DataTables/TableColumn#tooltipPosition}\n     */\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * This is injected by the `TableRow` component.\n     * @access private\n     */\n    header: PropTypes.bool,\n\n    /**\n     * @access private\n     */\n    adjusted: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    simplifiedMenu: false,\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      menuStyle,\n      menuClassName,\n      header,\n      adjusted,\n      tooltipLabel,\n      tooltipDelay,\n      tooltipPosition,\n      ...props\n    } = this.props;\n    return (\n      <TableColumn\n        style={style}\n        className={className}\n        header={header}\n        adjusted={adjusted}\n        tooltipLabel={tooltipLabel}\n        tooltipDelay={tooltipDelay}\n        tooltipPosition={tooltipPosition}\n      >\n        <DropdownMenu {...props} style={menuStyle} className={menuClassName} />\n      </TableColumn>\n    );\n  }\n}\n\nexport default withTableFixes(DropdownMenuColumn, 'menu-button');\n"]}