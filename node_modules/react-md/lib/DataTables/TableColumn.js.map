{"version":3,"sources":["../../src/js/DataTables/TableColumn.js"],"names":["CELL_SCOPE","header","scope","noop","TableColumn","props","className","fixedStyle","fixedClassName","numeric","children","sorted","sortIcon","tooltip","selectColumnHeader","adjusted","grow","propPlain","plain","propScope","cellIndex","sortIconChildren","sortIconClassName","sortable","context","Component","displayedChildren","ariaSort","icon","Children","only","cloneElement","flipped","fixedHeader","fixedFooter","footer","fixed","baseClassNames","text","hint","mergedClassNames","propTypes","style","object","string","node","bool","element","isRequired","tooltipLabel","tooltipDelay","number","tooltipPosition","oneOf","defaultProps","contextTypes"],"mappings":"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","file":"TableColumn.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport themeColors from '../utils/themeColors';\nimport getCollapserStyles from '../utils/getCollapserStyles';\nimport getField from '../utils/getField';\nimport injectTooltip from '../Tooltips/injectTooltip';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport IconSeparator from '../Helpers/IconSeparator';\n\nconst CELL_SCOPE = {\n  header: {\n    scope: 'col',\n  },\n  noop: {},\n};\n\n/**\n * A column in a table. This is either the `th` or `td` component.\n */\nclass TableColumn extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * The optional className for the table column\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the surrounding div when the DataTable has been\n     * set to include a fixed header or a fixed footer.\n     */\n    fixedStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the surrounding div when the DataTable has been\n     * set to include a fixed header or a fixed footer.\n     */\n    fixedClassName: PropTypes.string,\n\n    /**\n     * The children to display in the column.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the column is currently sorted. If this prop is not `undefined`,\n     * it will add the sort icon unto this column. You will also need to use the\n     * `onClick` function to toggle the `sorted` prop as well as handling the sorting\n     * of data.\n     *\n     * This value should really only be set in the `TableHeader` component.\n     */\n    sorted: PropTypes.bool,\n\n    /**\n     * The icon to show when a column is sortable.\n     */\n    sortIcon: PropTypes.element,\n\n    /**\n     * A boolean if the column has numeric data. It will right-align the data.\n     */\n    numeric: PropTypes.bool,\n\n    /**\n     * Boolean if the table column should gain the `.md-data-table--adjusted` class name. By default,\n     * every column will gain this class name unless it is an `EditDialogColumn`, a `SelectFieldColumn`,\n     * or the `grow` prop is enabled.\n     */\n    adjusted: PropTypes.bool,\n\n    /**\n     * Boolean if the column should expand to fill any remaining width in the container. There should\n     * really only be one column with the `grow` prop enabled. In addition, it should really only be\n     * applied to one of the columns in the TableHeader.\n     */\n    grow: PropTypes.bool,\n\n    /**\n     * Boolean if this column is the `th` for a column of `SelectFieldColumn`. This will apply\n     * additional styling to the column to position with the select field.\n     */\n    selectColumnHeader: PropTypes.bool,\n\n    /**\n     * Boolean if this is a `th` component. This value **should** be set\n     * automatically for you if it is in the `TableHeader` component.\n     */\n    header: PropTypes.bool.isRequired,\n\n    /**\n     * The optional tooltip to render on hover.\n     */\n    tooltipLabel: PropTypes.node,\n\n    /**\n     * An optional delay to apply to the tooltip before it appears.\n     */\n    tooltipDelay: PropTypes.number,\n\n    /**\n     * The position of the tooltip.\n     */\n    tooltipPosition: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n\n    /**\n     * The injected tooltip.\n     * @access private\n     */\n    tooltip: PropTypes.node,\n\n    /**\n     * Boolean if the `TableColumn` should gain the `plain` styles. This means that the text\n     * in the column can wrap and there is no height limit enforced with some additional padding.\n     */\n    plain: PropTypes.bool,\n\n    /**\n     * An optional scope to apply to the table column. If omitted, the scope will be set to\n     * `'col'` if inside of the `TableHeader` component. This is really only needed for\n     * header columns.\n     */\n    scope: PropTypes.oneOf(['row', 'col']),\n\n    /**\n     * This is injected by the `TableRow` component to help with generating ids\n     * @access private\n     */\n    cellIndex: PropTypes.number,\n    sortIconChildren: deprecated(PropTypes.node, 'Use the `sortIcon` prop instead'),\n    sortIconClassName: deprecated(PropTypes.string, 'Use the `sortIcon` prop instead'),\n  };\n\n  static defaultProps = {\n    header: false,\n    adjusted: true,\n    sortIcon: <FontIcon>arrow_upward</FontIcon>,\n  };\n\n  static contextTypes = {\n    plain: PropTypes.bool,\n    footer: PropTypes.bool,\n    fixedHeader: PropTypes.bool,\n    fixedFooter: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      className,\n      fixedStyle,\n      fixedClassName,\n      numeric,\n      header,\n      children,\n      sorted,\n      sortIcon,\n      tooltip,\n      selectColumnHeader,\n      adjusted,\n      grow,\n      /* eslint-disable no-unused-vars */\n      plain: propPlain,\n      scope: propScope,\n      cellIndex,\n\n      // deprecated\n      sortIconChildren,\n      sortIconClassName,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const sortable = typeof sorted === 'boolean';\n    const plain = getField(this.props, this.context, 'plain');\n    const Component = header ? 'th' : 'td';\n    const scope = getField(this.props, CELL_SCOPE[header ? 'header' : 'noop'], 'scope');\n\n    let displayedChildren = children;\n    let ariaSort;\n    if (sortable) {\n      ariaSort = sorted ? 'ascending' : 'descending';\n      const icon = React.Children.only(getDeprecatedIcon(sortIconClassName, sortIconChildren, sortIcon));\n      displayedChildren = (\n        <IconSeparator label={children} iconBefore>\n          {React.cloneElement(icon, { className: getCollapserStyles({ flipped: !sorted }, icon.props.className) })}\n        </IconSeparator>\n      );\n    }\n\n    const fixedHeader = header && this.context.fixedHeader;\n    const fixedFooter = this.context.footer && this.context.fixedFooter;\n    const fixed = fixedHeader || fixedFooter;\n    const baseClassNames = themeColors({ text: !header, hint: header }, {\n      'md-table-column--relative': tooltip,\n      'md-table-column--select-field': selectColumnHeader,\n    });\n\n    const mergedClassNames = cn({\n      'md-table-column--header': header,\n      'md-table-column--data': !header && !plain,\n      'md-table-column--plain': !header && plain,\n      'md-table-column--adjusted': adjusted && !grow && !selectColumnHeader,\n      'md-table-column--grow': grow,\n      'md-table-column--sortable md-pointer--hover': sortable,\n      [baseClassNames]: !fixed,\n    }, className);\n\n    if (fixed) {\n      displayedChildren = (\n        <div\n          className={cn('md-table-column__fixed', {\n            'md-table-column__fixed--header': fixedHeader,\n            'md-table-column__fixed--footer': fixedFooter,\n          })}\n        >\n          <div\n            style={fixedStyle}\n            className={cn(baseClassNames, mergedClassNames, 'md-table-column__fixed--flex', {\n              'md-table-column__fixed--flex-right': numeric,\n            }, fixedClassName)}\n          >\n            {tooltip}\n            {displayedChildren}\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <Component\n        aria-sort={ariaSort}\n        {...props}\n        scope={scope}\n        className={cn('md-table-column', {\n          'md-table-column--fixed': fixed,\n          'md-text-left': !numeric && !fixed,\n          'md-text-right': numeric && !fixed,\n        }, mergedClassNames)}\n      >\n        {!fixedHeader && !fixedFooter && tooltip}\n        {displayedChildren}\n      </Component>\n    );\n  }\n}\n\nexport default injectTooltip(TableColumn);\n"]}