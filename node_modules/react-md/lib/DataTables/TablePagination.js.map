{"version":3,"sources":["../../src/js/DataTables/TablePagination.js"],"names":["TablePagination","props","context","controlledPage","page","controlledRowsPerPage","rowsPerPage","defaultRowsPerPage","defaultPage","state","start","controlsMarginLeft","_table","_ticking","nextProps","rpp","p","setState","className","selectFieldStyle","selectFieldClassName","selectFieldInputStyle","selectFieldInputClassName","rows","rowsPerPageLabel","rowsPerPageItems","incrementIcon","decrementIcon","simplifiedMenu","incrementIconChildren","incrementIconClassName","decrementIconChildren","decrementIconClassName","propId","id","propIncrementId","incrementId","propDecrementId","decrementId","onPagination","propRowsPerPage","propPage","baseId","pagination","Math","min","_throttledPosition","_setControls","marginLeft","Positions","BELOW","_setRowsPerPage","_decrement","_increment","propTypes","oneOfType","number","string","style","object","bool","func","isRequired","node","arrayOf","element","contextTypes","fixedFooter","defaultProps","controls","_controls","addEventListener","_position","offsetWidth","scrollLeft","max","requestAnimationFrame","newStart","nextPage","nextState"],"mappings":"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","file":"TablePagination.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport ResizeObserver from '../Helpers/ResizeObserver';\nimport SelectField from '../SelectFields/SelectField';\nimport Button from '../Buttons/Button';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport findTable from './findTable';\nimport TableFooter from './TableFooter';\nimport TableColumn from './TableColumn';\n\n/**\n * The `TablePagination` component is used to generate the table footer that helps\n * pagination through a large dataset by limiting the number of rows per page.\n * The pagination will always be placed persistently at the bottom of the table\n * so that when a user scrolls to the right, they will always be able to use the\n * pagination.\n */\nexport default class TablePagination extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional id to provide to the select field. If this is omitted, it will be\n     * the `DataTable`'s `baseId` with '-pagination'.\n     *\n     * @see {@link DataTables/DataTable#baseId}\n     */\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the increment icon button. If this is omitted, it will be\n     * the `id` with '-increment-btn'.\n     *\n     * @see {@link #id}\n     */\n    incrementId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the decrement icon button. If this is omitted, it will be\n     * the `id` with '-decrement-btn'.\n     *\n     * @see {@link #id}\n     */\n    decrementId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the `tfoot` tag.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `tfoot` tag.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the select field.\n     *\n     * @see {@link SelectFields/SelectField#style}\n     */\n    selectFieldStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the select field.\n     *\n     * @see {@link SelectFields/SelectField#className}\n     */\n    selectFieldClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the select field's input.\n     *\n     * @see {@link SelectFields/SelectField#inputStyle}\n     */\n    selectFieldInputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the select field's input.\n     *\n     * @see {@link SelectFields/SelectField#inputClassName}\n     */\n    selectFieldInputClassName: PropTypes.string,\n\n    /**\n     * Boolean if the select field should use the simplified menu logic.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * A function to call when a user clicks the increment or decrement pagination\n     * icon button. This function will be given the new start index and the number\n     * or rows per page as well as the current page.\n     *\n     * ```js\n     * onPagination(newStart, rowsPerPage, currentPage);\n     * ```\n     */\n    onPagination: PropTypes.func.isRequired,\n\n    /**\n     * The current value for the select field holding the number of rows per page.\n     */\n    rowsPerPage: PropTypes.number,\n\n    /**\n     * The current page for the pagination. This will make the component controlled, so the only way to get pagination\n     * is making sure you are updating this prop after the `onPagination` callback is called.\n     *\n     * Pages start from 1 instead of 0.\n     */\n    page: PropTypes.number,\n\n    /**\n     * The default page to start from for the pagination. Pages start from 1 instead of 0.\n     */\n    defaultPage: PropTypes.number.isRequired,\n\n    /**\n     * The default number of rows per page to display. This will be the value for the\n     * `SelectField`.\n     */\n    defaultRowsPerPage: PropTypes.number.isRequired,\n\n    /**\n     * The label to use for the rows per page `SelectField`.\n     */\n    rowsPerPageLabel: PropTypes.node.isRequired,\n\n    /**\n     * A list of numbers for the amount of rows per page to display at a time.\n     * This will be rendered into the `SelectField`.\n     */\n    rowsPerPageItems: PropTypes.arrayOf(PropTypes.number).isRequired,\n\n    /**\n     * The total number of rows that can be displayed. This is the unfiltered/non-subset\n     * number of rows. This is used to help calculate the increment/decrement values to\n     * display and determine if the user can increment/decrement again.\n     */\n    rows: PropTypes.number.isRequired,\n\n    /**\n     * The icon to use for the increment icon button.\n     */\n    incrementIcon: PropTypes.element,\n\n    /**\n     * The icon to use for the decrement icon button.\n     */\n    decrementIcon: PropTypes.element,\n\n    incrementIconChildren: deprecated(PropTypes.node, 'Use the `incrementIcon` prop instead'),\n    incrementIconClassName: deprecated(PropTypes.string, 'Use the `incrementIcon` prop instead'),\n    decrementIconChildren: deprecated(PropTypes.node, 'Use the `decrementIcon` prop instead'),\n    decrementIconClassName: deprecated(PropTypes.string, 'Use the `decrementIcon` prop instead'),\n  };\n\n  static contextTypes = {\n    baseId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    fixedFooter: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    defaultPage: 1,\n    defaultRowsPerPage: 10,\n    rowsPerPageLabel: 'Rows per page:',\n    rowsPerPageItems: [10, 20, 30, 40, 50, 100],\n    incrementIcon: <FontIcon>keyboard_arrow_right</FontIcon>,\n    decrementIcon: <FontIcon>keyboard_arrow_left</FontIcon>,\n    simplifiedMenu: false,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    const controlledPage = typeof props.page !== 'undefined';\n    const controlledRowsPerPage = typeof props.rowsPerPage !== 'undefined';\n    const rowsPerPage = controlledRowsPerPage ? props.rowsPerPage : props.defaultRowsPerPage;\n    const page = controlledPage ? props.page : props.defaultPage;\n    this.state = {\n      start: (page - 1) * rowsPerPage,\n      controlsMarginLeft: 0,\n    };\n\n    if (!controlledPage) {\n      this.state.page = page;\n    }\n\n    if (!controlledRowsPerPage) {\n      this.state.rowsPerPage = props.defaultRowsPerPage;\n    }\n\n    this._table = null;\n    this._ticking = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { rowsPerPage, page } = this.props;\n    if (page !== nextProps.page || rowsPerPage !== nextProps.rowsPerPage) {\n      const rpp = getField(nextProps, this.state, 'rowsPerPage');\n      const p = getField(nextProps, this.state, 'page');\n\n      this.setState({ start: (p - 1) * rpp });\n    }\n  }\n\n  _setControls = (controls) => {\n    this._controls = controls;\n    this._table = findTable(controls);\n\n    if (this._table && this.context.fixedFooter) {\n      this._table.addEventListener('scroll', this._throttledPosition);\n    }\n  };\n\n  _position = () => {\n    if (this._table) {\n      const { fixedFooter } = this.context;\n      const { offsetWidth, scrollLeft } = this._table;\n\n      let controlsMarginLeft = offsetWidth - this._controls.offsetWidth;\n      if (fixedFooter) {\n        controlsMarginLeft += scrollLeft;\n      }\n\n      this.setState({\n        controlsMarginLeft: Math.max(24, controlsMarginLeft),\n      });\n    }\n  };\n\n  _throttledPosition = () => {\n    if (!this._ticking) {\n      requestAnimationFrame(() => {\n        this._ticking = false;\n        this._position();\n      });\n    }\n\n    this._ticking = true;\n  };\n\n  _increment = () => {\n    const { rows, onPagination } = this.props;\n    const { start } = this.state;\n    const rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\n    const page = getField(this.props, this.state, 'page');\n\n    // Only correct multiple of rows per page\n    const max = rows - (rows % rowsPerPage);\n\n    const newStart = Math.min(start + rowsPerPage, max);\n    const nextPage = page + 1;\n\n    onPagination(newStart, rowsPerPage, nextPage);\n    if (typeof this.props.page === 'undefined') {\n      this.setState({ start: newStart, page: nextPage });\n    }\n  };\n\n  _decrement = () => {\n    const { start } = this.state;\n    const page = getField(this.props, this.state, 'page');\n    const rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\n    const newStart = Math.max(0, start - rowsPerPage);\n    const nextPage = page - 1;\n\n    this.props.onPagination(newStart, rowsPerPage, nextPage);\n    if (typeof this.props.page === 'undefined') {\n      this.setState({ start: newStart, page: nextPage });\n    }\n  };\n\n  _setRowsPerPage = (rowsPerPage) => {\n    const page = 1;\n    const newStart = 0;\n    this.props.onPagination(newStart, rowsPerPage, page);\n    let nextState;\n    if (typeof this.props.rowsPerPage === 'undefined') {\n      nextState = { rowsPerPage };\n    }\n\n    if (typeof this.props.page === 'undefined') {\n      nextState = nextState || {};\n      nextState.start = newStart;\n    }\n\n    if (nextState) {\n      this.setState(nextState);\n    }\n  };\n\n  render() {\n    const { controlsMarginLeft, start } = this.state;\n    const {\n      className,\n      selectFieldStyle,\n      selectFieldClassName,\n      selectFieldInputStyle,\n      selectFieldInputClassName,\n      rows,\n      rowsPerPageLabel,\n      rowsPerPageItems,\n      incrementIcon,\n      decrementIcon,\n      simplifiedMenu,\n\n      // deprecated\n      incrementIconChildren,\n      incrementIconClassName,\n      decrementIconChildren,\n      decrementIconClassName,\n      /* eslint-disable no-unused-vars */\n      id: propId,\n      incrementId: propIncrementId,\n      decrementId: propDecrementId,\n      onPagination,\n      rowsPerPage: propRowsPerPage,\n      page: propPage,\n      defaultPage,\n      defaultRowsPerPage,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const { baseId } = this.context;\n    const rowsPerPage = getField(this.props, this.state, 'rowsPerPage');\n    let { id, incrementId, decrementId } = this.props;\n    if (!id) {\n      id = `${baseId}-pagination`;\n    }\n\n    if (!incrementId) {\n      incrementId = `${id}-increment-btn`;\n    }\n\n    if (!decrementId) {\n      decrementId = `${id}-decrement-btn`;\n    }\n\n    const pagination = `${start + 1}-${Math.min(rows, start + rowsPerPage)} of ${rows}`;\n    return (\n      <TableFooter {...props} className={cn('md-table-footer--pagination', className)}>\n        <ResizeObserver watchWidth component=\"tr\" onResize={this._throttledPosition} />\n        <ResizeObserver watchWidth component=\"tr\" target={this._table} onResize={this._throttledPosition} />\n        <tr>\n          {/* colspan 100% so footer columns do not align with body and header */}\n          <TableColumn colSpan=\"100%\">\n            <div\n              ref={this._setControls}\n              className=\"md-table-pagination md-table-pagination--controls md-text\"\n              style={{ marginLeft: controlsMarginLeft }}\n            >\n              <span className=\"md-table-pagination__label\">\n                {rowsPerPageLabel}\n              </span>\n              <SelectField\n                id={id}\n                menuItems={rowsPerPageItems}\n                position={SelectField.Positions.BELOW}\n                style={selectFieldStyle}\n                className={selectFieldClassName}\n                inputStyle={selectFieldInputStyle}\n                inputClassName={cn('md-select-field--pagination', selectFieldInputClassName)}\n                value={rowsPerPage}\n                onChange={this._setRowsPerPage}\n                simplifiedMenu={simplifiedMenu}\n              />\n              <span className=\"md-table-pagination--label\">{pagination}</span>\n              <Button\n                id={decrementId}\n                icon\n                onClick={this._decrement}\n                disabled={start === 0}\n                iconEl={getDeprecatedIcon(decrementIconClassName, decrementIconChildren, decrementIcon)}\n              />\n              <Button\n                id={incrementId}\n                icon\n                onClick={this._increment}\n                disabled={start + rowsPerPage >= rows}\n                iconEl={getDeprecatedIcon(incrementIconClassName, incrementIconChildren, incrementIcon)}\n              />\n            </div>\n            {/*\n              * Since the footer controls is positioned absolutely for a persistent footer,\n              * we have a mask to correctly set the height of the footer.\n              */}\n            <div className=\"md-table-pagination\" />\n          </TableColumn>\n        </tr>\n      </TableFooter>\n    );\n  }\n}\n"]}