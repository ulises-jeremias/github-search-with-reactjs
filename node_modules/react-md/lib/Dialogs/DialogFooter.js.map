{"version":3,"sources":["../../src/js/Dialogs/DialogFooter.js"],"names":["FOOTER_PADDING","DialogFooter","state","stacked","_setContainer","container","_container","maxWidth","offsetWidth","Array","prototype","slice","call","querySelectorAll","some","setState","_generateActions","actions","props","isArray","map","_toElement","action","index","button","only","key","className","label","children","remaining","propStacked","length","stackedDefined","propTypes","style","object","string","node","oneOfType","element","arrayOf","bool"],"mappings":"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","file":"DialogFooter.js","sourcesContent":["import React, { PureComponent, Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport Button from '../Buttons/Button';\n\nconst FOOTER_PADDING = 8;\n\nexport default class DialogFooter extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    children: PropTypes.node,\n    actions: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.object,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.element,\n        PropTypes.object,\n      ])),\n    ]),\n    stacked: PropTypes.bool,\n  };\n\n  state = { stacked: false };\n\n  _toElement(action, index) {\n    if (isValidElement(action)) {\n      const button = Children.only(action);\n\n      return cloneElement(action, {\n        key: button.key || index,\n        className: cn('md-btn--dialog', button.props.className),\n      });\n    }\n\n    // Both label and children are valid for dialog actions\n    const { label, children, ...remaining } = action;\n    return (\n      <Button\n        key={index}\n        flat\n        {...remaining}\n        className={cn('md-btn--dialog', action.className)}\n      >\n        {label || children}\n      </Button>\n    );\n  }\n\n  _setContainer = (container) => {\n    if (container !== null) {\n      this._container = container;\n      const maxWidth = (this._container.offsetWidth - (FOOTER_PADDING * 3)) / 2;\n\n      let stacked = false;\n      Array.prototype.slice.call(this._container.querySelectorAll('.md-btn'))\n        .some(({ offsetWidth }) => {\n          stacked = offsetWidth > maxWidth;\n          return stacked;\n        });\n\n      this.setState({ stacked });\n    }\n  };\n\n  _generateActions = () => {\n    const { actions } = this.props;\n    if (!actions) {\n      return null;\n    } else if (Array.isArray(actions)) {\n      return actions.map(this._toElement);\n    }\n\n    return this._toElement(actions);\n  };\n\n  render() {\n    const {\n      actions,\n      className,\n      children,\n      stacked: propStacked,\n      ...props\n    } = this.props;\n\n    if (!children && (!actions || (Array.isArray(actions) && !actions.length))) {\n      return null;\n    }\n\n    let { stacked } = this.props;\n    const stackedDefined = typeof propStacked !== 'undefined';\n    if (!stackedDefined) {\n      stacked = this.state.stacked;\n    }\n\n    return (\n      <footer\n        {...props}\n        className={cn('md-dialog-footer', {\n          'md-dialog-footer--inline': !stacked,\n          'md-dialog-footer--stacked': stacked,\n        }, className)}\n        ref={!stackedDefined ? this._setContainer : null}\n      >\n        {this._generateActions()}\n        {children}\n      </footer>\n    );\n  }\n}\n"]}