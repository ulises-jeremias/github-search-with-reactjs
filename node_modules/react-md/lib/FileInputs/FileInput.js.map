{"version":3,"sources":["../../src/js/FileInputs/FileInput.js"],"names":["FileInput","state","hover","pressed","value","_handleChange","e","props","multiple","onChange","allowDuplicates","target","files","Array","prototype","slice","call","setState","_blur","disabled","_timeout","_attemptedBlur","_handleMouseUp","onMouseUp","_handleMouseDown","onMouseDown","_handleTouchStart","onTouchStart","_handleTouchEnd","onTouchEnd","_handleKeyUp","onKeyUp","which","keyCode","window","addEventListener","_handleKeyDown","onKeyDown","key","removeEventListener","preventDefault","click","_handleMouseOver","onMouseOver","_handleMouseLeave","onMouseLeave","nextProps","nextState","setTimeout","clearTimeout","style","className","labelStyle","labelClassName","label","primary","secondary","flat","id","name","iconBefore","accept","swapTheming","iconChildren","iconClassName","propIcon","icon","propValue","labelChildren","cloneElement","inherit","raised","propTypes","oneOfType","string","number","object","bool","node","element","func","defaultProps"],"mappings":"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","file":"FileInput.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { TAB, SPACE, ENTER } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\nimport getBtnStyles from '../Buttons/getBtnStyles';\nimport FontIcon from '../FontIcons/FontIcon';\nimport IconSeparator from '../Helpers/IconSeparator';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\n\n/**\n * The `FileInput` component is used as simple styling for the `<input type=\"file\" />`.\n * It will style the input as a raised button by default.\n */\nexport default class FileInput extends PureComponent {\n  static propTypes = {\n    /**\n     * The id for the text field. This is required for a11y and to get the `input type=\"file\"` to\n     * open.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ])),\n\n    /**\n     * An optional name to provide to the input.\n     */\n    name: PropTypes.string,\n\n    /**\n     * An optional style to apply.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the label.\n     */\n    labelStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the label.\n     */\n    labelClassName: PropTypes.string,\n\n    /**\n     * Boolean if the `FileInput` should be styled with the primary color.\n     */\n    primary: PropTypes.bool,\n\n    /**\n     * Boolean if the `FileInput` should be styled with the secondary color.\n     */\n    secondary: PropTypes.bool,\n\n    /**\n     * Boolean if the `FileInput` should be styled as a flat button instead of a\n     * raised button.\n     */\n    flat: PropTypes.bool,\n\n    /**\n     * Boolean if the theming should be swapped from text to background or vice-versa.\n     *\n     * @see {@link Buttons/Button#swapTheming}\n     */\n    swapTheming: PropTypes.bool,\n\n    /**\n     * This should be a comma separated list of Media Types that the `FileInput` can\n     * accept. If this prop is left blank, any file will be accepted.\n     *\n     * The values can either be:\n     * - A file extension\n     * - audio/*\n     * - video/*\n     * - image/*\n     * - any valid [IANA Media Type](http://www.iana.org/assignments/media-types/media-types.xhtml)\n     *\n     * > NOTE: IE does not enforce this.\n     */\n    accept: PropTypes.string,\n\n    /**\n     * Boolean if the same file is allowed to be uploaded multiple times. This will basically make the\n     * `value` of the file input always blank.\n     */\n    allowDuplicates: PropTypes.bool,\n\n    /**\n     * Boolean if multiple files will be accepted.\n     */\n    multiple: PropTypes.bool,\n\n    /**\n     * A label to display on the `FileInput`. This will be used with the `AccessibleFakeInkedButton` component to\n     * create a `<label>` for the `<input type=\"file\">`.\n     */\n    label: PropTypes.node,\n\n    /**\n     * Boolean if the icons should appear before the label.\n     */\n    iconBefore: PropTypes.bool,\n\n    /**\n     * An optional icon to display with the file download. This can be a `FontIcon` or an `SVGIcon`.\n     */\n    icon: PropTypes.element,\n\n    /**\n     * A function to call when the value of the input changes. This will\n     * be triggered when the user selects a new file or cancels the new file selection.\n     *\n     * This function will be given the new [FileList](https://developer.mozilla.org/en-US/docs/Web/API/FileList)\n     * as an array and the change event. If this is not a multiple file input, only the\n     * newly selected File will be given instead of a list of one file. Since this is an\n     * `input` tag, the user will not be able to select the same file multiple times unless\n     * you manually clear the input's value.\n     *\n     * > NOTE: If the user hits cancel, null will be given for a single file input.\n     *\n     * ```js\n     * onChange(files, e);\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional value to apply to the `FileInput`. This is usually not needed and the\n     * `allowDuplicates` is what you are probably looking for instead.\n     *\n     * @see {@link #allowDuplicates}\n     */\n    value: PropTypes.string,\n\n    /**\n     * Boolean if the `FileInput` is currently disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional function to call when they keyup event is triggered on the file input's label.\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * An optional function to call when they keydown event is triggered on the file input's label.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when they mouseup event is triggered on the file input's label.\n     */\n    onMouseUp: PropTypes.func,\n\n    /**\n     * An optional function to call when they mousedown event is triggered on the file input's label.\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * An optional function to call when they mouseover event is triggered on the file input's label.\n     */\n    onMouseOver: PropTypes.func,\n\n    /**\n     * An optional function to call when they mouseleave event is triggered on the file input's label.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when they touchend event is triggered on the file input's label.\n     */\n    onTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when they touchstart event is triggered on the file input's label.\n     */\n    onTouchStart: PropTypes.func,\n\n    iconChildren: deprecated(PropTypes.node, 'Use `icon` instead'),\n    iconClassName: deprecated(PropTypes.string, 'Use `icon` instead'),\n  };\n\n  static defaultProps = {\n    label: 'Select a file',\n    icon: <FontIcon>file_upload</FontIcon>,\n    allowDuplicates: false,\n  };\n\n  state = { hover: false, pressed: false, value: '' };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.disabled && !nextProps.disabled && this.state.hover) {\n      this.setState({ hover: false });\n    }\n\n    if (nextProps.allowDuplicates && this.state.value) {\n      this.setState({ value: '' });\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    // I honestly don't remember why this was implemented, but it was copied from the Button\n    // component\n    if (!this.state.pressed && nextState.pressed) {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n        if (this._attemptedBlur) {\n          this._attemptedBlur = false;\n\n          this.setState({ pressed: false });\n        }\n      }, 450);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    window.removeEventListener('click', this._blur);\n  }\n\n  _handleChange = (e) => {\n    const { multiple, onChange, allowDuplicates } = this.props;\n    const { files, value } = e.target;\n    if (onChange) {\n      if (!multiple) {\n        onChange(files[0] || null, e);\n      } else {\n        onChange(Array.prototype.slice.call(files), e);\n      }\n    }\n\n    if (!allowDuplicates) {\n      this.setState({ value });\n    }\n  };\n\n  _blur = () => {\n    if (this.props.disabled) {\n      return;\n    }\n\n    if (this._timeout) {\n      this._attemptedBlur = true;\n    } else {\n      this.setState({ pressed: false });\n    }\n  };\n\n  _handleMouseUp = (e) => {\n    if (this.props.onMouseUp) {\n      this.props.onMouseUp(e);\n    }\n\n    this._blur();\n  };\n\n  _handleMouseDown = (e) => {\n    if (this.props.onMouseDown) {\n      this.props.onMouseDown(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ pressed: true });\n    }\n  };\n\n  _handleTouchStart = (e) => {\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ pressed: true });\n    }\n  };\n\n  _handleTouchEnd = (e) => {\n    if (this.props.onTouchEnd) {\n      this.props.onTouchEnd(e);\n    }\n\n    this._blur();\n    captureNextEvent('mouseover');\n  };\n\n  _handleKeyUp = (e) => {\n    if (this.props.onKeyUp) {\n      this.props.onKeyUp(e);\n    }\n\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.addEventListener('click', this._blur);\n      this.setState({ pressed: true });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n\n    const key = e.which || e.keyCode;\n\n    if (key === TAB) {\n      window.removeEventListener('click', this._blur);\n      this.setState({ pressed: false });\n    } else if (key === SPACE || key === ENTER) {\n      e.preventDefault();\n      e.target.click();\n    }\n  };\n\n  _handleMouseOver = (e) => {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ hover: true });\n    }\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ hover: false });\n    }\n  };\n\n  render() {\n    const { hover, pressed } = this.state;\n    const {\n      style,\n      className,\n      labelStyle,\n      labelClassName,\n      label,\n      primary,\n      secondary,\n      flat,\n      id,\n      name,\n      iconBefore,\n      disabled,\n      accept,\n      multiple,\n      swapTheming,\n\n      // Deprecated\n      iconChildren,\n      iconClassName,\n      /* eslint-disable no-unused-vars */\n      icon: propIcon,\n      value: propValue,\n      allowDuplicates,\n      onChange,\n      onKeyUp,\n      onKeyDown,\n      onMouseUp,\n      onMouseDown,\n      onMouseOver,\n      onMouseLeave,\n      onTouchStart,\n      onTouchEnd,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n    const value = getField(this.props, this.state, 'value');\n    let { icon } = this.props;\n    if (iconClassName || iconChildren) {\n      icon = <FontIcon iconClassName={iconClassName}>{iconChildren}</FontIcon>;\n    }\n\n    let labelChildren = label;\n    if (icon) {\n      icon = React.cloneElement(icon, { inherit: true });\n      labelChildren = <IconSeparator label={label} iconBefore={iconBefore}>{icon}</IconSeparator>;\n    }\n\n    return (\n      <div\n        {...props}\n        style={style}\n        className={cn('md-inline-block md-file-input-container', className)}\n      >\n        <AccessibleFakeInkedButton\n          component=\"label\"\n          htmlFor={id}\n          disabled={disabled}\n          onTouchStart={this._handleTouchStart}\n          onTouchEnd={this._handleTouchEnd}\n          onMouseDown={this._handleMouseDown}\n          onMouseUp={this._handleMouseUp}\n          onKeyDown={this._handleKeyDown}\n          onKeyUp={this._handleKeyUp}\n          onMouseOver={this._handleMouseOver}\n          onMouseLeave={this._handleMouseLeave}\n          style={labelStyle}\n          className={getBtnStyles({\n            flat,\n            raised: !flat,\n            disabled,\n            primary,\n            secondary,\n            hover,\n            swapTheming,\n            pressed,\n          }, labelClassName)}\n        >\n          {labelChildren}\n        </AccessibleFakeInkedButton>\n        <input\n          id={id}\n          name={name}\n          accept={accept}\n          type=\"file\"\n          multiple={multiple}\n          disabled={disabled}\n          aria-hidden=\"true\"\n          className=\"md-file-input\"\n          onChange={this._handleChange}\n          value={value}\n          tabIndex={-1}\n        />\n      </div>\n    );\n  }\n}\n"]}