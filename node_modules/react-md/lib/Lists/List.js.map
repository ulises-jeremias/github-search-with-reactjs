{"version":3,"sources":["../../src/js/Lists/List.js"],"names":["List","state","context","listLevel","cascadingFixedTo","cascadingMenu","list","offsetHeight","scrollHeight","y","setState","props","className","ordered","children","subheader","inline","primarySubheader","cascadingZDepth","subheaderEl","Component","propTypes","style","object","string","bool","node","childContextTypes","number","contextTypes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAaqBA,I;;;;;;;;;;;;;;oLA8CnBC,K,GAAQ,E;;;;;wCAEU;AAAA,uBACkB,KAAKC,OADvB;AAAA,YACRC,SADQ,YACRA,SADQ;AAAA,YACMD,OADN;;AAEhB,YAAME,mBAAmB,wBAAS,KAAKH,KAAd,EAAqB,KAAKC,OAA1B,EAAmC,kBAAnC,CAAzB;AACA,4BACKA,OADL;AAEEE,4CAFF;AAGED,qBAAW,OAAOA,SAAP,KAAqB,WAArB,GACP,CADO,GAEPA,YAAY;AALlB;AAOD;;;0CAEmB;AAClB,YAAI,KAAKD,OAAL,CAAaG,aAAjB,EAAgC;AAC9B,cAAMC,OAAO,2BAAY,IAAZ,CAAb;AACA,cAAIA,KAAKC,YAAL,GAAoBD,KAAKE,YAA7B,EAA2C;AACzC,gBAAMJ,mBAAmB,EAAEK,GAAG,2BAAY,IAAZ,CAAL,EAAzB;AACA,iBAAKC,QAAL,CAAc,EAAEN,kCAAF,EAAd,EAFyC,CAEJ;AACtC;AACF;AACF;;;+BAEQ;AAAA;;AAAA,qBASH,KAAKO,KATF;AAAA,YAELC,SAFK,UAELA,SAFK;AAAA,YAGLC,OAHK,UAGLA,OAHK;AAAA,YAILC,QAJK,UAILA,QAJK;AAAA,YAKLC,SALK,UAKLA,SALK;AAAA,YAMLC,MANK,UAMLA,MANK;AAAA,YAOLC,gBAPK,UAOLA,gBAPK;AAAA,YAQFN,KARE;;AAAA,wBAU+C,KAAKT,OAVpD;AAAA,YAUCG,aAVD,aAUCA,aAVD;AAAA,YAUgBa,eAVhB,aAUgBA,eAVhB;AAAA,YAUiCf,SAVjC,aAUiCA,SAVjC;;;AAYP,YAAIgB,oBAAJ;AACA,YAAIJ,SAAJ,EAAe;AACbI,wBAAc,sDAAW,KAAI,WAAf,EAA2B,aAAaJ,SAAxC,EAAmD,SAASE,gBAA5D,GAAd;AACD;;AAED,YAAMG,YAAYP,UAAU,IAAV,GAAiB,IAAnC;AACA,eACE;AAAC,mBAAD;AAAA,uBACMF,KADN;AAEE,uBAAW,0BAAG,SAAH;AACT,iCAAmBK,MADV;AAET,yCAA2BX;AAFlB,4DAGca,eAHd,EAGkCA,mBAAmBb,aAAnB,IAAoCF,YAAY,CAHlF,6CAIWA,SAJX,EAIyBA,aAAa,CAACE,aAJvC,SAKRO,SALQ;AAFb;AASGO,qBATH;AAUGL;AAVH,SADF;AAcD;;;;;;AAtGkBd,M,CACZqB,S,GAAY;AACjB;;;AAGAC,WAAO,oBAAUC,MAJA;;AAMjB;;;AAGAX,eAAW,oBAAUY,MATJ;;AAWjB;;;;AAIAX,aAAS,oBAAUY,IAfF;;AAiBjB;;;;AAIAX,cAAU,oBAAUY,IArBH;;AAuBjB;;;AAGAV,YAAQ,oBAAUS,IA1BD;AA2BjBV,eAAW,0BAAW,oBAAUS,MAArB,EAA6B,kDAA7B,CA3BM;AA4BjBP,sBAAkB,0BAAW,oBAAUQ,IAArB,EAA2B,kDAA3B;AA5BD,G;AADAzB,M,CAgCZ2B,iB,GAAoB;AACzBxB,eAAW,oBAAUyB,MADI;AAEzBvB,mBAAe,oBAAUoB,IAFA;AAGzBrB,4CAHyB;AAIzBc,qBAAiB,oBAAUU;AAJF,G;AAhCR5B,M,CAuCZ6B,Y,GAAe;AACpB1B,eAAW,oBAAUyB,MADD;AAEpBvB,mBAAe,oBAAUoB,IAFL;AAGpBrB,4CAHoB;AAIpBc,qBAAiB,oBAAUU;AAJP,G;oBAvCH5B,I","file":"List.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport getField from '../utils/getField';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport Subheader from '../Subheaders';\n\n/**\n * Lists present multiple line items vertically as a single continuous element.\n */\nexport default class List extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the list.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the list.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Boolean if this should be an ordered list (`<ol>`) component. Otherwise, it will\n     * be rendered as `<ul>`.\n     */\n    ordered: PropTypes.bool,\n\n    /**\n     * This *should* be a list of `ListItem`, `ListItemControl`, `Divider`, or\n     * `Subheader`.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the list should appear horizontally instead of vertically.\n     */\n    inline: PropTypes.bool,\n    subheader: deprecated(PropTypes.string, 'Use the `Subheader` component as a child instead'),\n    primarySubheader: deprecated(PropTypes.bool, 'Use the `Subheader` component as a child instead'),\n  };\n\n  static childContextTypes = {\n    listLevel: PropTypes.number,\n    cascadingMenu: PropTypes.bool,\n    cascadingFixedTo: fixedToShape,\n    cascadingZDepth: PropTypes.number,\n  };\n\n  static contextTypes = {\n    listLevel: PropTypes.number,\n    cascadingMenu: PropTypes.bool,\n    cascadingFixedTo: fixedToShape,\n    cascadingZDepth: PropTypes.number,\n  };\n\n  state = {};\n\n  getChildContext() {\n    const { listLevel, ...context } = this.context;\n    const cascadingFixedTo = getField(this.state, this.context, 'cascadingFixedTo');\n    return {\n      ...context,\n      cascadingFixedTo,\n      listLevel: typeof listLevel === 'undefined'\n        ? 1\n        : listLevel + 1,\n    };\n  }\n\n  componentDidMount() {\n    if (this.context.cascadingMenu) {\n      const list = findDOMNode(this);\n      if (list.offsetHeight < list.scrollHeight) {\n        const cascadingFixedTo = { y: findDOMNode(this) };\n        this.setState({ cascadingFixedTo }); // eslint-disable-line react/no-did-mount-set-state\n      }\n    }\n  }\n\n  render() {\n    const {\n      className,\n      ordered,\n      children,\n      subheader,\n      inline,\n      primarySubheader,\n      ...props\n    } = this.props;\n    const { cascadingMenu, cascadingZDepth, listLevel } = this.context;\n\n    let subheaderEl;\n    if (subheader) {\n      subheaderEl = <Subheader key=\"subheader\" primaryText={subheader} primary={primarySubheader} />;\n    }\n\n    const Component = ordered ? 'ol' : 'ul';\n    return (\n      <Component\n        {...props}\n        className={cn('md-list', {\n          'md-list--inline': inline,\n          'md-list--menu-cascading': cascadingMenu,\n          [`md-paper md-paper--${cascadingZDepth}`]: cascadingZDepth && cascadingMenu && listLevel > 0,\n          [`md-list--nested-${listLevel}`]: listLevel && !cascadingMenu,\n        }, className)}\n      >\n        {subheaderEl}\n        {children}\n      </Component>\n    );\n  }\n}\n"]}