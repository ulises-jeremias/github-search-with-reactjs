{"version":3,"sources":["../../src/js/Lists/ListItem.js"],"names":["ListItem","props","state","active","isOpen","visible","defined","v","initiallyOpen","defaultOpen","defaultVisible","window","removeEventListener","_handleOutsideClick","_touchTimeout","clearTimeout","style","className","tileStyle","tileClassName","nestedListStyle","nestedListClassName","nestedListHeightRestricted","disabled","leftIcon","leftAvatar","inset","rightIcon","rightAvatar","primaryText","secondaryText","threeLines","children","nestedItems","prependNested","activeClassName","animateNestedItems","expanderIcon","expanderLeft","component","ItemComponent","itemComponent","itemProps","tileProps","passPropsToItem","ariaSize","ariaPos","expanderIconChildren","expanderIconClassName","propVisible","context","cascadingId","cascadingMenu","cascadingAnchor","cascadingFixedTo","leftNode","rightNode","nestedList","icon","Children","only","collapser","cloneElement","flipped","icond","avatard","tile","undefined","_setTile","_handleClick","_handleMouseOver","_handleMouseLeave","_handleTouchStart","_handleTouchEnd","_handleKeyDown","_handleKeyUp","_touched","text","sharedProps","ref","_setContainer","Positions","BELOW","propTypes","object","string","bool","node","tabIndex","number","isRequired","oneOfType","func","arrayOf","element","onClick","onMouseOver","onMouseLeave","onTouchStart","onTouchEnd","onKeyDown","onKeyUp","propName","args","validator","defaultProps","contextTypes","focus","_tile","blur","_tileNode","container","_container","e","contains","target","setState","touchedAt","Date","now","time","setTimeout","which","keyCode","addEventListener"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA0BqBA,Q;;;AA6SnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sHACXA,KADW;;AAAA;;AAGjB,YAAKC,KAAL,GAAa,EAAEC,QAAQ,KAAV,EAAb;;AAEA,UAAI,OAAOF,MAAMG,MAAb,KAAwB,WAAxB,IAAuC,OAAOH,MAAMI,OAAb,KAAyB,WAApE,EAAiF;AAC/E,YAAMC,UAAU,SAAVA,OAAU;AAAA,iBAAK,OAAOC,CAAP,KAAa,WAAlB;AAAA,SAAhB;AAD+E,0BAExB,MAAKN,KAFmB;AAAA,YAEvEO,aAFuE,eAEvEA,aAFuE;AAAA,YAExDC,WAFwD,eAExDA,WAFwD;AAAA,YAE3CC,cAF2C,eAE3CA,cAF2C;;AAG/E,YAAIL,UAAUC,QAAQE,aAAR,IAAyBA,aAAzB,GAAyCE,cAAvD;AACAL,kBAAUC,QAAQG,WAAR,IAAuBA,WAAvB,GAAqCJ,OAA/C;AACAA,kBAAU,CAAC,CAACA,OAAZ;;AAEA,cAAKH,KAAL,CAAWG,OAAX,GAAqBA,OAArB;AACD;AAbgB;AAclB;;;;6CAEsB;AACrB,YAAI,KAAKH,KAAL,CAAWC,MAAf,EAAuB;AACrBQ,iBAAOC,mBAAP,CAA2B,OAA3B,EAAoC,KAAKC,mBAAzC;AACD;;AAED,YAAI,KAAKC,aAAT,EAAwB;AACtBC,uBAAa,KAAKD,aAAlB;AACD;AACF;;;+BAoHQ;AAAA,qBA+CH,KAAKb,KA/CF;AAAA,YAELe,KAFK,UAELA,KAFK;AAAA,YAGLC,SAHK,UAGLA,SAHK;AAAA,YAILC,SAJK,UAILA,SAJK;AAAA,YAKLC,aALK,UAKLA,aALK;AAAA,YAMLC,eANK,UAMLA,eANK;AAAA,YAOLC,mBAPK,UAOLA,mBAPK;AAAA,YAQLC,0BARK,UAQLA,0BARK;AAAA,YASLC,QATK,UASLA,QATK;AAAA,YAULC,QAVK,UAULA,QAVK;AAAA,YAWLC,UAXK,UAWLA,UAXK;AAAA,YAYLC,KAZK,UAYLA,KAZK;AAAA,YAaLC,SAbK,UAaLA,SAbK;AAAA,YAcLC,WAdK,UAcLA,WAdK;AAAA,YAeLC,WAfK,UAeLA,WAfK;AAAA,YAgBLC,aAhBK,UAgBLA,aAhBK;AAAA,YAiBLC,UAjBK,UAiBLA,UAjBK;AAAA,YAkBLC,QAlBK,UAkBLA,QAlBK;AAAA,YAmBLC,WAnBK,UAmBLA,WAnBK;AAAA,YAoBLC,aApBK,UAoBLA,aApBK;AAAA,YAqBL/B,MArBK,UAqBLA,MArBK;AAAA,YAsBLgC,eAtBK,UAsBLA,eAtBK;AAAA,YAuBLC,kBAvBK,UAuBLA,kBAvBK;AAAA,YAwBLC,YAxBK,UAwBLA,YAxBK;AAAA,YAyBLC,YAzBK,UAyBLA,YAzBK;AAAA,YA0BLC,SA1BK,UA0BLA,SA1BK;AAAA,YA2BUC,aA3BV,UA2BLC,aA3BK;AAAA,YA4BLC,SA5BK,UA4BLA,SA5BK;AAAA,YA6BLC,SA7BK,UA6BLA,SA7BK;AAAA,YA8BLC,eA9BK,UA8BLA,eA9BK;AAAA,YA+BWC,QA/BX,UA+BL,cA/BK;AAAA,YAgCYC,OAhCZ,UAgCL,eAhCK;AAAA,YAmCL1C,MAnCK,UAmCLA,MAnCK;AAAA,YAoCL2C,oBApCK,UAoCLA,oBApCK;AAAA,YAqCLC,qBArCK,UAqCLA,qBArCK;AAAA,YAuCIC,WAvCJ,UAuCL5C,OAvCK;AAAA,YAwCLK,cAxCK,UAwCLA,cAxCK;AAAA,YA2CLD,WA3CK,UA2CLA,WA3CK;AAAA,YA4CLD,aA5CK,UA4CLA,aA5CK;AAAA,YA8CFP,KA9CE,oeA+BL,cA/BK,EAgCL,eAhCK;;AAAA,uBAiDmE,KAAKiD,OAjDxE;AAAA,YAiDCC,WAjDD,YAiDCA,WAjDD;AAAA,YAiDcC,aAjDd,YAiDcA,aAjDd;AAAA,YAiD6BC,eAjD7B,YAiD6BA,eAjD7B;AAAA,YAiD8CC,gBAjD9C,YAiD8CA,gBAjD9C;;AAkDP,YAAIjD,UAAU,wBAAS,KAAKJ,KAAd,EAAqB,KAAKC,KAA1B,EAAiC,SAAjC,CAAd;AACA,YAAI,OAAOE,MAAP,KAAkB,WAAtB,EAAmC;AACjCC,oBAAUD,MAAV;AACD;;AAED,YAAImD,WACF;AACE,eAAI,YADN;AAEE,kBAAQpD,MAFV;AAGE,2BAAiBgC,eAHnB;AAIE,gBAAMX,QAJR;AAKE,kBAAQC;AALV,UADF;;AAUA,YAAI+B,YACF;AACE,eAAI,aADN;AAEE,kBAAQrD,MAFV;AAGE,2BAAiBgC,eAHnB;AAIE,gBAAMR,SAJR;AAKE,kBAAQC;AALV,UADF;;AAUA,YAAI6B,mBAAJ;AACA,YAAIxB,WAAJ,EAAiB;AACf,cAAI,CAACmB,aAAL,EAAoB;AAClBK,yBACE;AAAA;AAAA,gBAAU,WAAW,CAACpD,OAAtB,EAA+B,SAAS+B,kBAAxC;AACE;AAAA;AAAA,kBAAM,OAAOhB,eAAb,EAA8B,WAAWC,mBAAzC;AAA+DY;AAA/D;AADF,aADF;AAKD;;AAED,cAAMyB,OAAO,gBAAMC,QAAN,CAAeC,IAAf,CAAoB,iCAAkBZ,qBAAlB,EAAyCD,oBAAzC,EAA+DV,YAA/D,CAApB,CAAb;AACA,cAAMwB,YACJ;AACE,iBAAI,gBADN;AAEE,kBAAM,gBAAMC,YAAN,CAAmBJ,IAAnB,EAAyB;AAC7BzC,yBAAW,kCAAmB,EAAE8C,SAAS1D,OAAX,EAAnB,EAAyCqD,KAAKzD,KAAL,CAAWgB,SAApD;AADkB,aAAzB,CAFR;AAKE,oBAAQ;AALV,YADF;;AAUA,cAAIqB,YAAJ,EAAkB;AAChB,gBAAI,CAACd,QAAD,IAAa,CAACC,UAAlB,EAA8B;AAC5B8B,yBAAWM,SAAX;AACD;AACF,WAJD,MAIO,IAAI,CAAClC,SAAD,IAAc,CAACC,WAAnB,EAAgC;AACrC4B,wBAAYK,SAAZ;AACD;AACF;;AAED,YAAMG,QAAQ,CAAC,CAACxC,QAAF,IAAc,CAAC,CAACG,SAAhB,IAA6B,CAAC,CAACM,WAA7C;AACA,YAAMgC,UAAU,CAAC,CAACxC,UAAF,IAAgB,CAAC,CAACG,WAAlC;;AAEA,YAAMsC,OACJ;AAAA;AAAA,uBACMvB,SADN,EAEOC,kBAAkBuB,SAAlB,GAA8BlE,KAFrC;AAGE,uBAAWsC,SAHb;AAIE,kCAAsB,KAAK6B,QAJ7B;AAKE,iBAAI,MALN;AAME,qBAAS,KAAKC,YANhB;AAOE,yBAAa,KAAKC,gBAPpB;AAQE,0BAAc,KAAKC,iBARrB;AASE,0BAAc,KAAKC,iBATrB;AAUE,wBAAY,KAAKC,eAVnB;AAWE,uBAAW,KAAKC,cAXlB;AAYE,qBAAS,KAAKC,YAZhB;AAaE,sBAAUpD,QAbZ;AAcE,mBAAOL,SAdT;AAeE,uBAAW,0BAAG,cAAH,EAAmB;AAC5B,sCAAwB,KAAKhB,KAAL,CAAWC,MAAX,IAAqB,CAAC,KAAKyE,QADvB;AAE5B,oCAAsB,CAAC9C,aAAD,IAAkBkC,KAAlB,IAA2B,CAACC,OAFtB;AAG5B,sCAAwB,CAACnC,aAAD,IAAkBmC,OAHd;AAI5B,yCAA2BnC,iBAAiB,CAACC,UAJjB;AAK5B,2CAA6BD,iBAAiBC,UALlB;AAM5B,qCAAuBL,SAAS,CAACF,QAAV,IAAsB,CAACC;AANlB,aAAnB,EAOR,2BAAY,EAAEF,kBAAF,EAAYsD,MAAM,IAAlB,EAAZ,CAPQ,EAO+B1D,aAP/B,CAfb;AAuBE,6BAAesC,cAAc,CAACL,aAAf,GAA+B/C,OAA/B,GAAyC;AAvB1D;AAyBGkD,kBAzBH;AA0BE;AACE,oBAAQpD,MADV;AAEE,6BAAiBgC,eAFnB;AAGE,sBAAUZ,QAHZ;AAIE,yBAAaM,WAJf;AAKE,2BAAeC,aALjB;AAME,wBAAYC,UANd;AAOE,uBAAW,0BAAG;AACZ,4CAA8BP,YAAYc,gBAAgBL,WAD9C;AAEZ,8CAAgCR,UAFpB;AAGZ,gDAAkCE,aAAaC;AAHnC,aAAH;AAPb,YA1BF;AAuCG4B,mBAvCH;AAwCGxB;AAxCH,SADF;;AA6CA,YAAM8C,2BACDpC,SADC,EAEAE,kBAAkB3C,KAAlB,GAA0BkE,SAF1B;AAGJnD,sBAHI;AAIJC,qBAAW,0BAAG,cAAH,EAAmB,EAAE,kCAAkCgB,WAApC,EAAnB,EAAsEhB,SAAtE,CAJP;AAKJ,0BAAgB4B,QALZ;AAMJ,2BAAiBC,OANb;AAOJiC,eAAK,KAAKC;AAPN,UAAN;AASA,YAAI5B,iBAAiBnB,WAArB,EAAkC;AAChC,iBACE;AAAA;AAAA;AACE,kBAAIkB,WADN;AAEE,uBAAS9C,OAFX;AAGE,uBAAS,KAAKgE,YAHhB;AAIE,sBAAQH,IAJV;AAKE,yBALF;AAME,0BAAY,KANd;AAOE,sBAAQb,eAPV;AAQE,2BAAa,IARf;AASE,wBAAU,eAAK4B,SAAL,CAAeC,KAT3B;AAUE,yBAAW1C,aAVb;AAWE,yBAAWpB,eAXb;AAYE,6BAAeC,mBAZjB;AAaE,oCAAsBC;AAbxB,eAcMwD,WAdN;AAeE,uBAASxB;AAfX;AAiBGrB;AAjBH,WADF;AAqBD;;AAED,eACE;AAAC,uBAAD;AAAmB6C,qBAAnB;AACG5C,0BAAgBuB,UAAhB,GAA6B,IADhC;AAEGS,cAFH;AAGGhC,0BAAgB,IAAhB,GAAuBuB;AAH1B,SADF;AAOD;;;;;;AA1nBkBzD,U,CACZmF,S,GAAY;AACjB;;;AAGAnE,WAAO,oBAAUoE,MAJA;;AAMjB;;;AAGAnE,eAAW,oBAAUoE,MATJ;;AAWjB;;;;;AAKAnE,eAAW,oBAAUkE,MAhBJ;;AAkBjB;;;;;AAKAjE,mBAAe,oBAAUkE,MAvBR;;AAyBjB;;;AAGAjE,qBAAiB,oBAAUgE,MA5BV;;AA8BjB;;;AAGA/D,yBAAqB,oBAAUgE,MAjCd;;AAmCjB;;;AAGA/D,gCAA4B,oBAAUgE,IAtCrB;;AAwCjB;;;;;;AAMAtD,cAAU,oBAAUuD,IA9CH;;AAgDjB;;;AAGAhE,cAAU,oBAAU+D,IAnDH;;AAqDjB;;;;AAIAE,cAAU,oBAAUC,MAzDH;;AA2DjB;;;;AAIA5D,iBAAa,oBAAU0D,IAAV,CAAeG,UA/DX;;AAiEjB;;;;;;AAMA5D,mBAAe,oBAAUyD,IAvER;;AAyEjB;;;AAGA/D,cAAU,oBAAU+D,IA5EH;;AA8EjB;;;;;AAKA9D,gBAAY,oBAAU8D,IAnFL;;AAqFjB;;;AAGA5D,eAAW,oBAAU4D,IAxFJ;;AA0FjB;;;;;AAKA3D,iBAAa,oBAAU2D,IA/FN;;AAiGjB;;;;AAIA7D,WAAO,oBAAU4D,IArGA;;AAuGjB;;;;AAIAvD,gBAAY,oBAAUuD,IA3GL;;AA6GjB;;;;;;;;;;AAUA/C,eAAW,oBAAUoD,SAAV,CAAoB,CAC7B,oBAAUN,MADmB,EAE7B,oBAAUO,IAFmB,CAApB,EAGRF,UA1Hc;;AA4HjB;;;;;;;AAOAjD,mBAAe,oBAAUkD,SAAV,CAAoB,CACjC,oBAAUN,MADuB,EAEjC,oBAAUO,IAFuB,CAApB,EAGZF,UAtIc;;AAwIjB;;;;;;;;;AASAzD,iBAAa,oBAAU4D,OAAV,CAAkB,oBAAUN,IAA5B,CAjJI;;AAmJjB;;;AAGArD,mBAAe,oBAAUoD,IAtJR;;AAwJjB;;;AAGA5E,oBAAgB,oBAAU4E,IA3JT;;AA6JjB;;;;;;AAMAjF,aAAS,0BAAW,oBAAUiF,IAArB,EAA2B,SAA3B,EAAsC,gBAAtC,CAnKQ;;AAqKjB;;;AAGAjD,kBAAc,oBAAUyD,OAxKP;;AA0KjB;;;AAGAxD,kBAAc,oBAAUgD,IA7KP;;AA+KjB;;;;AAIAS,aAAS,oBAAUH,IAnLF;;AAqLjB;;;AAGAI,iBAAa,oBAAUJ,IAxLN;;AA0LjB;;;AAGAK,kBAAc,oBAAUL,IA7LP;;AA+LjB;;;AAGAM,kBAAc,oBAAUN,IAlMP;;AAoMjB;;;AAGAO,gBAAY,oBAAUP,IAvML;;AAyMjB;;;AAGAQ,eAAW,oBAAUR,IA5MJ;;AA8MjB;;;AAGAS,aAAS,oBAAUT,IAjNF;;AAmNjB;;;;AAIAzF,YAAQ,oBAAUmF,IAvND;;AAyNjB;;;;AAIAnD,qBAAiB,oBAAUkD,MA7NV;;AA+NjB;;;AAGAjD,wBAAoB,oBAAUkD,IAlOb;;AAoOjB;;;;;;AAMA,oBAAgB,oBAAUG,MA1OT;;AA4OjB;;;;;;;AAOA,qBAAiB,sBAACxF,KAAD,EAAQqG,QAAR,EAA8B;AAAA,wCAATC,IAAS;AAATA,YAAS;AAAA;;AAC7C,UAAIC,YAAY,oBAAUf,MAA1B;AACA,UAAI,OAAOxF,MAAM,cAAN,CAAP,KAAiC,WAArC,EAAkD;AAChDuG,oBAAYA,UAAUd,UAAtB;AACD;;AAED,aAAOc,4BAAUvG,KAAV,EAAiBqG,QAAjB,SAA8BC,IAA9B,EAAP;AACD,KA1PgB;;AA4PjB;;;;;;AAMA7D,eAAW,oBAAU0C,MAlQJ;;AAoQjB;;;;;;AAMAzC,eAAW,oBAAUyC,MA1QJ;;AA4QjB;;;;;;AAMAxC,qBAAiB,oBAAU0C,IAlRV;AAmRjBvC,0BAAsB,0BAAW,oBAAUwC,IAArB,EAA2B,4BAA3B,CAnRL;AAoRjBvC,2BAAuB,0BAAW,oBAAUqC,MAArB,EAA6B,4BAA7B,CApRN;AAqRjB7E,mBAAe,0BAAW,oBAAU8E,IAArB,EAA2B,8BAA3B,CArRE;AAsRjB7E,iBAAa,0BAAW,oBAAU6E,IAArB,EAA2B,8BAA3B,CAtRI;AAuRjBlF,YAAQ,0BAAW,oBAAUkF,IAArB,EAA2B,uBAA3B;AAvRS,G;AADAtF,U,CA2RZyG,Y,GAAe;AACpBrE,wBAAoB,IADA;AAEpBD,qBAAiB,wBAFG;AAGpBI,eAAW,KAHS;AAIpBE,mBAAe,IAJK;AAKpBJ,kBAAc;AAAA;AAAA;AAAA;AAAA;AALM,G;AA3RHrC,U,CAmSZ0G,Y,GAAe;AACpBvD,iBAAa,oBAAUwC,SAAV,CAAoB,CAC/B,oBAAUF,MADqB,EAE/B,oBAAUJ,MAFqB,CAApB,CADO;AAKpBjC,mBAAe,oBAAUkC,IALL;AAMpBjC,0CANoB;AAOpBC;AAPoB,G;;;;;SAwCtBqD,K,GAAQ,YAAM;AACZ,UAAI,OAAKC,KAAT,EAAgB;AACd,eAAKA,KAAL,CAAWD,KAAX;AACD;AACF,K;;SAKDE,I,GAAO,YAAM;AACX,UAAI,OAAKD,KAAT,EAAgB;AACd,eAAKA,KAAL,CAAWC,IAAX;AACD;AACF,K;;SAEDzC,Q,GAAW,UAACF,IAAD,EAAU;AACnB,UAAIA,IAAJ,EAAU;AACR,eAAK0C,KAAL,GAAa1C,IAAb;AACA,eAAK4C,SAAL,GAAiB,2BAAY5C,IAAZ,CAAjB;AACD;AACF,K;;SAEDc,a,GAAgB,UAAC+B,SAAD,EAAe;AAC7B,UAAIA,SAAJ,EAAe;AACb,eAAKC,UAAL,GAAkB,2BAAYD,SAAZ,CAAlB;AACD;AACF,K;;SAEDlG,mB,GAAsB,UAACoG,CAAD,EAAO;AAC3B,UAAI,OAAKD,UAAL,IAAmB,CAAC,OAAKA,UAAL,CAAgBE,QAAhB,CAAyBD,EAAEE,MAA3B,CAAxB,EAA4D;AAC1DxG,eAAOC,mBAAP,CAA2B,OAA3B,EAAoC,OAAKC,mBAAzC;AACA,eAAKuG,QAAL,CAAc,EAAEjH,QAAQ,KAAV,EAAd;AACD;AACF,K;;SAEDkE,Y,GAAe,UAAC4C,CAAD,EAAO;AACpB,UAAI,OAAKhH,KAAL,CAAW8F,OAAf,EAAwB;AACtB,eAAK9F,KAAL,CAAW8F,OAAX,CAAmBkB,CAAnB;AACD;;AAED,UAAI,OAAO,OAAK/G,KAAL,CAAWG,OAAlB,KAA8B,WAAlC,EAA+C;AAC7C,eAAK+G,QAAL,CAAc,EAAE/G,SAAS,CAAC,OAAKH,KAAL,CAAWG,OAAvB,EAAd;AACD;AACF,K;;SAEDiE,gB,GAAmB,UAAC2C,CAAD,EAAO;AACxB,UAAI,OAAKhH,KAAL,CAAW+F,WAAf,EAA4B;AAC1B,eAAK/F,KAAL,CAAW+F,WAAX,CAAuBiB,CAAvB;AACD;;AAED,UAAI,CAAC,OAAKhH,KAAL,CAAWsB,QAAhB,EAA0B;AACxB,eAAK6F,QAAL,CAAc,EAAEjH,QAAQ,IAAV,EAAd;AACD;AACF,K;;SAEDoE,iB,GAAoB,UAAC0C,CAAD,EAAO;AACzB,UAAI,OAAKhH,KAAL,CAAWgG,YAAf,EAA6B;AAC3B,eAAKhG,KAAL,CAAWgG,YAAX,CAAwBgB,CAAxB;AACD;;AAED,UAAI,CAAC,OAAKhH,KAAL,CAAWsB,QAAhB,EAA0B;AACxB,eAAK6F,QAAL,CAAc,EAAEjH,QAAQ,KAAV,EAAd;AACD;AACF,K;;SAEDqE,iB,GAAoB,UAACyC,CAAD,EAAO;AACzB,UAAI,OAAKhH,KAAL,CAAWiG,YAAf,EAA6B;AAC3B,eAAKjG,KAAL,CAAWiG,YAAX,CAAwBe,CAAxB;AACD;;AAED,aAAKrC,QAAL,GAAgB,IAAhB;;AAEA,aAAKwC,QAAL,CAAc,EAAEjH,QAAQ,IAAV,EAAgBkH,WAAWC,KAAKC,GAAL,EAA3B,EAAd;AACD,K;;SAED9C,e,GAAkB,UAACwC,CAAD,EAAO;AACvB,UAAI,OAAKhH,KAAL,CAAWkG,UAAf,EAA2B;AACzB,eAAKlG,KAAL,CAAWkG,UAAX,CAAsBc,CAAtB;AACD;;AAED,UAAMO,OAAOF,KAAKC,GAAL,KAAa,OAAKrH,KAAL,CAAWmH,SAArC;AACA,aAAKvG,aAAL,GAAqB2G,WAAW,YAAM;AACpC,eAAK3G,aAAL,GAAqB,IAArB;;AAEA,eAAKsG,QAAL,CAAc,EAAEjH,QAAQ,KAAV,EAAd;AACD,OAJoB,EAIlBqH,OAAO,GAAP,GAAa,CAAb,GAAiB,MAAMA,IAJL,CAArB;AAKD,K;;SAED7C,Y,GAAe,UAACsC,CAAD,EAAO;AACpB,UAAI,OAAKhH,KAAL,CAAWoG,OAAf,EAAwB;AACtB,eAAKpG,KAAL,CAAWoG,OAAX,CAAmBY,CAAnB;AACD;;AAED,UAAI,CAACA,EAAES,KAAF,IAAWT,EAAEU,OAAd,mBAAJ,EAAoC;AAClChH,eAAOiH,gBAAP,CAAwB,OAAxB,EAAiC,OAAK/G,mBAAtC;AACA,eAAKuG,QAAL,CAAc,EAAEjH,QAAQ,IAAV,EAAd;AACD;AACF,K;;SAEDuE,c,GAAiB,UAACuC,CAAD,EAAO;AACtB,UAAI,OAAKhH,KAAL,CAAWmG,SAAf,EAA0B;AACxB,eAAKnG,KAAL,CAAWmG,SAAX,CAAqBa,CAArB;AACD;;AAED,UAAI,CAACA,EAAES,KAAF,IAAWT,EAAEU,OAAd,mBAAJ,EAAoC;AAClChH,eAAOC,mBAAP,CAA2B,OAA3B,EAAoC,OAAKC,mBAAzC;AACA,eAAKuG,QAAL,CAAc,EAAEjH,QAAQ,KAAV,EAAd;AACD;AACF,K;;;oBAvbkBH,Q","file":"ListItem.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport themeColors from '../utils/themeColors';\nimport getCollapserStyles from '../utils/getCollapserStyles';\nimport getField from '../utils/getField';\nimport controlled from '../utils/PropTypes/controlled';\nimport { TAB } from '../constants/keyCodes';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport Collapse from '../Helpers/Collapse';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport TileAddon from './TileAddon';\nimport ListItemText from './ListItemText';\nimport List from './List';\nimport Menu from '../Menus/Menu';\n\n/**\n * The `ListItem` component is used for rendering a `li` tag with text and optional\n * icons/avatars.\n */\nexport default class ListItem extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional style to apply to the `li` tag.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `li` tag.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `.md-list-tile`.\n     *\n     * @see {@link #component}\n     */\n    tileStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `.md-list-tile`.\n     *\n     * @see {@link #component}\n     */\n    tileClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the nested `List` that gets created when using `nestedItems`.\n     */\n    nestedListStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the nested `List` that gets created when using `nestedItems`.\n     */\n    nestedListClassName: PropTypes.string,\n\n    /**\n     * Boolean if the nested `List` in a cascading menu should be restricted.\n     */\n    nestedListHeightRestricted: PropTypes.bool,\n\n    /**\n     * Any additional children to display in the `.md-list-tile`. If you use this prop,\n     * you will most likely need to override the `height` for the `.md-list-tile--icon`,\n     * `.md-list-tile--avatar`, `.md-list-tile--two-lines`, and/or `.md-list-tile--three-lines`\n     * to get it to display correctly unless the children are positioned `absolute`.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the `ListItem` is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * An optional tab index for the `.md-list-tile`. If omitted, it will default to the\n     * `AccessibleFakeButton`'s `tabIndex` default prop value.\n     */\n    tabIndex: PropTypes.number,\n\n    /**\n     * The primary text to display. This will only be rendered as a single line. Any overflown\n     * text will be converted to ellipsis.\n     */\n    primaryText: PropTypes.node.isRequired,\n\n    /**\n     * An optional secondary text to display below the `primaryText`. This can be an additional\n     * one or two lines. Like the `primaryText`, and overflown text will be converted to ellipsis.\n     *\n     * You must set the `threeLines` prop to `true` if you want this to be displayed as two lines.\n     */\n    secondaryText: PropTypes.node,\n\n    /**\n     * An optional `FontIcon` to display to the left of the text.\n     */\n    leftIcon: PropTypes.node,\n\n    /**\n     * An optional `Avatar` to display to the left of the text. If you have a mixed `List` of\n     * `FontIcon` and `Avatar`, it is recommended to set the `iconSized` prop on the `Avatar` to\n     * `true` so that the `Avatar` will be scaled down to the `FontIcon` size.\n     */\n    leftAvatar: PropTypes.node,\n\n    /**\n     * An optional `FontIcon` to display to the right of the text.\n     */\n    rightIcon: PropTypes.node,\n\n    /**\n     * An optional `Avatar` to display to the right of the text. If you have a mixed `List` of\n     * `FontIcon` and `Avatar`, it is recommended to set the `iconSized` prop on the `Avatar` to\n     * `true` so that the `Avatar` will be scaled down to the `FontIcon` size.\n     */\n    rightAvatar: PropTypes.node,\n\n    /**\n     * Boolean if the list item should be inset as if there is a `leftIcon` or a `leftAvatar`.\n     * This is used for some lists where only a parent contains the icon.\n     */\n    inset: PropTypes.bool,\n\n    /**\n     * Boolean if the `secondaryText` should span two lines instead of one. This will include\n     * three lines of text in total when including the `primaryText`.\n     */\n    threeLines: PropTypes.bool,\n\n    /**\n     * The component to render the `.md-list-tile` as. This is mostly useful if you\n     * want to use the `ListItem` for navigation and working with the `react-router`'s `Link`\n     * component.\n     *\n     * This prop is **not** the top-most element of the `ListItem` component. To change the\n     * top-most element, see the `itemComponent` prop.\n     *\n     * @see {@link #itemComponent}\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n\n    /**\n     * The component to render the top-most element of the `ListItem` component. This is the\n     * `.md-list-item` and defaults to the `<li>` element.\n     *\n     * @see {@link #component}\n     * @see {@link #itemProps}\n     */\n    itemComponent: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n\n    /**\n     * An optional list of `ListItem`, `ListItemControl`, `Divider`, or `Subheader` components\n     * to render in a nested list. This will inject an expander icon to the right of the text\n     * in the `.md-list-tile` that rotates 180 degrees when open.\n     *\n     * The nested items will be visible once the user clicks on the `ListItem`.\n     *\n     * @see {@link #visible}\n     */\n    nestedItems: PropTypes.arrayOf(PropTypes.node),\n\n    /**\n     * An optional parameter determining whether `nestedItems` should be placed before or after `ListItemText`\n     */\n    prependNested: PropTypes.bool,\n\n    /**\n     * Boolean if the `nestedItems` are visible by default.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * Boolean if the `nestedItems` are visible. This will make the `nestedItems` controlled\n     * and require the `onClick` function to be defined.\n     *\n     * @see {@link #defaultVisible}\n     */\n    visible: controlled(PropTypes.bool, 'onClick', 'defaultVisible'),\n\n    /**\n     * An icon to use for the expander icon when there are nested items.\n     */\n    expanderIcon: PropTypes.element,\n\n    /**\n     * Boolean if the expander icon should appear as the left icon instead of the right.\n     */\n    expanderLeft: PropTypes.bool,\n\n    /**\n     * An optional function to call when the `.md-list-tile` is clicked. This is required if the\n     * `visible` prop is defined.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `mouseover` event.\n     */\n    onMouseOver: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `mouseleave` event.\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `touchstart` event.\n     */\n    onTouchStart: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `touchend` event.\n     */\n    onTouchEnd: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `keydown` event.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the `.md-list-tile` triggers the `keyup` event.\n     */\n    onKeyUp: PropTypes.func,\n\n    /**\n     * Boolean if the `ListItem` is currently active. This will apply the `activeClassName` prop\n     * to the `leftIcon`, `rightIcon`, and the `primaryText`.\n     */\n    active: PropTypes.bool,\n\n    /**\n     * The className to apply to the `leftIcon`, `rightIcon`, and `primaryText` when the `active`\n     * prop is `true`.\n     */\n    activeClassName: PropTypes.string,\n\n    /**\n     * Boolean if the nested items should animate when they appear or disappear.\n     */\n    animateNestedItems: PropTypes.bool,\n\n    /**\n     * Defines the number of items in the list. This is only required when all items in the\n     * list are not present in the DOM.\n     *\n     * @see https://www.w3.org/TR/wai-aria/states_and_properties#aria-setsize\n     */\n    'aria-setsize': PropTypes.number,\n\n    /**\n     * Defines the items position in the list. This is only required when all items in the list\n     * are not present in the DOM. The custom validation just requires this prop if the `aria-setsize`\n     * prop is defined as a helpful reminder.\n     *\n     * @see https://www.w3.org/TR/wai-aria/states_and_properties#aria-posinset\n     */\n    'aria-posinset': (props, propName, ...args) => {\n      let validator = PropTypes.number;\n      if (typeof props['aria-setsize'] !== 'undefined') {\n        validator = validator.isRequired;\n      }\n\n      return validator(props, propName, ...args);\n    },\n\n    /**\n     * Any additional props you would like to supply to the surrounding `<li>` tag for the `ListItem`.\n     * By default, all props will be provided to the inner `AccessibleFakeButton`. If the `passPropsToItem`\n     * prop is enabled, the remaining props will be provided to the `<lI>` tag instead and this prop\n     * is probably useless.\n     */\n    itemProps: PropTypes.object,\n\n    /**\n     * Any additional props you would like to add to the inner `AccessibleFakeButton`. By default, all the\n     * remaining props will be provided to the `AccessibleFakeButton`, so this prop is probably useless.\n     * Enabling the `passPropsToItem` prop will change the default behavior so that the remaining props\n     * are provided to the surrounding `<li>` node instead and this prop becomes useful.\n     */\n    tileProps: PropTypes.object,\n\n    /**\n     * All the remaining props should be passed to the surrounding `<li>` node instead of the `AccessibleFakeButton`.\n     *\n     * > NOTE: This will most likely become the default in the next *major* release. Migration warnings will be added\n     * if that is the case.\n     */\n    passPropsToItem: PropTypes.bool,\n    expanderIconChildren: deprecated(PropTypes.node, 'Use `expanderIcon` instead'),\n    expanderIconClassName: deprecated(PropTypes.string, 'Use `expanderIcon` instead'),\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    defaultOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n  };\n\n  static defaultProps = {\n    animateNestedItems: true,\n    activeClassName: 'md-text--theme-primary',\n    component: 'div',\n    itemComponent: 'li',\n    expanderIcon: <FontIcon>keyboard_arrow_down</FontIcon>,\n  };\n\n  static contextTypes = {\n    cascadingId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    cascadingMenu: PropTypes.bool,\n    cascadingAnchor: anchorShape,\n    cascadingFixedTo: fixedToShape,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = { active: false };\n\n    if (typeof props.isOpen === 'undefined' && typeof props.visible === 'undefined') {\n      const defined = v => typeof v !== 'undefined';\n      const { initiallyOpen, defaultOpen, defaultVisible } = this.props;\n      let visible = defined(initiallyOpen) ? initiallyOpen : defaultVisible;\n      visible = defined(defaultOpen) ? defaultOpen : visible;\n      visible = !!visible;\n\n      this.state.visible = visible;\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.active) {\n      window.removeEventListener('click', this._handleOutsideClick);\n    }\n\n    if (this._touchTimeout) {\n      clearTimeout(this._touchTimeout);\n    }\n  }\n\n  /**\n   * A utility function to focus the `AccessibleFakeInkedButton` in the `ListItem` and also\n   * inject an ink to indicate focus.\n   */\n  focus = () => {\n    if (this._tile) {\n      this._tile.focus();\n    }\n  };\n\n  /**\n   * A utility function to blur the `AccessibleFakeInkedButton` in the `ListItem`.\n   */\n  blur = () => {\n    if (this._tile) {\n      this._tile.blur();\n    }\n  };\n\n  _setTile = (tile) => {\n    if (tile) {\n      this._tile = tile;\n      this._tileNode = findDOMNode(tile);\n    }\n  };\n\n  _setContainer = (container) => {\n    if (container) {\n      this._container = findDOMNode(container);\n    }\n  };\n\n  _handleOutsideClick = (e) => {\n    if (this._container && !this._container.contains(e.target)) {\n      window.removeEventListener('click', this._handleOutsideClick);\n      this.setState({ active: false });\n    }\n  };\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    if (typeof this.state.visible !== 'undefined') {\n      this.setState({ visible: !this.state.visible });\n    }\n  };\n\n  _handleMouseOver = (e) => {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ active: true });\n    }\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ active: false });\n    }\n  };\n\n  _handleTouchStart = (e) => {\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    this._touched = true;\n\n    this.setState({ active: true, touchedAt: Date.now() });\n  };\n\n  _handleTouchEnd = (e) => {\n    if (this.props.onTouchEnd) {\n      this.props.onTouchEnd(e);\n    }\n\n    const time = Date.now() - this.state.touchedAt;\n    this._touchTimeout = setTimeout(() => {\n      this._touchTimeout = null;\n\n      this.setState({ active: false });\n    }, time > 450 ? 0 : 450 - time);\n  };\n\n  _handleKeyUp = (e) => {\n    if (this.props.onKeyUp) {\n      this.props.onKeyUp(e);\n    }\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.addEventListener('click', this._handleOutsideClick);\n      this.setState({ active: true });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    if (this.props.onKeyDown) {\n      this.props.onKeyDown(e);\n    }\n\n    if ((e.which || e.keyCode) === TAB) {\n      window.removeEventListener('click', this._handleOutsideClick);\n      this.setState({ active: false });\n    }\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      tileStyle,\n      tileClassName,\n      nestedListStyle,\n      nestedListClassName,\n      nestedListHeightRestricted,\n      disabled,\n      leftIcon,\n      leftAvatar,\n      inset,\n      rightIcon,\n      rightAvatar,\n      primaryText,\n      secondaryText,\n      threeLines,\n      children,\n      nestedItems,\n      prependNested,\n      active,\n      activeClassName,\n      animateNestedItems,\n      expanderIcon,\n      expanderLeft,\n      component,\n      itemComponent: ItemComponent,\n      itemProps,\n      tileProps,\n      passPropsToItem,\n      'aria-setsize': ariaSize,\n      'aria-posinset': ariaPos,\n\n      // deprecated\n      isOpen,\n      expanderIconChildren,\n      expanderIconClassName,\n      /* eslint-disable no-unused-vars */\n      visible: propVisible,\n      defaultVisible,\n\n      // deprecated\n      defaultOpen,\n      initiallyOpen,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const { cascadingId, cascadingMenu, cascadingAnchor, cascadingFixedTo } = this.context;\n    let visible = getField(this.props, this.state, 'visible');\n    if (typeof isOpen !== 'undefined') {\n      visible = isOpen;\n    }\n\n    let leftNode = (\n      <TileAddon\n        key=\"left-addon\"\n        active={active}\n        activeClassName={activeClassName}\n        icon={leftIcon}\n        avatar={leftAvatar}\n      />\n    );\n\n    let rightNode = (\n      <TileAddon\n        key=\"right-addon\"\n        active={active}\n        activeClassName={activeClassName}\n        icon={rightIcon}\n        avatar={rightAvatar}\n      />\n    );\n\n    let nestedList;\n    if (nestedItems) {\n      if (!cascadingMenu) {\n        nestedList = (\n          <Collapse collapsed={!visible} animate={animateNestedItems}>\n            <List style={nestedListStyle} className={nestedListClassName}>{nestedItems}</List>\n          </Collapse>\n        );\n      }\n\n      const icon = React.Children.only(getDeprecatedIcon(expanderIconClassName, expanderIconChildren, expanderIcon));\n      const collapser = (\n        <TileAddon\n          key=\"expander-addon\"\n          icon={React.cloneElement(icon, {\n            className: getCollapserStyles({ flipped: visible }, icon.props.className),\n          })}\n          avatar={null}\n        />\n      );\n\n      if (expanderLeft) {\n        if (!leftIcon && !leftAvatar) {\n          leftNode = collapser;\n        }\n      } else if (!rightIcon && !rightAvatar) {\n        rightNode = collapser;\n      }\n    }\n\n    const icond = !!leftIcon || !!rightIcon || !!nestedItems;\n    const avatard = !!leftAvatar || !!rightAvatar;\n\n    const tile = (\n      <AccessibleFakeInkedButton\n        {...tileProps}\n        {...(passPropsToItem ? undefined : props)}\n        component={component}\n        __SUPER_SECRET_REF__={this._setTile}\n        key=\"tile\"\n        onClick={this._handleClick}\n        onMouseOver={this._handleMouseOver}\n        onMouseLeave={this._handleMouseLeave}\n        onTouchStart={this._handleTouchStart}\n        onTouchEnd={this._handleTouchEnd}\n        onKeyDown={this._handleKeyDown}\n        onKeyUp={this._handleKeyUp}\n        disabled={disabled}\n        style={tileStyle}\n        className={cn('md-list-tile', {\n          'md-list-tile--active': this.state.active && !this._touched,\n          'md-list-tile--icon': !secondaryText && icond && !avatard,\n          'md-list-tile--avatar': !secondaryText && avatard,\n          'md-list-tile--two-lines': secondaryText && !threeLines,\n          'md-list-tile--three-lines': secondaryText && threeLines,\n          'md-list-item--inset': inset && !leftIcon && !leftAvatar,\n        }, themeColors({ disabled, text: true }), tileClassName)}\n        aria-expanded={nestedList && !cascadingMenu ? visible : null}\n      >\n        {leftNode}\n        <ListItemText\n          active={active}\n          activeClassName={activeClassName}\n          disabled={disabled}\n          primaryText={primaryText}\n          secondaryText={secondaryText}\n          threeLines={threeLines}\n          className={cn({\n            'md-tile-content--left-icon': leftIcon || expanderLeft && nestedItems,\n            'md-tile-content--left-avatar': leftAvatar,\n            'md-tile-content--right-padding': rightIcon || rightAvatar,\n          })}\n        />\n        {rightNode}\n        {children}\n      </AccessibleFakeInkedButton>\n    );\n\n    const sharedProps = {\n      ...itemProps,\n      ...(passPropsToItem ? props : undefined),\n      style,\n      className: cn('md-list-item', { 'md-list-item--nested-container': nestedItems }, className),\n      'aria-setsize': ariaSize,\n      'aria-posinset': ariaPos,\n      ref: this._setContainer,\n    };\n    if (cascadingMenu && nestedItems) {\n      return (\n        <Menu\n          id={cascadingId}\n          visible={visible}\n          onClose={this._handleClick}\n          toggle={tile}\n          block\n          simplified={false}\n          anchor={cascadingAnchor}\n          belowAnchor={null}\n          position={Menu.Positions.BELOW}\n          component={ItemComponent}\n          listStyle={nestedListStyle}\n          listClassName={nestedListClassName}\n          listHeightRestricted={nestedListHeightRestricted}\n          {...sharedProps}\n          fixedTo={cascadingFixedTo}\n        >\n          {nestedItems}\n        </Menu>\n      );\n    }\n\n    return (\n      <ItemComponent {...sharedProps}>\n        {prependNested ? nestedList : null}\n        {tile}\n        {prependNested ? null : nestedList}\n      </ItemComponent>\n    );\n  }\n}\n"]}