{"version":3,"sources":["../../src/js/Lists/ListItemText.js"],"names":["ListItemText","props","active","activeClassName","disabled","primaryText","secondaryText","className","threeLines","secondaryTextNode","hint","text","propTypes","bool","string","node","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAUqBA,Y;;;;;;;;;;;+BAWV;AAAA,qBAUH,KAAKC,KAVF;AAAA,YAELC,MAFK,UAELA,MAFK;AAAA,YAGLC,eAHK,UAGLA,eAHK;AAAA,YAILC,QAJK,UAILA,QAJK;AAAA,YAKLC,WALK,UAKLA,WALK;AAAA,YAMLC,aANK,UAMLA,aANK;AAAA,YAOLC,SAPK,UAOLA,SAPK;AAAA,YAQLC,UARK,UAQLA,UARK;AAAA,YASFP,KATE;;AAYP,YAAIQ,0BAAJ;AACA,YAAIH,aAAJ,EAAmB;AACjBG,8BACE;AAAA;AAAA;AACE,yBAAW,0BAAG,yBAAH,EAA8B;AACvC,6CAA6BD;AADU,eAA9B,EAER,2BAAY,EAAEJ,kBAAF,EAAYM,MAAM,CAACN,QAAnB,EAAZ,CAFQ;AADb;AAKGE;AALH,WADF;AASD;;AAED,eACE;AAAA;AAAA,uBAASL,KAAT,IAAgB,WAAW,0BAAG,iBAAH,EAAsBM,SAAtB,CAA3B;AACE;AAAA;AAAA;AACE,yBAAW,0BAAG,uBAAH,sBACRJ,eADQ,EACU,CAACC,QAAD,IAAaF,MADvB,GAER,2BAAY,EAAEE,kBAAF,EAAYO,MAAM,CAACT,MAAnB,EAAZ,CAFQ;AADb;AAKGG;AALH,WADF;AAQGI;AARH,SADF;AAYD;;;;;;AAhDkBT,c,CACZY,S,GAAY;AACjBV,YAAQ,oBAAUW,IADD;AAEjBV,qBAAiB,oBAAUW,MAFV;AAGjBV,cAAU,oBAAUS,IAHH;AAIjBR,iBAAa,oBAAUU,IAAV,CAAeC,UAJX;AAKjBV,mBAAe,oBAAUS,IALR;AAMjBR,eAAW,oBAAUO,MANJ;AAOjBN,gBAAY,oBAAUK;AAPL,G;oBADAb,Y","file":"ListItemText.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * The `ListItemText` component is used to render the `primaryText` and an optional\n * `secondaryText` for a `ListItem`.\n */\nexport default class ListItemText extends PureComponent {\n  static propTypes = {\n    active: PropTypes.bool,\n    activeClassName: PropTypes.string,\n    disabled: PropTypes.bool,\n    primaryText: PropTypes.node.isRequired,\n    secondaryText: PropTypes.node,\n    className: PropTypes.string,\n    threeLines: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      active,\n      activeClassName,\n      disabled,\n      primaryText,\n      secondaryText,\n      className,\n      threeLines,\n      ...props\n    } = this.props;\n\n    let secondaryTextNode;\n    if (secondaryText) {\n      secondaryTextNode = (\n        <div\n          className={cn('md-tile-text--secondary', {\n            'md-tile-text--three-lines': threeLines,\n          }, themeColors({ disabled, hint: !disabled }))}\n        >\n          {secondaryText}\n        </div>\n      );\n    }\n\n    return (\n      <div {...props} className={cn('md-tile-content', className)}>\n        <div\n          className={cn('md-tile-text--primary', {\n            [activeClassName]: !disabled && active,\n          }, themeColors({ disabled, text: !active }))}\n        >\n          {primaryText}\n        </div>\n        {secondaryTextNode}\n      </div>\n    );\n  }\n}\n"]}