{"version":3,"sources":["../../src/js/Media/Media.js"],"names":["validateAspectRatio","props","propName","component","value","args","err","string","isRequired","split","length","Error","Media","Component","className","children","forceAspect","aspectRatio","expandable","propTypes","node","bool","oneOfType","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,WAASA,mBAAT,CAA6BC,KAA7B,EAAoCC,QAApC,EAA8CC,SAA9C,EAAkE;AAAA;;AAChE,QAAMC,QAAQH,MAAMC,QAAN,CAAd;;AADgE,sCAANG,IAAM;AAANA,UAAM;AAAA;;AAEhE,QAAIC,MAAM,yCAAUC,MAAV,EAAiBC,UAAjB,2BAA4BP,KAA5B,EAAmCC,QAAnC,EAA6CC,SAA7C,SAA2DE,IAA3D,EAAV;AACA,QAAI,CAACC,GAAD,IAAQF,MAAMK,KAAN,CAAY,GAAZ,EAAiBC,MAAjB,KAA4B,CAAxC,EAA2C;AACzCJ,YAAM,IAAIK,KAAJ,CACJ,uBAAsBT,QAAtB,sBAAgDC,SAAhD,iDACkBC,KADlB,4DADI,CAAN;AAID;;AAED,WAAOE,GAAP;AACD;;AAED;;;;MAGqBM,K;;;;;;;;;;;+BA2CV;AAAA,qBASH,KAAKX,KATF;AAAA,YAEMY,SAFN,UAELV,SAFK;AAAA,YAGLW,SAHK,UAGLA,SAHK;AAAA,YAILC,QAJK,UAILA,QAJK;AAAA,YAKLC,WALK,UAKLA,WALK;AAAA,YAMLC,WANK,UAMLA,WANK;AAAA,YAOLC,UAPK,UAOLA,UAPK;AAAA,YAQFjB,KARE;;AAWP,eACE;AAAC,mBAAD;AAAA,uBACMA,KADN;AAEE,uBAAW,0BAAG,UAAH,qCACKgB,WADL,EACqBD,WADrB,GAERF,SAFQ;AAFb;AAMGC;AANH,SADF;AAUD;;;;;;AAhEkBH,O,CACZO,S,GAAY;AACjB;;;AAGAL,eAAW,oBAAUP,MAJJ;;AAMjB;;;AAGAQ,cAAU,oBAAUK,IATH;;AAWjB;;;AAGAJ,iBAAa,oBAAUK,IAdN;;AAgBjB;;;AAGAJ,iBAAajB,mBAnBI;;AAqBjB;;;;AAIAkB,gBAAY,oBAAUG,IAzBL;;AA2BjB;;;AAGAlB,eAAW,oBAAUmB,SAAV,CAAoB,CAC7B,oBAAUC,IADmB,EAE7B,oBAAUhB,MAFmB,CAApB,EAGRC;AAjCc,G;AADAI,O,CAqCZY,Y,GAAe;AACpBR,iBAAa,IADO;AAEpBC,iBAAa,MAFO;AAGpBd,eAAW;AAHS,G;oBArCHS,K","file":"Media.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nfunction validateAspectRatio(props, propName, component, ...args) {\n  const value = props[propName];\n  let err = PropTypes.string.isRequired(props, propName, component, ...args);\n  if (!err && value.split('-').length !== 2) {\n    err = new Error(\n      `Your provided an \\`${propName}\\` prop to the ${component} that is not a valid ` +\n      `aspect ratio \\`${value}\\`. This should be in the form of '{width}-{height}'.`\n    );\n  }\n\n  return err;\n}\n\n/**\n * The `Media` component is used to display images, iframes, ...media. Who'da thunk?\n */\nexport default class Media extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional className to apply to the card media component.\n     */\n    className: PropTypes.string,\n\n    /**\n     * Any media to display.\n     */\n    children: PropTypes.node,\n\n    /**\n     * Boolean if the aspect ratio should be forced.\n     */\n    forceAspect: PropTypes.bool,\n\n    /**\n     * The aspect ratio to use.\n     */\n    aspectRatio: validateAspectRatio,\n\n    /**\n     * Boolean if this component should be expandable when there is a `CardExpander`\n     * above it in the `Card`.\n     */\n    expandable: PropTypes.bool,\n\n    /**\n     * The component to render the card media as.\n     */\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    forceAspect: true,\n    aspectRatio: '16-9',\n    component: 'section',\n  };\n\n  render() {\n    const {\n      component: Component,\n      className,\n      children,\n      forceAspect,\n      aspectRatio,\n      expandable, // eslint-disable-line no-unused-vars\n      ...props\n    } = this.props;\n\n    return (\n      <Component\n        {...props}\n        className={cn('md-media', {\n          [`md-media--${aspectRatio}`]: forceAspect,\n        }, className)}\n      >\n        {children}\n      </Component>\n    );\n  }\n}\n"]}