{"version":3,"sources":["../../src/js/NavigationDrawers/CloseButton.js"],"names":["CloseButton","_handleClick","e","props","onClick","context","onCloseClick","closeIcon","propTypes","className","string","func","contextTypes","element"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAYqBA,W;;;;;;;;;;;;;;kMAkBnBC,Y,GAAe,UAACC,CAAD,EAAO;AACpB,YAAI,MAAKC,KAAL,CAAWC,OAAf,EAAwB;AACtB,gBAAKD,KAAL,CAAWC,OAAX,CAAmBF,CAAnB;AACD;;AAED,YAAI,MAAKG,OAAL,CAAaC,YAAjB,EAA+B;AAC7B,gBAAKD,OAAL,CAAaC,YAAb,CAA0BJ,CAA1B;AACD;AACF,O;;;;;+BAEQ;AAAA,YACCK,SADD,GACe,KAAKF,OADpB,CACCE,SADD;;;AAGP,eACE,6DACM,KAAKJ,KADX;AAEE,oBAFF;AAGE,eAAI,OAHN;AAIE,mBAAS,KAAKF,YAJhB;AAKE,kBAAQM;AALV,WADF;AASD;;;;;;AAxCkBP,a,CACZQ,S,GAAY;AACjB;;;AAGAC,eAAW,oBAAUC,MAJJ;;AAMjB;;;AAGAN,aAAS,oBAAUO;AATF,G;AADAX,a,CAaZY,Y,GAAe;AACpBL,eAAW,oBAAUM,OADD;AAEpBP,kBAAc,oBAAUK;AAFJ,G;oBAbHX,W","file":"CloseButton.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../Buttons/Button';\n\n/**\n * A button used to close the persistent navigation drawer. The button will\n * be generated based on the `NavigationDrawer`'s `contextTypes`.\n *\n * This component is really only used if you are using a `persistent` drawer and you\n * manually created the `drawerHeader` for the `NavigationDrawer`.\n */\nexport default class CloseButton extends PureComponent {\n  static propTypes = {\n    /**\n     * An optional className to apply.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional additional function to call when the `click` event is triggered.\n     */\n    onClick: PropTypes.func,\n  };\n\n  static contextTypes = {\n    closeIcon: PropTypes.element,\n    onCloseClick: PropTypes.func,\n  };\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    if (this.context.onCloseClick) {\n      this.context.onCloseClick(e);\n    }\n  };\n\n  render() {\n    const { closeIcon } = this.context;\n\n    return (\n      <Button\n        {...this.props}\n        icon\n        key=\"close\"\n        onClick={this._handleClick}\n        iconEl={closeIcon}\n      />\n    );\n  }\n}\n"]}