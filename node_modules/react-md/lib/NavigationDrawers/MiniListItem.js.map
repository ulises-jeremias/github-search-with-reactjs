{"version":3,"sources":["../../src/js/NavigationDrawers/MiniListItem.js"],"names":["MiniListItem","state","active","_handleMouseOver","e","props","onMouseOver","disabled","setState","_handleMouseLeave","onMouseLeave","_handleTouchStart","onTouchStart","_touched","touchedAt","Date","now","_handleTouchEnd","onTouchEnd","time","_touchTimeout","setTimeout","clearTimeout","style","className","tileStyle","tileClassName","leftIcon","leftAvatar","activeClassName","ItemComponent","itemComponent","primaryText","secondaryText","rightIcon","rightAvatar","threeLines","children","defaultOpen","isOpen","inset","nestedItems","animateNestedItems","expanderIcon","expanderIconChildren","expanderIconClassName","propTypes","object","string","component","oneOfType","func","bool","node","isRequired","defaultProps"],"mappings":"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","file":"MiniListItem.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport TileAddon from '../Lists/TileAddon';\n\nexport default class MiniListItem extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    tileStyle: PropTypes.object,\n    tileClassName: PropTypes.string,\n    component: PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n    ]),\n    active: PropTypes.bool,\n    activeClassName: PropTypes.string,\n    leftIcon: PropTypes.node,\n    leftAvatar: PropTypes.node,\n    disabled: PropTypes.bool,\n    onTouchStart: PropTypes.func,\n    onTouchEnd: PropTypes.func,\n    onMouseOver: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    defaultOpen: PropTypes.bool,\n    itemComponent: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.func,\n    ]).isRequired,\n  };\n\n  static defaultProps = {\n    activeClassName: 'md-text--theme-primary',\n    component: 'div',\n    itemComponent: 'li',\n  };\n\n  state = { active: false };\n\n  componentWillUnmount() {\n    if (this._touchTimeout) {\n      clearTimeout(this._touchTimeout);\n    }\n  }\n\n  _handleMouseOver = (e) => {\n    if (this.props.onMouseOver) {\n      this.props.onMouseOver(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ active: true });\n    }\n  };\n\n  _handleMouseLeave = (e) => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave(e);\n    }\n\n    if (!this.props.disabled) {\n      this.setState({ active: false });\n    }\n  };\n\n  _handleTouchStart = (e) => {\n    if (this.props.onTouchStart) {\n      this.props.onTouchStart(e);\n    }\n\n    this._touched = true;\n\n    this.setState({ active: true, touchedAt: Date.now() });\n  };\n\n  _handleTouchEnd = (e) => {\n    if (this.props.onTouchEnd) {\n      this.props.onTouchEnd(e);\n    }\n\n    const time = Date.now() - this.state.touchedAt;\n    this._touchTimeout = setTimeout(() => {\n      this._touchTimeout = null;\n\n      this.setState({ active: false });\n    }, time > 450 ? 0 : 450 - time);\n  };\n\n  render() {\n    const {\n      style,\n      className,\n      tileStyle,\n      tileClassName,\n      leftIcon,\n      leftAvatar,\n      active,\n      activeClassName,\n      itemComponent: ItemComponent,\n      /* eslint-disable no-unused-vars,react/prop-types */\n      primaryText,\n      secondaryText,\n      rightIcon,\n      rightAvatar,\n      threeLines,\n      children,\n      defaultOpen,\n      isOpen,\n      inset,\n      nestedItems,\n      animateNestedItems,\n      expanderIcon,\n\n      // deprecated\n      expanderIconChildren,\n      expanderIconClassName,\n      /* eslint-enable no-unused-vars,react/prop-types */\n      ...props\n    } = this.props;\n\n    return (\n      <ItemComponent style={style} className={className}>\n        <AccessibleFakeInkedButton\n          {...props}\n          style={tileStyle}\n          className={cn('md-list-tile md-list-tile--icon md-list-tile--mini', {\n            'md-list-tile--active': this.state.active && !this._touched,\n          }, tileClassName)}\n          onMouseOver={this._handleMouseOver}\n          onMouseLeave={this._handleMouseLeave}\n          onTouchStart={this._handleTouchStart}\n          onTouchEnd={this._handleTouchEnd}\n        >\n          <TileAddon\n            active={active}\n            activeClassName={activeClassName}\n            icon={leftIcon}\n            avatar={leftAvatar}\n          />\n        </AccessibleFakeInkedButton>\n      </ItemComponent>\n    );\n  }\n}\n"]}