{"version":3,"sources":["../../src/js/Pickers/ClockFace.js"],"names":["ClockFace","props","_setFace","face","_face","_setPositioning","radius","offsetWidth","offset","_center","x","left","y","top","_left","_top","state","setState","_handleMouseEnter","hoverMode","_enableMouseMoving","_handleMouseLeave","_disableMouseMoving","_handleMouseDown","e","_handleMouseMove","moving","preventDefault","_calcNewTime","_handleMouseUp","onTimeChosen","contains","target","_handleTouchStart","window","_handleTouchMove","_handleTouchEnd","changedTouches","pageX","pageY","innerRadius","onChange","minutes","timePeriod","addEventListener","removeEventListener","clearInterval","interval","time","size","times","Array","apply","map","_","i","clockTime","undefined","propTypes","number","isRequired","bool","func","string"],"mappings":"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","file":"ClockFace.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport isValidClick from '../utils/EventUtils/isValidClick';\nimport captureNextEvent from '../utils/EventUtils/captureNextEvent';\nimport { addTouchEvent, removeTouchEvent } from '../utils/EventUtils/touches';\nimport calcTimeFromPoint from '../utils/NumberUtils/calcTimeFromPoint';\nimport calcPageOffset from '../utils/Positioning/calcPageOffset';\nimport ResizeObserver from '../Helpers/ResizeObserver';\n\nimport ClockTime from './ClockTime';\nimport ClockHand from './ClockHand';\n\n/**\n * The `ClockFace` component is used for rendering all the clock's times\n * and the clock hand.\n */\nexport default class ClockFace extends PureComponent {\n  static propTypes = {\n    /**\n     * The current time for the clock.\n     */\n    time: PropTypes.number.isRequired,\n\n    /**\n     * Boolean if the clock is on the minutes view.\n     */\n    minutes: PropTypes.bool.isRequired,\n\n    /**\n     * A function to call when a new time is selected. It gives the\n     * new time value. If it is 12 o'clock, 0 will be given.\n     */\n    onChange: PropTypes.func.isRequired,\n\n    /**\n     * An optional time period string. This should be either AM or PM\n     * if the locale uses them.\n     */\n    timePeriod: PropTypes.string,\n\n    /**\n     * If true the hover mode of the Time Picker is activated.\n     * In hover mode no clicks are required to start selecting an hour\n     * and the timemode switches automatically when a time was chosen.\n     * When a minute is selected the chosen time is applied automatically.\n     */\n    hoverMode: PropTypes.bool,\n\n    onTimeChosen: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = { radius: 136, moving: false };\n    this._center = {};\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('mousemove', this._handleMouseMove);\n    window.removeEventListener('mouseup', this._handleMouseMove);\n\n    removeTouchEvent(window, 'move', this._handleTouchMove);\n    removeTouchEvent(window, 'end', this._handleTouchEnd);\n    clearInterval(this.interval);\n  }\n\n  _setFace = (face) => {\n    this._face = face;\n    this._setPositioning();\n  }\n\n  _setPositioning = () => {\n    if (!this._face) {\n      return;\n    }\n\n    const radius = this._face.offsetWidth / 2;\n    const offset = calcPageOffset(this._face);\n    this._center = { x: offset.left + radius, y: offset.top + radius };\n    this._left = offset.left;\n    this._top = offset.top;\n\n    if (this.state.radius !== radius) {\n      this.setState({ radius });\n    }\n  };\n\n  _handleMouseEnter = () => {\n    const { hoverMode } = this.props;\n\n    if (hoverMode) {\n      this._enableMouseMoving();\n    }\n  };\n\n  _handleMouseLeave = () => {\n    const { hoverMode } = this.props;\n\n    if (hoverMode) {\n      this._disableMouseMoving();\n    }\n  };\n\n  _handleMouseDown = (e) => {\n    if (!isValidClick(e)) {\n      return;\n    }\n\n    const { hoverMode } = this.props;\n\n    if (!hoverMode) {\n      this._enableMouseMoving();\n    }\n  };\n\n  _handleMouseMove = (e) => {\n    if (!this.state.moving) {\n      return;\n    }\n\n    e.preventDefault();\n    this._calcNewTime(e);\n  };\n\n  _handleMouseUp = (e) => {\n    if (!isValidClick(e)) {\n      return;\n    }\n\n    const { onTimeChosen, hoverMode } = this.props;\n\n    if (this._face) {\n      if (this._face.contains(e.target)) {\n        onTimeChosen();\n        this._calcNewTime(e);\n      } else {\n        captureNextEvent('click');\n      }\n    }\n\n    if (!hoverMode) {\n      this._disableMouseMoving();\n    }\n  };\n\n  _handleTouchStart = () => {\n    captureNextEvent('mousedown');\n\n    addTouchEvent(window, 'move', this._handleTouchMove);\n    addTouchEvent(window, 'end', this._handleTouchEnd);\n    this.setState({ moving: true });\n  };\n\n  _handleTouchMove = (e) => {\n    if (!this.state.moving) {\n      return;\n    }\n\n    this._calcNewTime(e);\n  };\n\n  _handleTouchEnd = (e) => {\n    this._calcNewTime(e);\n    if (this._face && !this._face.contains(e.target)) {\n      captureNextEvent('click');\n    }\n\n    removeTouchEvent(window, 'move', this._handleTouchMove);\n    removeTouchEvent(window, 'end', this._handleTouchEnd);\n\n    this.setState({ moving: false });\n  };\n\n  _calcNewTime = (e) => {\n    const { pageX: x, pageY: y } = e.changedTouches ? e.changedTouches[0] : e;\n    const innerRadius = this.state.radius - 48;\n    const { onChange, minutes, timePeriod } = this.props;\n    onChange(calcTimeFromPoint({ x, y }, this._center, innerRadius, minutes, timePeriod));\n  };\n\n  _enableMouseMoving = () => {\n    window.addEventListener('mousemove', this._handleMouseMove);\n    window.addEventListener('mouseup', this._handleMouseUp);\n\n    this.setState({ moving: true });\n  };\n\n  _disableMouseMoving = () => {\n    window.removeEventListener('mousemove', this._handleMouseMove);\n    window.removeEventListener('mouseup', this._handleMouseUp);\n\n    this.setState({ moving: false });\n  };\n\n  render() {\n    const { time, minutes, timePeriod, onChange, hoverMode } = this.props;\n    const { radius } = this.state;\n    const size = !minutes && !timePeriod ? 24 : 12;\n    const times = Array.apply(null, new Array(size)).map((_, i) => {\n      let clockTime = i + 1;\n      if (minutes) {\n        clockTime = (clockTime * 5) % 60;\n      } else {\n        clockTime %= 24;\n      }\n\n      return (\n        <ClockTime\n          key={`time-${i}`}\n          index={i + 1}\n          time={clockTime}\n          active={clockTime === time}\n          radius={radius}\n          onKeyboardFocus={onChange}\n        />\n      );\n    });\n\n    return (\n      <div\n        ref={this._setFace}\n        className=\"md-clock-face md-block-centered md-pointer--hover\"\n        onMouseDown={this._handleMouseDown}\n        onMouseEnter={hoverMode ? this._handleMouseEnter : undefined}\n        onMouseLeave={hoverMode ? this._handleMouseLeave : undefined}\n        onTouchStart={this._handleTouchStart}\n      >\n        <ResizeObserver watchHeight onResize={this._setPositioning} />\n        {times}\n        <ClockHand time={time} coords={radius} minutes={minutes} />\n      </div>\n    );\n  }\n}\n"]}