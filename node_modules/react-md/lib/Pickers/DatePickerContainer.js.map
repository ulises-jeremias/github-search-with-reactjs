{"version":3,"sources":["../../src/js/Pickers/DatePickerContainer.js"],"names":["DatePickerContainer","props","date","value","defaultValue","DateTimeFormat","locales","formatOptions","minDate","maxDate","_getDate","format","Date","_validateDateRange","defaultCalendarDate","initialCalendarDate","calendarTempDate","visible","initiallyOpen","defaultVisible","state","calendarDate","calendarMode","initialCalendarMode","defaultCalendarMode","nextProps","minEqual","maxEqual","setState","prevProps","prevState","inline","isOpen","pVisible","_handleOutsideClick","window","addEventListener","_closeOnEsc","removeEventListener","style","className","pickerStyle","pickerClassName","pickerHeaderClassName","pickerContentClassName","pickerFooterClassName","inputStyle","inputClassName","textFieldStyle","textFieldClassName","label","placeholder","icon","displayMode","fullWidth","lineDirection","id","disabled","closeOnEsc","animateInline","portal","renderNode","lastChild","block","paddedBlock","active","error","floating","required","leftIconStateful","rightIcon","rightIconStateful","customSize","errorText","helpText","helpOnFocus","inlineIndicator","ariaLabel","propNextIcon","nextIcon","propPreviousIcon","previousIcon","previousIconChildren","previousIconClassName","nextIconChildren","nextIconClassName","propValue","propVisible","onChange","readOnly","onVisibilityChange","adjustMinWidth","picker","_handleCancelClick","_handleOkClick","_changeCalendarMode","_previousMonth","_nextMonth","_setCalendarTempDate","_setCalendarTempYear","content","_setContainer","_toggleOpen","_handleKeyDown","_getFormattedValue","propTypes","oneOfType","string","number","object","calendarClassName","yearPickerClassName","node","bool","instanceOf","func","isRequired","arrayOf","okLabel","okPrimary","cancelLabel","cancelPrimary","oneOf","propName","component","others","err","Error","autoOk","yearsDisplayed","shape","weekday","era","year","month","day","hour","minute","second","timeZoneName","firstDayOfWeek","disableWeekEnds","calendarDateClassName","calendarTitleClassName","calendarTitleFormat","calendarWeekdayClassName","calendarWeekdayFormat","initialYearsDisplayed","defaultProps","navigator","userLanguage","language","container","_container","e","which","keyCode","contains","target","_timeout","setTimeout","getFullYear","nextDate","setFullYear","nextTemp"],"mappings":"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","file":"DatePickerContainer.js","sourcesContent":["/* eslint-disable new-cap,no-shadow */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport { ESC, TAB } from '../constants/keyCodes';\nimport getField from '../utils/getField';\nimport handleWindowClickListeners from '../utils/EventUtils/handleWindowClickListeners';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\nimport controlled from '../utils/PropTypes/controlled';\nimport isDateEqual from '../utils/DateUtils/isDateEqual';\nimport addDate from '../utils/DateUtils/addDate';\nimport DateTimeFormat from '../utils/DateUtils/DateTimeFormat';\n\nimport Collapse from '../Helpers/Collapse';\nimport FontIcon from '../FontIcons/FontIcon';\nimport getDeprecatedIcon from '../FontIcons/getDeprecatedIcon';\nimport TextField from '../TextFields/TextField';\nimport Dialog from '../Dialogs/DialogContainer';\nimport DatePicker from './DatePicker';\n\n/**\n * The `DatePickerContainer` component is a wrapper for the main `DatePicker` component\n * to manage the state and _logic_ for rendering the `DatePicker`. This component will\n * either render inline or in a `Dialog` depending if the `inline` prop is set to `true`.\n *\n * NOTE: This component is actually exported as `DatePicker` when using the `import { member }` syntax.\n * The following two lines are equivalent:\n *\n * ```js\n * import { DatePicker } from 'react-md/lib/Pickers';\n * import DatePicker from 'react-md/lib/Pickers/DatePickerContainer';\n * ```\n */\nexport default class DatePickerContainer extends PureComponent {\n  static propTypes = {\n    /**\n     * An id for the text field in the date picker. This is require for a11y.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ])),\n\n    /**\n     * An aria label for the dialog. This is required for a11y.\n     */\n    'aria-label': isRequiredForA11y(PropTypes.string),\n\n    /**\n     * An optional style to apply to the date picker's container.\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the date picker's container.\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the date picker.\n     */\n    pickerStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the date picker.\n     */\n    pickerClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the header of date picker.\n     */\n    pickerHeaderClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the content container of date picker.\n     */\n    pickerContentClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the footer of date picker.\n     */\n    pickerFooterClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the calendar container of date picker.\n     */\n    calendarClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the year picker of date picker.\n     */\n    yearPickerClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the input tag.\n     */\n    inputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the input tag.\n     */\n    inputClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the text field's container.\n     */\n    textFieldStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the text field's container.\n     */\n    textFieldClassName: PropTypes.string,\n\n    /**\n     * An optional icon to display with the date picker.\n     *\n     * @see {@link TextFields/TextField#leftIcon}\n     */\n    icon: PropTypes.node,\n\n    /**\n     * Boolean if the date picker is open by default.\n     */\n    defaultVisible: PropTypes.bool,\n\n    /**\n     * An optional label to be displayed in the date picker's text\n     * field.\n     */\n    label: PropTypes.node,\n\n    /**\n     * An optional placeholder to be displayed in the date picker's text field.\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * The value of the date picker. This will make the date picker\n     * be a controlled component. This value should either be a\n     * formatted date string or a date object.\n     */\n    value: controlled(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]), 'onChange', 'defaultValue'),\n\n    /**\n     * An optional default value to give for the date picker. This should\n     * either be a formatted date string or a date object.\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]),\n\n    /**\n     * An optional date to use when the calendar is opened for the first time.\n     * If this is omitted, it will either be the `defaultValue`, `value`, or\n     * today.\n     */\n    defaultCalendarDate: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]),\n\n    /**\n     * An optional function to call when the selected date is changed\n     * by hitting the OK button. The newly formatted date string,\n     * the new Date object, and the change event will be given.\n     *\n     * `onChange(dateString, dateObject, event)`.\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * A function to format the dates since it should be formatted to the user's\n     * locale. This _should_ be the `Intl.DateTimeFormat` function. You\n     * can also create your own if you really wanted. Inadvisable though.\n     *\n     * See [intl-polyfill](https://github.com/andyearnshaw/Intl.js/) for more info.\n     */\n    DateTimeFormat: PropTypes.func.isRequired,\n\n    /**\n     * The locales to use for formatting the date. This will default to using\n     * the user's language in the browser or `'en-US'` when server rendering.\n     */\n    locales: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string),\n    ]).isRequired,\n\n    /**\n     * The label to use for the ok button on the date picker.\n     */\n    okLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the ok button should be styled with the primary color.\n     */\n    okPrimary: PropTypes.bool,\n\n    /**\n     * The label to use for the cancel button on the date picker.\n     */\n    cancelLabel: PropTypes.node.isRequired,\n\n    /**\n     * Boolean if the cancel button should be styled with the primary color.\n     */\n    cancelPrimary: PropTypes.bool,\n\n    /**\n     * The initial mode to open the calendar in.\n     */\n    defaultCalendarMode: PropTypes.oneOf(['calendar', 'year']),\n\n    /**\n     * The icon to use to display the previous month icon in the calendar.\n     */\n    previousIcon: PropTypes.node,\n\n    /**\n     * The icon to use to display the next month icon in the calendar.\n     */\n    nextIcon: PropTypes.node,\n\n    /**\n     * An optional min date to use for the date picker. This will prevent\n     * any dates before this time to be chosen.\n     */\n    minDate: PropTypes.instanceOf(Date),\n\n    /**\n     * An optional max date to use for the date picker. This will prevent\n     * any dates after this time to be chosen.\n     */\n    maxDate: (props, propName, component, ...others) => {\n      const err = PropTypes.instanceOf(Date)(props, propName, component, ...others);\n      if (err || !props.minDate || !props[propName]) {\n        return err;\n      }\n\n      const { minDate, maxDate } = props;\n      if (minDate > maxDate) {\n        return new Error(\n          `The min date: '${minDate}' is greater than the max date: '${maxDate}'`\n        );\n      }\n\n      return null;\n    },\n\n    /**\n     * Boolean if the date should automatically be selected when a user clicks\n     * on a new date instead of making them hit the ok button.\n     */\n    autoOk: PropTypes.bool,\n\n    /**\n     * The number of years to display.\n     */\n    yearsDisplayed: PropTypes.number,\n\n    /**\n     * Boolean if the date picker should be displayed inline instead of in a\n     * dialog.\n     */\n    inline: PropTypes.bool,\n\n    /**\n     * An optional force of the display mode of the date picker.\n     * This _should_ not really be used since there are media queries\n     * to use the correct mode based on device orientation.\n     */\n    displayMode: PropTypes.oneOf(['landscape', 'portrait']),\n\n    /**\n     * The DateTimeFormat options to apply to format the date.\n     */\n    formatOptions: PropTypes.shape({\n      weekday: PropTypes.oneOf(['narrow', 'short', 'long']),\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\n      year: PropTypes.oneOf(['numeric', '2-digit']),\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n      day: PropTypes.oneOf(['numeric', '2-digit']),\n      hour: PropTypes.oneOf(['numeric', '2-digit']),\n      minute: PropTypes.oneOf(['numeric', '2-digit']),\n      second: PropTypes.oneOf(['numeric', '2-digit']),\n      timeZoneName: PropTypes.oneOf(['short', 'long']),\n    }),\n\n    /**\n     * Boolean if the text field for the Date Picker should be displayed as full width.\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * The direction that the text field divider expands from when the text field\n     * in the date picker gains focus.\n     */\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']),\n\n    /**\n     * An optional boolean if the time picker is current visible by dialog or inline.\n     * If this is set, the `onOpenToggle` function is required.\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * An optional function to call when the date picker is opened in either a dialog, or\n     * inline. The callback will include the next state.\n     *\n     * ```js\n     * onVisibilityChange(!visible, e);\n     * ```\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * Boolean if the time picker is disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if the dialog should be able to close if a keyboard user presses the escape key.\n     */\n    closeOnEsc: PropTypes.bool,\n\n    /**\n     * Boolean if the inline time picker's visibility should be animated.\n     */\n    animateInline: PropTypes.bool,\n\n    /**\n     * Boolean if the time is required.\n     *\n     * @see {@link TextFields/TextField#required}\n     */\n    required: PropTypes.bool,\n\n    /**\n     * @see {@link TextFields/TextField#block}\n     */\n    block: TextField.propTypes.block,\n\n    /**\n     * @see {@link TextFields/TextField#paddedBlock}\n     */\n    paddedBlock: TextField.propTypes.paddedBlock,\n\n    /**\n     * @see {@link TextFields/TextField#active}\n     */\n    active: TextField.propTypes.active,\n\n    /**\n     * @see {@link TextFields/TextField#error}\n     */\n    error: TextField.propTypes.error,\n\n    /**\n     * @see {@link TextFields/TextField#floating}\n     */\n    floating: TextField.propTypes.floating,\n\n    /**\n     * @see {@link TextFields/TextField#leftIconStateful}\n     */\n    leftIconStateful: TextField.propTypes.leftIconStateful,\n\n    /**\n     * @see {@link TextFields/TextField#rightIcon}\n     */\n    rightIcon: TextField.propTypes.rightIcon,\n\n    /**\n     * @see {@link TextFields/TextField#rightIconStateful}\n     */\n    rightIconStateful: TextField.propTypes.rightIconStateful,\n\n    /**\n     * @see {@link TextFields/TextField#customSize}\n     */\n    customSize: TextField.propTypes.customSize,\n\n    /**\n     * @see {@link TextFields/TextField#errorText}\n     */\n    errorText: TextField.propTypes.errorText,\n\n    /**\n     * @see {@link TextFields/TextField#helpText}\n     */\n    helpText: TextField.propTypes.helpText,\n\n    /**\n     * @see {@link TextFields/TextField#helpOnFocus}\n     */\n    helpOnFocus: TextField.propTypes.helpOnFocus,\n\n    /**\n     * @see {@link TextFields/TextField#inlineIndicator}\n     */\n    inlineIndicator: TextField.propTypes.inlineIndicator,\n\n    /**\n     * Boolean if the Portal's functionality of rendering in a separate react tree should be applied\n     * to the dialog.\n     *\n     * @see {@link Helpers/Portal}\n     */\n    portal: PropTypes.bool,\n\n    /**\n     * An optional DOM Node to render the dialog into. The default is to render as the first child\n     * in the `body`.\n     */\n    renderNode: PropTypes.object,\n\n    /**\n     * Boolean if the DatePicker should be read only. This will prevent the user from opening the picker\n     * and only display the current date in the text field.\n     */\n    readOnly: PropTypes.bool,\n\n    /**\n     * The first day of week: 0 for Sunday, 1 for Monday, 2 for Tuesday, and so on.\n     */\n    firstDayOfWeek: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6]),\n\n    /**\n     * True if weekends are to be greyed out.\n     */\n    disableWeekEnds: PropTypes.bool,\n\n    /**\n     * An optional className to apply to a date in calendar.\n     */\n    calendarDateClassName: PropTypes.string,\n\n    /**\n     * An optional className to apply to the title in calendar header.\n     */\n    calendarTitleClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat options to apply to format the title in calendar header.\n     */\n    calendarTitleFormat: PropTypes.shape({\n      era: PropTypes.oneOf(['narrow', 'short', 'long']),\n      year: PropTypes.oneOf(['numeric', '2-digit']),\n      month: PropTypes.oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n    }),\n\n    /**\n     * An optional className to apply to a weekday in calendar header.\n     */\n    calendarWeekdayClassName: PropTypes.string,\n\n    /**\n     * The DateTimeFormat option to apply to format a weekday in calendar header.\n     */\n    calendarWeekdayFormat: PropTypes.oneOf(['narrow', 'short', 'long']),\n\n    /**\n     * Boolean if the dialog should be rendered as the last child of the `renderNode` or `body` instead\n     * of the first.\n     */\n    lastChild: PropTypes.bool,\n\n    previousIconChildren: deprecated(PropTypes.node, 'Use the `previousIcon` prop instead'),\n    previousIconClassName: deprecated(PropTypes.string, 'Use the `previousIcon` prop instead'),\n    nextIconChildren: deprecated(PropTypes.node, 'use the `nextIcon` prop instead'),\n    nextIconClassName: deprecated(PropTypes.string, 'Use the `nextIcon` prop instead'),\n    adjustMinWidth: deprecated(PropTypes.bool, 'No longer valid for a text field'),\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    initialCalendarDate: deprecated(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(Date),\n    ]), 'Use `defaultCalendarDate` instead'),\n    initialCalendarMode: deprecated(PropTypes.oneOf(['calendar', 'year']), 'Use `defaultCalendarMode` instead'),\n    initialYearsDisplayed: deprecated(\n      PropTypes.number,\n      'Use `yearsDisplayed` instead. I have not implemented infinite loading years'\n    ),\n  };\n\n  static defaultProps = {\n    animateInline: true,\n    previousIcon: <FontIcon>chevron_left</FontIcon>,\n    nextIcon: <FontIcon>chevron_right</FontIcon>,\n    autoOk: false,\n    icon: <FontIcon>date_range</FontIcon>,\n    yearsDisplayed: 100,\n    defaultCalendarMode: 'calendar',\n    DateTimeFormat: DateTimeFormat, // eslint-disable-line object-shorthand\n    locales: typeof window !== 'undefined'\n      ? window.navigator.userLanguage || window.navigator.language\n      : 'en-US',\n    okLabel: 'Ok',\n    okPrimary: true,\n    cancelLabel: 'Cancel',\n    cancelPrimary: true,\n    closeOnEsc: true,\n    'aria-label': 'Pick a date',\n  };\n\n  constructor(props) {\n    super(props);\n\n    let date;\n    let value;\n    const {\n      defaultValue,\n      DateTimeFormat,\n      locales,\n      formatOptions,\n      minDate,\n      maxDate,\n    } = props;\n\n    if (typeof props.value !== 'undefined') {\n      date = this._getDate(props.value);\n    } else if (defaultValue) {\n      date = this._getDate(defaultValue);\n      value = typeof defaultValue === 'string'\n        ? defaultValue\n        : DateTimeFormat(locales, formatOptions).format(defaultValue);\n    } else {\n      date = new Date();\n      value = '';\n    }\n\n    date = this._validateDateRange(date, minDate, maxDate);\n\n    const defaultCalendarDate = typeof props.initialCalendarDate !== 'undefined'\n      ? props.initialCalendarDate\n      : props.defaultCalendarDate;\n    let calendarTempDate = date;\n    if (typeof defaultCalendarDate !== 'undefined' && !props.value && !props.defaultValue) {\n      calendarTempDate = this._getDate(defaultCalendarDate);\n      date = calendarTempDate;\n    } else if (calendarTempDate === null) {\n      calendarTempDate = new Date();\n      date = new Date();\n    }\n\n    const visible = typeof props.initiallyOpen !== 'undefined'\n      ? props.initiallyOpen\n      : !!props.defaultVisible;\n\n    this.state = {\n      value,\n      visible,\n      calendarDate: date,\n      calendarTempDate,\n      calendarMode: props.initialCalendarMode || props.defaultCalendarMode,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { value, minDate, maxDate } = nextProps;\n    const minEqual = isDateEqual(this.props.minDate, minDate);\n    const maxEqual = isDateEqual(this.props.maxDate, maxDate);\n    if (this.props.value !== value || !minEqual || !maxEqual) {\n      let { calendarDate } = this.state;\n      if (typeof value !== 'undefined') {\n        calendarDate = this._getDate(value);\n      }\n\n      calendarDate = this._validateDateRange(calendarDate, minDate, maxDate);\n\n      if (!isDateEqual(this.state.calendarDate, calendarDate)) {\n        this.setState({ calendarDate, calendarTempDate: calendarDate });\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { inline, isOpen } = this.props;\n    const visible = typeof isOpen !== 'undefined'\n      ? isOpen\n      : getField(this.props, this.state, 'visible');\n    const pVisible = typeof prevProps.isOpen !== 'undefined'\n      ? prevProps.isOpen\n      : getField(prevProps, prevState, 'visible');\n\n    if (visible === pVisible) {\n      return;\n    }\n\n    if (visible) {\n      if (inline) {\n        handleWindowClickListeners(this._handleOutsideClick, true);\n        window.addEventListener('keydown', this._closeOnEsc);\n      }\n    } else if (inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  }\n\n  componentWillUnmount() {\n    const visible = typeof this.props.isOpen !== 'undefined'\n      ? this.props.isOpen\n      : getField(this.props, this.state, 'visible');\n\n    if (visible && this.props.inline) {\n      handleWindowClickListeners(this._handleOutsideClick, false);\n      window.removeEventListener('keydown', this._closeOnEsc);\n    }\n  }\n\n  _getDate(value) {\n    if (value === '' || value === null) {\n      return new Date();\n    } else if (typeof value === 'string') {\n      return new Date(value);\n    }\n\n    return value;\n  }\n\n  _setContainer= (container) => {\n    this._container = container;\n  };\n\n  _closeOnEsc = (e) => {\n    if ((e.which || e.keyCode) === ESC) {\n      this._handleCancelClick(e);\n    }\n  };\n\n  _handleOutsideClick = (e) => {\n    if (this._container && !this._container.contains(e.target)) {\n      this._handleCancelClick(e);\n    }\n  };\n\n  _toggleOpen = (e) => {\n    if (this.props.disabled || this.props.readOnly) {\n      return;\n    }\n\n    const visible = !(typeof this.props.isOpen !== 'undefined'\n      ? this.props.isOpen\n      : getField(this.props, this.state, 'visible'));\n\n    if (this.props.onVisibilityChange) {\n      this.props.onVisibilityChange(visible, e);\n    }\n\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\n      this.setState({ visible });\n    }\n  };\n\n  _handleKeyDown = (e) => {\n    handleKeyboardAccessibility(e, this._toggleOpen, true, true);\n\n    if ((e.which || e.keyCode) === TAB && this.state.active) {\n      this.setState({ active: false });\n    }\n  };\n\n  _handleOkClick = (e) => {\n    const { DateTimeFormat, locales, onChange, formatOptions, onVisibilityChange } = this.props;\n    const value = DateTimeFormat(locales, formatOptions).format(this.state.calendarTempDate);\n    if (onChange) {\n      onChange(value, new Date(this.state.calendarTempDate), e);\n    }\n\n    if (onVisibilityChange) {\n      onVisibilityChange(false, e);\n    }\n\n    let state;\n    if (typeof this.props.value === 'undefined') {\n      state = { value };\n    }\n\n    if (typeof this.props.visible === 'undefined' && typeof this.props.isOpen === 'undefined') {\n      state = state || {};\n      state.visible = false;\n    }\n\n    if (state) {\n      this.setState(state);\n    }\n  };\n\n  _handleCancelClick = (e) => {\n    const state = { calendarTempDate: this.state.calendarDate };\n    if (typeof this.props.isOpen === 'undefined' && typeof this.props.isOpen === 'undefined') {\n      state.visible = false;\n    }\n\n    if (this.props.onVisibilityChange) {\n      this.props.onVisibilityChange(false, e);\n    }\n\n    this.setState(state);\n  };\n\n  _changeCalendarMode = (calendarMode) => {\n    if (this.state.calendarMode === calendarMode) { return; }\n\n    this.setState({ calendarMode });\n  };\n\n  _previousMonth = () => {\n    const calendarDate = addDate(this.state.calendarDate, -1, 'M');\n    this.setState({ calendarDate });\n  };\n\n  _nextMonth = () => {\n    const calendarDate = addDate(this.state.calendarDate, 1, 'M');\n    this.setState({ calendarDate });\n  };\n\n  _setCalendarTempDate = (calendarTempDate) => {\n    const { autoOk, DateTimeFormat, locales, onChange, formatOptions } = this.props;\n\n    const state = { calendarTempDate };\n    if (autoOk) {\n      const value = DateTimeFormat(locales, formatOptions).format(calendarTempDate);\n      if (onChange) {\n        onChange(value, new Date(calendarTempDate));\n      }\n\n      if (typeof this.props.value === 'undefined') {\n        state.value = value;\n      }\n\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n\n        if (this.props.onVisibilityChange) {\n          this.props.onVisibilityChange(false);\n        }\n\n        if (typeof this.props.visible === 'undefined' && typeof this.props.isOpen === 'undefined') {\n          this.setState({ visible: false });\n        }\n      });\n    }\n    this.setState(state);\n  };\n\n  _setCalendarTempYear = (year) => {\n    const { calendarTempDate, calendarDate } = this.state;\n    if (calendarTempDate.getFullYear() === year) { return; }\n\n    const { minDate, maxDate } = this.props;\n    let nextDate = new Date(calendarDate.setFullYear(year));\n    let nextTemp = new Date(calendarTempDate.setFullYear(year));\n\n    if (minDate && nextTemp < minDate) {\n      nextDate = new Date(minDate);\n      nextTemp = new Date(minDate);\n    }\n\n    if (maxDate && nextTemp > maxDate) {\n      nextDate = new Date(maxDate);\n      nextTemp = new Date(maxDate);\n    }\n\n    this.setState({\n      calendarDate: nextDate,\n      calendarTempDate: nextTemp,\n    });\n  };\n\n  /**\n   * Gets the current value from the date picker as a formatted string.\n   *\n   * @param {Object} props? the props object to use.\n   * @param {Object} state? the state object to use.\n   * @return {String} a formatted date string or the empty string.\n   */\n  _getFormattedValue(props, state) {\n    const { DateTimeFormat, locales, formatOptions } = props;\n    const value = getField(props, state, 'value');\n    if (!value) {\n      return '';\n    } else if (value instanceof Date) {\n      return DateTimeFormat(locales, formatOptions).format(new Date(value));\n    } else {\n      return value;\n    }\n  }\n\n  /**\n   * Attempts to validate the `calendarDate` in the state against the min and\n   * max dates.\n   *\n   * This will return null if the current calendarDate is still within the range.\n   *\n   * @param {Date} calendarDate - The current calendar date to compare to.\n   * @param {Date} minDate - An optional min date to compare to.\n   * @param {Date} maxDate - An optional max date to compare to.\n   * @return {Object} - The new state object with the updated calendarDate and\n   *    calendarTempDate keys or null.\n   */\n  _validateDateRange(calendarDate, minDate, maxDate) {\n    let date = calendarDate;\n    if (minDate && minDate > calendarDate) {\n      date = new Date(minDate);\n    }\n\n    if (maxDate && maxDate < calendarDate) {\n      date = new Date(maxDate);\n    }\n\n    return date;\n  }\n\n  render() {\n    const {\n      style,\n      className,\n      pickerStyle,\n      pickerClassName,\n      pickerHeaderClassName,\n      pickerContentClassName,\n      pickerFooterClassName,\n      inputStyle,\n      inputClassName,\n      textFieldStyle,\n      textFieldClassName,\n      label,\n      placeholder,\n      icon,\n      inline,\n      displayMode,\n      fullWidth,\n      lineDirection,\n      id,\n      disabled,\n      closeOnEsc,\n      animateInline,\n      portal,\n      renderNode,\n      lastChild,\n      block,\n      paddedBlock,\n      active,\n      error,\n      floating,\n      required,\n      leftIconStateful,\n      rightIcon,\n      rightIconStateful,\n      customSize,\n      errorText,\n      helpText,\n      helpOnFocus,\n      inlineIndicator,\n      'aria-label': ariaLabel,\n      nextIcon: propNextIcon,\n      previousIcon: propPreviousIcon,\n\n      // deprecated\n      isOpen,\n      previousIconChildren,\n      previousIconClassName,\n      nextIconChildren,\n      nextIconClassName,\n      /* eslint-disable no-unused-vars */\n      value: propValue,\n      visible: propVisible,\n      defaultValue,\n      defaultVisible,\n      onChange,\n      readOnly,\n      onVisibilityChange,\n      defaultCalendarDate,\n\n      // deprecated\n      initialCalendarDate,\n      initiallyOpen,\n      adjustMinWidth,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const nextIcon = getDeprecatedIcon(nextIconClassName, nextIconChildren, propNextIcon);\n    const previousIcon = getDeprecatedIcon(previousIconClassName, previousIconChildren, propPreviousIcon);\n    const visible = typeof isOpen !== 'undefined'\n      ? isOpen\n      : getField(this.props, this.state, 'visible');\n\n    const picker = (\n      <DatePicker\n        {...this.state}\n        {...props}\n        nextIcon={nextIcon}\n        previousIcon={previousIcon}\n        icon={!!icon}\n        inline={inline}\n        style={pickerStyle}\n        className={pickerClassName}\n        headerClassName={pickerHeaderClassName}\n        contentClassName={pickerContentClassName}\n        footerClassName={pickerFooterClassName}\n        displayMode={displayMode}\n        onCancelClick={this._handleCancelClick}\n        onOkClick={this._handleOkClick}\n        changeCalendarMode={this._changeCalendarMode}\n        onPreviousClick={this._previousMonth}\n        onNextClick={this._nextMonth}\n        onCalendarDateClick={this._setCalendarTempDate}\n        onCalendarYearClick={this._setCalendarTempYear}\n      />\n    );\n\n    let content;\n    if (inline) {\n      content = <Collapse collapsed={!visible} animate={animateInline}>{picker}</Collapse>;\n    } else {\n      content = (\n        <Dialog\n          id={`${id}-dialog`}\n          visible={visible}\n          onHide={this._handleCancelClick}\n          dialogClassName=\"md-dialog--picker\"\n          contentClassName=\"md-dialog-content--picker\"\n          aria-label={ariaLabel}\n          closeOnEsc={closeOnEsc}\n          renderNode={renderNode}\n          portal={portal}\n          lastChild={lastChild}\n          focusOnMount={false}\n        >\n          {picker}\n        </Dialog>\n      );\n    }\n\n    return (\n      <div style={style} className={cn('md-picker-container', className)} ref={this._setContainer}>\n        <TextField\n          id={id}\n          style={textFieldStyle}\n          className={cn({ 'md-pointer--hover': !disabled }, textFieldClassName)}\n          inputStyle={inputStyle}\n          inputClassName={cn({ 'md-pointer--hover': !disabled }, inputClassName)}\n          active={active || visible}\n          error={error}\n          floating={floating || visible}\n          required={required}\n          disabled={disabled}\n          leftIcon={icon}\n          leftIconStateful={leftIconStateful}\n          rightIcon={rightIcon}\n          rightIconStateful={rightIconStateful}\n          inlineIndicator={inlineIndicator}\n          block={block}\n          paddedBlock={paddedBlock}\n          fullWidth={fullWidth}\n          lineDirection={lineDirection}\n          customSize={customSize}\n          helpText={helpText}\n          helpOnFocus={helpOnFocus}\n          errorText={errorText}\n          label={label}\n          placeholder={placeholder}\n          onClick={this._toggleOpen}\n          onKeyDown={this._handleKeyDown}\n          value={this._getFormattedValue(this.props, this.state)}\n          readOnly\n        />\n        {content}\n      </div>\n    );\n  }\n}\n"]}