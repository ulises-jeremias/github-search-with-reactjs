{"version":3,"sources":["../../src/js/Pickers/TimePeriods.js"],"names":["TimePeriods","_setAM","props","timePeriod","setTempTime","tempTime","_setPM","propTypes","instanceOf","Date","isRequired","func","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAUqBA,W;;;;;;;;;;;;;;kMAkBnBC,M,GAAS,YAAM;AACb,YAAI,MAAKC,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAClC,gBAAKD,KAAL,CAAWE,WAAX,CAAuB,wBAAS,MAAKF,KAAL,CAAWG,QAApB,EAA8B,CAAC,EAA/B,CAAvB;AACD;AACF,O,QAEDC,M,GAAS,YAAM;AACb,YAAI,MAAKJ,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAClC,gBAAKD,KAAL,CAAWE,WAAX,CAAuB,wBAAS,MAAKF,KAAL,CAAWG,QAApB,EAA8B,EAA9B,CAAvB;AACD;AACF,O;;;;;+BAEQ;AAAA,YACCF,UADD,GACgB,KAAKD,KADrB,CACCC,UADD;;AAEP,eACE;AAAA;AAAA,YAAK,WAAU,iBAAf;AACE;AAAA;AAAA,cAAe,SAAS,KAAKF,MAA7B,EAAqC,QAAQE,eAAe,IAA5D;AACE;AAAA;AAAA,gBAAI,WAAU,gBAAd;AAAA;AAAA;AADF,WADF;AAIE;AAAA;AAAA,cAAe,SAAS,KAAKG,MAA7B,EAAqC,QAAQH,eAAe,IAA5D;AACE;AAAA;AAAA,gBAAI,WAAU,gBAAd;AAAA;AAAA;AADF;AAJF,SADF;AAUD;;;;;;AA1CkBH,a,CACZO,S,GAAY;AACjB;;;AAGAF,cAAU,oBAAUG,UAAV,CAAqBC,IAArB,EAA2BC,UAJpB;;AAMjB;;;AAGAN,iBAAa,oBAAUO,IAAV,CAAeD,UATX;;AAWjB;;;AAGAP,gBAAY,oBAAUS,MAAV,CAAiBF;AAdZ,G;oBADAV,W","file":"TimePeriods.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport addHours from '../utils/DateUtils/addHours';\nimport PickerControl from './PickerControl';\n\n/**\n * This component displays a section for switching between the AM\n * and PM time periods.\n */\nexport default class TimePeriods extends PureComponent {\n  static propTypes = {\n    /**\n     * The current time for the time picker.\n     */\n    tempTime: PropTypes.instanceOf(Date).isRequired,\n\n    /**\n     * A function to update the time for the time picker.\n     */\n    setTempTime: PropTypes.func.isRequired,\n\n    /**\n     * The current time period.\n     */\n    timePeriod: PropTypes.string.isRequired,\n  };\n\n  _setAM = () => {\n    if (this.props.timePeriod !== 'AM') {\n      this.props.setTempTime(addHours(this.props.tempTime, -12));\n    }\n  };\n\n  _setPM = () => {\n    if (this.props.timePeriod !== 'PM') {\n      this.props.setTempTime(addHours(this.props.tempTime, 12));\n    }\n  };\n\n  render() {\n    const { timePeriod } = this.props;\n    return (\n      <div className=\"md-time-periods\">\n        <PickerControl onClick={this._setAM} active={timePeriod === 'AM'}>\n          <h6 className=\"md-time-period\">AM</h6>\n        </PickerControl>\n        <PickerControl onClick={this._setPM} active={timePeriod === 'PM'}>\n          <h6 className=\"md-time-period\">PM</h6>\n        </PickerControl>\n      </div>\n    );\n  }\n}\n"]}