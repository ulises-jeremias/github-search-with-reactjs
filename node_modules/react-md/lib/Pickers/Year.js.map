{"version":3,"sources":["../../src/js/Pickers/Year.js"],"names":["Year","state","desktopActive","_setActiveFocus","btn","props","active","focus","_setActive","setState","_setInactive","_handleClick","e","onClick","year","className","text","primary","propTypes","string","bool","isRequired","func","number"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAUqBA,I;;;;;;;;;;;;;;oLAQnBC,K,GAAQ,EAAEC,eAAe,KAAjB,E,QAERC,e,GAAkB,UAACC,GAAD,EAAS;AACzB,YAAIA,OAAO,MAAKC,KAAL,CAAWC,MAAtB,EAA8B;AAC5BF,cAAIG,KAAJ;AACD;AACF,O,QAEDC,U,GAAa,YAAM;AACjB,cAAKC,QAAL,CAAc,EAAEP,eAAe,IAAjB,EAAd;AACD,O,QAEDQ,Y,GAAe,YAAM;AACnB,cAAKD,QAAL,CAAc,EAAEP,eAAe,KAAjB,EAAd;AACD,O,QAEDS,Y,GAAe,UAACC,CAAD,EAAO;AACpB,cAAKP,KAAL,CAAWQ,OAAX,CAAmB,MAAKR,KAAL,CAAWS,IAA9B,EAAoCF,CAApC;AACD,O;;;;;+BAEQ;AAAA,YACCV,aADD,GACmB,KAAKD,KADxB,CACCC,aADD;AAAA,qBAE6B,KAAKG,KAFlC;AAAA,YAECC,MAFD,UAECA,MAFD;AAAA,YAESS,SAFT,UAESA,SAFT;AAAA,YAEoBD,IAFpB,UAEoBA,IAFpB;;AAGP,eACE;AAAA;AAAA;AACE,kBAAK,QADP;AAEE,iBAAK,KAAKX,eAFZ;AAGE,uBAAW,0BAAG,SAAH,EAAc,EAAE,mBAAmBG,MAArB,EAAd,EAA6C,2BAAY;AAClEU,oBAAM,CAACV,MAAD,IAAW,CAACJ,aADgD;AAElEe,uBAASX,UAAUJ;AAF+C,aAAZ,CAA7C,EAGP,wCAHO,EAGmCa,SAHnC,CAHb;AAOE,qBAAS,KAAKJ;AAPhB;AASGG;AATH,SADF;AAaD;;;;;;AA5CkBd,M,CACZkB,S,GAAY;AACjBH,eAAW,oBAAUI,MADJ;AAEjBb,YAAQ,oBAAUc,IAAV,CAAeC,UAFN;AAGjBR,aAAS,oBAAUS,IAAV,CAAeD,UAHP;AAIjBP,UAAM,oBAAUS,MAAV,CAAiBF;AAJN,G;oBADArB,I","file":"Year.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\n/**\n * This is a component for rendering a year in the Date Picker's Year picker\n * list.\n */\nexport default class Year extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    active: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    year: PropTypes.number.isRequired,\n  };\n\n  state = { desktopActive: false };\n\n  _setActiveFocus = (btn) => {\n    if (btn && this.props.active) {\n      btn.focus();\n    }\n  };\n\n  _setActive = () => {\n    this.setState({ desktopActive: true });\n  };\n\n  _setInactive = () => {\n    this.setState({ desktopActive: false });\n  };\n\n  _handleClick = (e) => {\n    this.props.onClick(this.props.year, e);\n  };\n\n  render() {\n    const { desktopActive } = this.state;\n    const { active, className, year } = this.props;\n    return (\n      <button\n        type=\"button\"\n        ref={this._setActiveFocus}\n        className={cn('md-year', { 'md-year--active': active }, themeColors({\n          text: !active && !desktopActive,\n          primary: active || desktopActive,\n        }), 'md-btn md-pointer--hover md-full-width', className)}\n        onClick={this._handleClick}\n      >\n        {year}\n      </button>\n    );\n  }\n}\n"]}