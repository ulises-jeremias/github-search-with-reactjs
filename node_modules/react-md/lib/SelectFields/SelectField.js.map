{"version":3,"sources":["../../src/js/SelectFields/SelectField.js"],"names":["MOBILE_LIST_PADDING","SelectField","props","state","error","active","_getActive","value","defaultValue","listProps","role","ref","_scrollActiveIntoView","match","lastSearch","visible","defaultVisible","_items","_activeItem","_deleteKeys","_getDeleteKeys","_container","_field","querySelector","nextProps","itemLabel","itemValue","deleteKeys","nextState","menuItems","id","setState","item","preferLabel","type","key1","key2","keys","concat","Array","isArray","style","className","listStyle","listClassName","toggleStyle","toggleClassName","anchor","belowAnchor","fixedTo","position","xThreshold","yThreshold","listZDepth","listInline","listHeightRestricted","block","centered","sameWidth","fullWidth","repositionOnScroll","repositionOnResize","simplifiedMenu","minLeft","minRight","minBottom","fillViewportWidth","fillViewportHeight","menuTransitionName","menuTransitionEnterTimeout","menuTransitionLeaveTimeout","isOpen","propError","propMenuId","menuId","propVisible","onClick","onKeyDown","stripActiveItem","keyboardMatchingTimeout","defaultOpen","initiallyOpen","onMenuToggle","stretchList","menuStyle","menuClassName","floatingLabel","noAutoAdjust","adjustMinWidth","listId","activeLabel","below","Positions","BELOW","useSameWidth","toggle","_toggle","_handleFocus","_handleBlur","_close","_handleKeyDown","_handleClick","reduce","_reduceItems","HorizontalAnchors","VerticalAnchors","propTypes","oneOfType","number","string","name","object","inputStyle","inputClassName","bool","isRequired","onVisibilityChange","func","arrayOf","element","onChange","label","node","placeholder","disabled","required","errorText","helpText","helpOnFocus","onFocus","onBlur","dropdownIcon","toolbar","transitionName","transitionTime","closeOnOutsideClick","lineDirection","oneOf","iconChildren","iconClassName","defaultProps","x","INNER_LEFT","y","OVERLAP","TOP_LEFT","_getActiveItemLabel","v","_getItemPart","parseInt","activeIndex","some","index","found","_attemptItemFocus","focus","_setListItem","push","listRef","list","offsetTop","scrollTop","e","target","contains","dataset","_selectItem","parentNode","dataIndex","dataValue","prevValue","key","which","keyCode","up","down","preventDefault","_advanceFocus","_selectItemByLetter","decrement","valued","itemStripped","lastIndex","length","nextIndex","Math","max","min","charCode","String","fromCharCode","isLetter","isKeypad","letter","_matchingTimeout","clearTimeout","setTimeout","_selectFirstMatch","search","toUpperCase","replace","indexOf","activeItem","items","i","isValidElement","primaryText","stripped"],"mappings":"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","file":"SelectField.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport cn from 'classnames';\nimport deprecated from 'react-prop-types/lib/deprecated';\nimport isRequiredForA11y from 'react-prop-types/lib/isRequiredForA11y';\n\nimport { UP, DOWN, ESC, TAB, ZERO, NINE, KEYPAD_ZERO, KEYPAD_NINE } from '../constants/keyCodes';\nimport omit from '../utils/omit';\nimport getField from '../utils/getField';\nimport isBetween from '../utils/NumberUtils/isBetween';\nimport handleKeyboardAccessibility from '../utils/EventUtils/handleKeyboardAccessibility';\nimport controlled from '../utils/PropTypes/controlled';\nimport FontIcon from '../FontIcons/FontIcon';\nimport anchorShape from '../Helpers/anchorShape';\nimport fixedToShape from '../Helpers/fixedToShape';\nimport positionShape from '../Helpers/positionShape';\nimport Menu from '../Menus/Menu';\nimport ListItem from '../Lists/ListItem';\n\nimport SelectFieldToggle from './SelectFieldToggle';\n\nconst MOBILE_LIST_PADDING = 8;\n\nexport default class SelectField extends PureComponent {\n  static HorizontalAnchors = Menu.HorizontalAnchors;\n  static VerticalAnchors = Menu.VerticalAnchors;\n  static Positions = Menu.Positions;\n\n  static propTypes = {\n    /**\n     * An id to give the select field. This is required for accessibility.\n     */\n    id: isRequiredForA11y(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ])),\n\n    /**\n     * An optional name to give to the select field.\n     */\n    name: PropTypes.string,\n\n    /**\n     * An optional id to provide to the select field's menu. If this is omitted,\n     * it will default to `${id}-menu`.\n     */\n    menuId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional id to provide to the select field's list.\n     *\n     * @see {@link #menuId}\n     * @see {@link Menus/Menu#menuId}\n     */\n    listId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n\n    /**\n     * An optional style to apply to the select field's container (the menu).\n     */\n    style: PropTypes.object,\n\n    /**\n     * An optional className to apply to the select field's container (the menu).\n     */\n    className: PropTypes.string,\n\n    /**\n     * An optional style to apply to the menu's list.\n     */\n    listStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the menu's list.\n     */\n    listClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the select field's toggle.\n     */\n    toggleStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the select field's toggle.\n     */\n    toggleClassName: PropTypes.string,\n\n    /**\n     * An optional style to apply to the `AccessibleFakeInkedButton` that is the trigger\n     * for the select field.\n     */\n    inputStyle: PropTypes.object,\n\n    /**\n     * An optional className to apply to the `AccessibleFakeInkedButton` that is the trigger\n     * for the select field.\n     */\n    inputClassName: PropTypes.string,\n\n    /**\n     * Boolean if the select field should be have the menu's list visible by default.\n     */\n    defaultVisible: PropTypes.bool.isRequired,\n\n    /**\n     * Boolean if the select field should have the menu's list visible. This will make\n     * the select field controlled and require the `onVisibilityChange` prop to be defined,\n     */\n    visible: controlled(PropTypes.bool, 'onVisibilityChange', 'defaultVisible'),\n\n    /**\n     * An optional function to call when the select field's menu has it's visibility changed. The callback\n     * will include the next visible state and the event that triggered it.\n     */\n    onVisibilityChange: PropTypes.func,\n\n    /**\n     * A list of `number`, `string`, or `object` that should be used to create `ListItem`\n     * in the menu's list. When it is an `object`, it will use the `dataLabel` prop as the\n     * `primaryText` and use the value of `dataValue`.\n     *\n     * @see {@link #dataLabel}\n     * @see {@link #dataValue}\n     */\n    menuItems: PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.object,\n      PropTypes.element,\n    ])).isRequired,\n\n    /**\n     * The amount of time that a list of letters should be used when finding a menu item\n     * while typing. Since a user can select items by typing multiple letters in a row,\n     * this will be used as the timeout for clearing those letters.\n     *\n     * For example:\n     * - User types `g`\n     *\n     * Full match is now `'g'`.\n     *\n     * - User delays 200ms and types `u`\n     *\n     * Full match is now `'gu'`\n     *\n     * - User delays 1000ms and types `a`.\n     *\n     * Full match is now `'a'`\n     */\n    keyboardMatchingTimeout: PropTypes.number.isRequired,\n\n    /**\n     * The key to use for extracting a menu item's label if the menu item is an object.\n     *\n     * Example:\n     *\n     * ```js\n     * const item = { something: 'My Label', somethingElse: 'value' };\n     * const itemLabel = 'something';\n     * const itemValue = 'somethingElse';\n     * ```\n     */\n    itemLabel: PropTypes.string.isRequired,\n\n    /**\n     * The key to use for extracting a menu item's value if the menu item is an object.\n     *\n     * Example:\n     *\n     * ```js\n     * const item = { something: 'My Label', somethingElse: 'value' };\n     * const itemLabel = 'something';\n     * const itemValue = 'somethingElse';\n     * ```\n     */\n    itemValue: PropTypes.string.isRequired,\n\n    /**\n     * The default value to use for the select field. If this is set, it should either match\n     * one of the `number` or `string` in your `menuItems` list or be the empty string. If\n     * the `menuItems` is a list of `object`, this value should match one of the menu item's\n     * `dataValue` or be the empty string.\n     *\n     * ```js\n     * const menuItems = [{ label: 'Something': value: 0 }, { label: 'Something else', value: 1 }];\n     *\n     * // both valid\n     * defaultValue={0}\n     * defaultValue=\"\"\n     * ```\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n\n    /**\n     * The value to use for the select field. If this is defined, it becomes a controlled component\n     * and requires the `onChange` prop to be defined. See the `defaultValue` for more behavior info.\n     *\n     * @see {@link #defaultValue}\n     */\n    value: controlled(PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]), 'onChange', 'defaultValue'),\n\n    /**\n     * An optional function to call when the select field's value has been changed either when the user\n     * has click/touched/keyboard selected a value in the list, or the user has selected a value by typing\n     * in the select field while the menu's list is closed.\n     *\n     * The callback will include the next text field value, the selected item's index, the event that\n     * triggered the change, and the id, name, and value of the select field.\n     *\n     * ```js\n     * onChange(value, index, event, { id, name, value });\n     * ```\n     */\n    onChange: PropTypes.func,\n\n    /**\n     * An optional label to use with the select field. This will be a floating label as seen on the text field.\n     */\n    label: PropTypes.node,\n\n    /**\n     * An optional placeholder to use in the select field. This will only appear when no value has been selected.\n     */\n    placeholder: PropTypes.string,\n\n    /**\n     * Boolean if the select field should be disabled.\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Boolean if the select field is required. This will update the label and placeholder to include a `*` suffix.\n     */\n    required: PropTypes.bool,\n\n    /**\n     * Boolean if the select field is considered to be in an `error` state.\n     *\n     * @see {@link TextFields/TextField#error}\n     */\n    error: PropTypes.bool,\n\n    /**\n     * An optional text to display when the text select field is in an error state.\n     *\n     * @see {@link TextFields/TextField#errorText}\n     */\n    errorText: PropTypes.node,\n\n    /**\n     * An optional text to display below the select field to provide input help to the user.\n     * This will only be displayed if the select field is not in an error state.\n     *\n     * @see {@link #helpOnFocus}\n     * @see {@link TextFields/TextField#errorText}\n     */\n    helpText: PropTypes.node,\n\n    /**\n     * Boolean if the `helpText` should only appear on focus.\n     *\n     * @see {@link #helpText}\n     * @see {@link TextFields/TextField#helpOnFocus}\n     */\n    helpOnFocus: PropTypes.bool,\n\n    /**\n     * An optional function to call when any element in the select field has been clicked.\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * An optional function to call when the `keydown` event has been triggered anywhere in the\n     * select field.\n     */\n    onKeyDown: PropTypes.func,\n\n    /**\n     * An optional function to call when the select field's toggle has gained focus.\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * An optional function to call when the select field's toggle has been blurred. This\n     * will be triggered if the user hits the up or down arrow keys to traverse the list\n     * of items.\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * The icon to use to display the dropdown arrow.\n     */\n    dropdownIcon: PropTypes.element,\n\n    /**\n     * Boolean if the select field is in a toolbar. This should automatically be injected by the `Toolbar`\n     * component if being used as a `titleMenu` or one of the `actions`.\n     *\n     * @see {@link Toolbars/Toolbar#titleMenu}\n     * @see {@link Toolbars/Toolbar#actions}\n     */\n    toolbar: PropTypes.bool,\n\n    /**\n     * Boolean if the currently active item should be removed from the list of available `menuItems`.\n     * If this is `undefined`, it will strip out the active one only when the\n     * `position === SelectField.Positions.BELOW`.\n     */\n    stripActiveItem: PropTypes.bool,\n\n    /**\n     * The transition name to use when a new value has been selected. By default, it will have the\n     * new item _drop_ into the select field's input location.\n     */\n    transitionName: PropTypes.string.isRequired,\n\n    /**\n     * The transition time to use when a new value has been selected. If this value is `0`, there\n     * will be no transition.\n     */\n    transitionTime: PropTypes.number.isRequired,\n\n    /**\n     * This is how the menu's `List` gets anchored to the select field.\n     *\n     * @see {@link Helpers/Layover#anchor}\n     */\n    anchor: anchorShape,\n\n    /**\n     * This is the anchor to use when the `position` is set to `Autocomplete.Positions.BELOW`.\n     *\n     * @see {@link Helpers/Layover#belowAnchor}\n     */\n    belowAnchor: anchorShape,\n\n    /**\n     * This is the animation position for the list that appears.\n     *\n     * @see {@link Helpers/Layover#animationPosition}\n     */\n    position: positionShape,\n\n    /**\n     * This is how the menu's list will be \"fixed\" to the `toggle` component.\n     *\n     * @see {@link Helpers/Layover#fixedTo}\n     */\n    fixedTo: fixedToShape,\n\n    /**\n     * Boolean if the menu's list should appear horizontally instead of vertically.\n     */\n    listInline: PropTypes.bool,\n\n    /**\n     * The list's z-depth for applying box shadow. This should be a number from 0 to 5.\n     */\n    listZDepth: PropTypes.number,\n\n    /**\n     * Boolean if the list should have its height restricted to the `$md-menu-mobile-max-height`/\n     * `$md-menu-desktop-max-height` values.\n     *\n     * @see [md-menu-mobile-max-height](/components/menus?tab=1#variable-md-menu-mobile-max-height)\n     * @see [md-menu-desktop-max-height](/components/menus?tab=1#variable-md-menu-desktop-max-height)\n     */\n    listHeightRestricted: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#xThreshold}\n     */\n    xThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#yThreshold}\n     */\n    yThreshold: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#closeOnOutsideClick}\n     */\n    closeOnOutsideClick: PropTypes.bool,\n\n    /**\n     * An optional transition name to use for the list appearing/disappearing.\n     *\n     * @see {@link Menus/Menu#transitionName}\n     */\n    menuTransitionName: PropTypes.string,\n\n    /**\n     * @see {@link Helpers/Layover#transitionEnterTimeout}\n     */\n    menuTransitionEnterTimeout: PropTypes.number,\n\n    /**\n     * @see {@link Helpers/Layover#transitionLeaveTimeout}\n     */\n    menuTransitionLeaveTimeout: PropTypes.number,\n\n    /**\n     * @see {@link Menus/Menu#block}\n     */\n    block: PropTypes.bool,\n\n    /**\n     * @see {@link Menus/Menu#fullWidth}\n     */\n    fullWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#centered}\n     */\n    centered: Menu.propTypes.centered,\n\n    /**\n     * @see {@link Helpers/Layover#sameWidth}\n     */\n    sameWidth: Menu.propTypes.sameWidth,\n\n    /**\n     * Since the `menuItems` get mapped into `ListItem`, this prop is used to remove\n     * any unnecessary props from the `ListItem` itself. This is where you\n     * would remove parts of your object such as `description` or `__metadata__`.\n     */\n    deleteKeys: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ])),\n    ]),\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the `fixedTo` element scrolls.\n     *\n     * @see {@link Helpers/Layover#repositionOnScroll}\n     */\n    repositionOnScroll: PropTypes.bool,\n\n    /**\n     * Boolean if the menu should automatically try to reposition itself to stay within\n     * the viewport when the window resizes.\n     *\n     * @see {@link Helpers/Layover#repositionOnResize}\n     */\n    repositionOnResize: PropTypes.bool,\n\n    /**\n     * Boolean if the menu logic should be simplified without any viewport logic and position\n     * based on the relative position of the menu. This will most like require some additional\n     * styles applied to the menu.\n     *\n     * @see {@link Helpers/Layover#simplified}\n     */\n    simplifiedMenu: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#minLeft}\n     */\n    minLeft: Menu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minRight}\n     */\n    minRight: Menu.propTypes.minLeft,\n\n    /**\n     * @see {@link Helpers/Layover#minBottom}\n     */\n    minBottom: Menu.propTypes.minBottom,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportWidth}\n     */\n    fillViewportWidth: PropTypes.bool,\n\n    /**\n     * @see {@link Helpers/Layover#fillViewportHeight}\n     */\n    fillViewportHeight: PropTypes.bool,\n\n    /**\n     * The direction that the underline should appear from.\n     */\n    lineDirection: PropTypes.oneOf(['left', 'center', 'right']).isRequired,\n\n    iconChildren: deprecated(PropTypes.node, 'Use `dropdownIcon` instead'),\n    iconClassName: deprecated(PropTypes.string, 'Use `dropdownIcon` instead'),\n    isOpen: deprecated(PropTypes.bool, 'Use `visible` instead'),\n    defaultOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    initiallyOpen: deprecated(PropTypes.bool, 'Use `defaultVisible` instead'),\n    onMenuToggle: deprecated(PropTypes.func, 'Use `onVisibilityChange` instead'),\n    stretchList: deprecated(\n      PropTypes.bool,\n      'No longer valid after the changes to the `Menu` component. Possibly use `sameWidth` instead'\n    ),\n    menuStyle: deprecated(PropTypes.object, 'Use `style` instead'),\n    menuClassName: deprecated(PropTypes.string, 'Use `className` instead'),\n    floatingLabel: deprecated(\n      PropTypes.bool,\n      'A select field can only have floating labels now. Only provide the `label` prop'\n    ),\n    noAutoAdjust: deprecated(PropTypes.bool, 'No longer valid to use since select fields are no longer text fields'),\n    adjustMinWidth: deprecated(PropTypes.bool, 'No longer valid to use since select fields are no longer text fields'),\n  };\n\n  static defaultProps = {\n    anchor: {\n      x: SelectField.HorizontalAnchors.INNER_LEFT,\n      y: SelectField.VerticalAnchors.OVERLAP,\n    },\n    fixedTo: Menu.defaultProps.fixedTo,\n    position: SelectField.Positions.TOP_LEFT,\n    itemLabel: 'label',\n    itemValue: 'value',\n    dropdownIcon: <FontIcon>arrow_drop_down</FontIcon>,\n    lineDirection: 'left',\n    menuItems: [],\n    defaultValue: '',\n    defaultVisible: false,\n    keyboardMatchingTimeout: 1000,\n    transitionName: 'md-drop',\n    transitionTime: 300,\n    repositionOnScroll: true,\n    repositionOnResize: false,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: false,\n      active: false,\n      ...this._getActive(props, { value: props.defaultValue }),\n      listProps: {\n        role: 'listbox',\n        ref: this._scrollActiveIntoView,\n        'aria-activedescendant': null,\n      },\n      match: null,\n      lastSearch: null,\n      value: props.defaultValue,\n      visible: props.defaultVisible,\n    };\n\n    this._items = [];\n    this._activeItem = null;\n    this._deleteKeys = this._getDeleteKeys(props);\n  }\n\n  componentDidMount() {\n    this._container = findDOMNode(this);\n    this._field = this._container.querySelector('.md-select-field');\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { itemLabel, itemValue, deleteKeys } = this.props;\n    if (deleteKeys !== nextProps.deleteKeys || itemLabel !== nextProps.itemLabel || itemValue !== nextProps.itemValue) {\n      this._deleteKeys = this._getDeleteKeys(nextProps);\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    const { value, menuItems } = this.props;\n    const { active, listProps } = nextState;\n\n    let state;\n    if (value !== nextProps.value || menuItems !== nextProps.menuItems) {\n      state = this._getActive(nextProps, nextState);\n    }\n\n    if (this.state.active !== active) {\n      state = state || {};\n      state.listProps = {\n        ...listProps,\n        'aria-activedescendant': active ? `${nextProps.id}-options-active` : null,\n      };\n    }\n\n    if (state) {\n      this.setState(state);\n    }\n  }\n\n  /**\n   * Gets the current value from the select field. This is used when you have an uncontrolled\n   * text field and simply need the value from a ref callback.\n   *\n   * @return {String} the select field's value\n   */\n  get value() {\n    return getField(this.props, this.state, 'value');\n  }\n\n  _getItemPart(item, itemLabel, itemValue, preferLabel = false) {\n    const type = typeof item;\n    if (type === 'number' || type === 'string') {\n      return item;\n    } else if (type === 'object') {\n      const key1 = preferLabel ? itemLabel : itemValue;\n      const key2 = preferLabel ? itemValue : itemLabel;\n      return typeof item[key1] !== 'undefined' ? item[key1] : item[key2];\n    }\n\n    return '';\n  }\n\n  _getDeleteKeys({ itemLabel, itemValue, deleteKeys }) {\n    const keys = [itemLabel, itemValue];\n    if (deleteKeys) {\n      return keys.concat(Array.isArray(deleteKeys) ? deleteKeys : [deleteKeys]);\n    }\n\n    return keys;\n  }\n\n  _getActiveItemLabel = (item, value, itemLabel, itemValue) => {\n    const v = this._getItemPart(item, itemLabel, itemValue);\n    const label = this._getItemPart(item, itemLabel, itemValue, true);\n\n    return v === value || v === parseInt(value, 10) ? label : '';\n  };\n\n  _getActive = (props, state) => {\n    let activeLabel = '';\n    let activeIndex = -1;\n    const value = getField(props, state, 'value');\n    if (value || value === 0) {\n      const { menuItems, itemLabel, itemValue } = props;\n\n      menuItems.some((item, index) => {\n        activeLabel = this._getActiveItemLabel(item, value, itemLabel, itemValue);\n        const found = activeLabel || activeLabel === 0;\n        if (found) {\n          activeIndex = index;\n        }\n\n        return found;\n      });\n    }\n\n    return { activeLabel, activeIndex };\n  };\n\n  _attemptItemFocus = (index) => {\n    if (index === -1) {\n      return;\n    }\n\n    const item = this._items[index];\n    if (item) {\n      item.focus();\n    }\n  };\n\n  _setListItem = (item) => {\n    if (!item) {\n      return;\n    }\n\n    if (item.props.active) {\n      this._activeItem = findDOMNode(item);\n      item.focus();\n    }\n\n    this._items.push(item);\n  };\n\n  _scrollActiveIntoView = (listRef) => {\n    if (listRef === null) {\n      this._items = [];\n      return;\n    } else if (!this._activeItem) {\n      return;\n    }\n\n    const list = findDOMNode(listRef);\n    const { offsetTop } = this._activeItem;\n    list.scrollTop = offsetTop > MOBILE_LIST_PADDING ? offsetTop : 0;\n  };\n\n  _toggle = (e) => {\n    const { isOpen, onVisibilityChange, onMenuToggle } = this.props;\n    const visible = !(typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible'));\n    if (onMenuToggle || onVisibilityChange) {\n      (onMenuToggle || onVisibilityChange)(visible, e);\n    }\n\n    let state;\n    if (typeof isOpen === 'undefined' && typeof this.props.visible === 'undefined') {\n      state = { visible };\n    }\n\n    if (state) {\n      this.setState(state);\n    }\n  };\n\n  _close = (e) => {\n    if (this.props.onVisibilityChange) {\n      this.props.onVisibilityChange(false, e);\n    }\n\n    if (e.type === 'keydown' && this._field) {\n      this._field.focus();\n    }\n\n    let state;\n    if (this.props.required && !getField(this.props, this.state, 'value')) {\n      state = { error: true };\n    }\n\n    if (typeof this.props.visible === 'undefined') {\n      state = state || {};\n      state.visible = false;\n    }\n\n    if (state) {\n      this.setState(state);\n    }\n  };\n\n  _handleClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n\n    const { isOpen } = this.props;\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n    if (visible && this._container) {\n      let node = e.target;\n      while (this._container.contains(node)) {\n        if (node.dataset && typeof node.dataset.id !== 'undefined') {\n          const { id, value } = node.dataset;\n          this._selectItem(parseInt(id, 10), value, e);\n          return;\n        }\n\n        node = node.parentNode;\n      }\n    }\n  };\n\n  _selectItem = (dataIndex, dataValue, e) => {\n    const { required, menuItems, itemLabel, itemValue, onChange, id, name } = this.props;\n    const value = this._getItemPart(menuItems[dataIndex], itemLabel, itemValue);\n    const prevValue = getField(this.props, this.state, 'value');\n    if (prevValue !== value && onChange) {\n      onChange(value, dataIndex, e, { id, name, value });\n    }\n\n    const state = {\n      ...this._getActive({ value, itemLabel, itemValue, menuItems }, {}),\n      error: !!required && !value && value !== 0,\n    };\n\n    if (typeof this.props.value === 'undefined') {\n      state.value = value;\n    }\n\n    this.setState(state);\n  };\n\n  _handleFocus = (e) => {\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n\n    this.setState({ active: true });\n  };\n\n  _handleBlur = (e) => {\n    if (this.props.onBlur) {\n      this.props.onBlur(e);\n    }\n\n    let { error } = this.state;\n    const { isOpen, required } = this.props;\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n    const value = getField(this.props, this.state, 'value');\n\n    if (required && !visible) {\n      error = !value;\n    }\n\n    this.setState({ active: false, error });\n  };\n\n  _handleKeyDown = (e) => {\n    const { isOpen, onKeyDown } = this.props;\n    if (onKeyDown) {\n      onKeyDown(e);\n    }\n\n    const key = e.which || e.keyCode;\n    const up = key === UP;\n    const down = key === DOWN;\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n\n    if (up || down) {\n      e.preventDefault();\n\n      if (!visible) {\n        this._toggle(e);\n        return;\n      }\n\n      this._advanceFocus(up);\n    } else if (!visible && handleKeyboardAccessibility(e, this._toggle, true, true)) {\n      return;\n    } else if (visible && (key === ESC || key === TAB)) {\n      if (this._field && key === ESC) {\n        this._field.focus();\n      }\n\n      this._close(e);\n      return;\n    } else {\n      this._selectItemByLetter(key, e);\n    }\n  };\n\n  _advanceFocus = (decrement) => {\n    const { position, stripActiveItem } = this.props;\n    const { activeIndex } = this.state;\n\n    const below = position === SelectField.Positions.BELOW;\n    const value = getField(this.props, this.state, 'value');\n    const valued = !!value || value === 0;\n    const itemStripped = (typeof stripActiveItem !== 'undefined' ? stripActiveItem : below) && valued;\n\n    // If the select field is positioned below and there is no value, need to increment the last index\n    // by one since this select field removes the active item. Need to account for that here when there\n    // is no value.\n    const lastIndex = this._items.length - (itemStripped ? 0 : 1);\n    if ((decrement && activeIndex <= 0) || (!decrement && activeIndex >= lastIndex)) {\n      return;\n    }\n\n    const nextIndex = Math.max(-1, Math.min(lastIndex, activeIndex + (decrement ? -1 : 1)));\n    if (nextIndex === activeIndex) {\n      return;\n    }\n\n    this._attemptItemFocus(nextIndex - (itemStripped ? 1 : 0));\n    this.setState({ activeIndex: nextIndex });\n  };\n\n  _selectItemByLetter = (key, e) => {\n    const charCode = String.fromCharCode(key);\n    const isLetter = charCode && charCode.match(/[A-Za-z0-9-_ ]/);\n    const isKeypad = isBetween(key, KEYPAD_ZERO, KEYPAD_NINE);\n    if (!isBetween(key, ZERO, NINE) && !isKeypad && !isLetter) {\n      return;\n    }\n\n    const letter = isLetter ? charCode : String(key - (isKeypad ? KEYPAD_ZERO : ZERO));\n\n    if (this._matchingTimeout) {\n      clearTimeout(this._matchingTimeout);\n    }\n\n    this._matchingTimeout = setTimeout(() => {\n      this._matchingTimeout = null;\n\n      this.setState({ match: null, lastSearch: null });\n    }, this.props.keyboardMatchingTimeout);\n\n    this._selectFirstMatch(letter, e);\n  };\n\n  _selectFirstMatch = (letter, e) => {\n    const { menuItems, itemLabel, itemValue, isOpen, onChange, id, name } = this.props;\n    const { lastSearch } = this.state;\n    let match = -1;\n    const search = `${lastSearch || ''}${letter}`.toUpperCase();\n    menuItems.some((item, index) => {\n      if (item && typeof item === 'object' && item.disabled) {\n        return false;\n      }\n\n      const label = String(this._getItemPart(item, itemLabel, itemValue, true));\n      if (label && label.toUpperCase().replace(/\\s/g, '').indexOf(search) === 0) {\n        match = index;\n      }\n\n      return match > -1;\n    });\n\n    const state = {\n      match,\n      lastSearch: search,\n    };\n\n    if (match !== -1) {\n      const activeItem = menuItems[match];\n      state.activeLabel = this._getItemPart(activeItem, itemLabel, itemValue, true);\n      state.activeIndex = match;\n\n      const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n      if (visible) {\n        if (state.match !== this.state.match) {\n          this._attemptItemFocus(state.activeIndex);\n        }\n      } else {\n        const value = this._getItemPart(activeItem, itemLabel, itemValue);\n        const prevValue = getField(this.props, this.state, 'value');\n\n        if (value !== prevValue && onChange) {\n          onChange(value, match, e, { id, name, value });\n        }\n\n        if (typeof this.props.value === 'undefined') {\n          state.value = value;\n        }\n      }\n    }\n\n    this.setState(state);\n  };\n\n  _reduceItems = (items, item, i) => {\n    if (item === null) {\n      return items;\n    } else if (React.isValidElement(item)) {\n      items.push(item);\n      return items;\n    }\n\n    const { id, itemLabel, itemValue, position, stripActiveItem } = this.props;\n    const below = position === SelectField.Positions.BELOW;\n    const value = getField(this.props, this.state, 'value');\n    const type = typeof item;\n\n    let props;\n    const dataValue = this._getItemPart(item, itemLabel, itemValue);\n    const primaryText = this._getItemPart(item, itemLabel, itemValue, true);\n    if (type === 'object') {\n      props = omit(item, this._deleteKeys);\n    }\n\n    const active = dataValue === value || dataValue === parseInt(value, 10);\n    const stripped = (typeof stripActiveItem !== 'undefined' ? stripActiveItem : below) && active;\n    if (!stripped) {\n      const disabled = (props && props.disabled) || false;\n      items.push(\n        <ListItem\n          {...props}\n          ref={disabled ? null : this._setListItem}\n          id={active ? `${id}-options-active` : null}\n          active={active}\n          tabIndex={-1}\n          primaryText={primaryText}\n          key={item.key || dataValue}\n          role=\"option\"\n          data-id={disabled ? null : i}\n          data-value={disabled ? null : dataValue}\n        />\n      );\n    }\n\n    return items;\n  };\n\n  render() {\n    const {\n      id,\n      style,\n      className,\n      listStyle,\n      listClassName,\n      toggleStyle,\n      toggleClassName,\n      menuItems,\n      anchor,\n      belowAnchor,\n      fixedTo,\n      position,\n      xThreshold,\n      yThreshold,\n      listZDepth,\n      listInline,\n      listHeightRestricted,\n      block,\n      centered,\n      sameWidth,\n      fullWidth,\n      repositionOnScroll,\n      repositionOnResize,\n      simplifiedMenu,\n      minLeft,\n      minRight,\n      minBottom,\n      fillViewportWidth,\n      fillViewportHeight,\n      menuTransitionName,\n      menuTransitionEnterTimeout,\n      menuTransitionLeaveTimeout,\n      isOpen, // deprecated\n      /* eslint-disable no-unused-vars */\n      error: propError,\n      menuId: propMenuId,\n      visible: propVisible,\n      itemLabel,\n      itemValue,\n      defaultValue,\n      defaultVisible,\n      onClick,\n      onKeyDown,\n      deleteKeys,\n      stripActiveItem,\n      keyboardMatchingTimeout,\n\n      // Deprecated\n      defaultOpen,\n      initiallyOpen,\n      onMenuToggle,\n      stretchList,\n      menuStyle,\n      menuClassName,\n      floatingLabel,\n      noAutoAdjust,\n      adjustMinWidth,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    let { menuId, listId, error } = this.props;\n    error = error || this.state.error;\n    if (!menuId) {\n      menuId = `${id}-menu`;\n    }\n\n    if (!listId) {\n      listId = `${menuId}-options`;\n    }\n\n    const { listProps, active, activeLabel } = this.state;\n    const below = position === SelectField.Positions.BELOW;\n    const visible = typeof isOpen !== 'undefined' ? isOpen : getField(this.props, this.state, 'visible');\n    const value = getField(this.props, this.state, 'value');\n    const useSameWidth = typeof sameWidth !== 'undefined' ? sameWidth : below;\n\n    const toggle = (\n      <SelectFieldToggle\n        {...props}\n        id={id}\n        style={toggleStyle}\n        className={toggleClassName}\n        visible={visible}\n        value={value}\n        below={below}\n        error={error}\n        active={active}\n        activeLabel={activeLabel}\n        onClick={this._toggle}\n        onFocus={this._handleFocus}\n        onBlur={this._handleBlur}\n      />\n    );\n\n    return (\n      <Menu\n        id={menuId}\n        listId={listId}\n        style={style}\n        className={cn('md-menu--select-field', className)}\n        listProps={listProps}\n        listStyle={listStyle}\n        listClassName={listClassName}\n        toggle={toggle}\n        visible={visible}\n        onClose={this._close}\n        onKeyDown={this._handleKeyDown}\n        onClick={this._handleClick}\n        simplified={simplifiedMenu}\n        anchor={anchor}\n        belowAnchor={belowAnchor}\n        fixedTo={fixedTo}\n        position={position}\n        xThreshold={xThreshold}\n        yThreshold={yThreshold}\n        listZDepth={listZDepth}\n        listInline={listInline}\n        listHeightRestricted={listHeightRestricted}\n        sameWidth={useSameWidth}\n        block={block}\n        centered={centered}\n        fullWidth={fullWidth}\n        minLeft={minLeft}\n        minRight={minRight}\n        minBottom={minBottom}\n        fillViewportWidth={fillViewportWidth}\n        fillViewportHeight={fillViewportHeight}\n        repositionOnScroll={repositionOnScroll}\n        repositionOnResize={repositionOnResize}\n        transitionName={menuTransitionName}\n        transitionEnterTimeout={menuTransitionEnterTimeout}\n        transitionLeaveTimeout={menuTransitionLeaveTimeout}\n      >\n        {menuItems.reduce(this._reduceItems, [])}\n      </Menu>\n    );\n  }\n}\n"]}