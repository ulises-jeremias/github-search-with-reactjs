{"version":3,"sources":["../../src/js/SelectFields/SelectFieldInput.js"],"names":["SelectFieldInput","state","transition","_timeout","_transitionNewValue","props","transitionTime","transitionName","clearTimeout","setTimeout","setState","nextProps","value","id","className","name","label","placeholder","active","activeLabel","error","disabled","required","toolbar","below","lineDirection","dropdownIcon","iconChildren","iconClassName","divider","visibleLabel","labelActive","icon","cloneElement","hint","text","propTypes","oneOfType","number","string","style","object","isRequired","bool","node","element","defaultProps"],"mappings":"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","file":"SelectFieldInput.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport TICK from '../constants/CSSTransitionGroupTick';\nimport themeColors from '../utils/themeColors';\nimport FontIcon from '../FontIcons/FontIcon';\nimport AccessibleFakeInkedButton from '../Helpers/AccessibleFakeInkedButton';\nimport IconSeparator from '../Helpers/IconSeparator';\nimport Paper from '../Papers/Paper';\nimport TextFieldDivider from '../TextFields/TextFieldDivider';\n\nexport default class SelectFieldInput extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    style: PropTypes.object,\n    className: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]).isRequired,\n    disabled: PropTypes.bool,\n    required: PropTypes.bool,\n    label: PropTypes.node,\n    placeholder: PropTypes.string,\n    active: PropTypes.bool,\n    activeLabel: PropTypes.node,\n    below: PropTypes.bool,\n    error: PropTypes.bool,\n    toolbar: PropTypes.bool,\n    dropdownIcon: PropTypes.element,\n    iconClassName: PropTypes.string,\n    iconChildren: PropTypes.node,\n    transitionName: PropTypes.string.isRequired,\n    transitionTime: PropTypes.number.isRequired,\n    lineDirection: TextFieldDivider.propTypes.lineDirection,\n  };\n\n  static defaultProps = {\n    transitionName: 'md-drop',\n    transitionTime: 300,\n  };\n\n  state = { transition: null };\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.value !== nextProps.value) {\n      this._transitionNewValue();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n  }\n\n  _timeout = null;\n  _transitionNewValue = () => {\n    const { transitionTime, transitionName } = this.props;\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = setTimeout(() => {\n      this._timeout = setTimeout(() => {\n        this._timeout = null;\n        this.setState({ transition: null });\n      }, transitionTime);\n\n      this.setState({ transition: `${this.state.transition} ${transitionName}-enter-active` });\n    }, TICK);\n\n    this.setState({ transition: `${transitionName}-enter` });\n  };\n\n  render() {\n    const {\n      id,\n      className,\n      name,\n      value,\n      label,\n      placeholder,\n      active,\n      activeLabel,\n      error,\n      disabled,\n      required,\n      toolbar,\n      below,\n      lineDirection,\n      dropdownIcon,\n\n      // deprecated\n      iconChildren,\n      iconClassName,\n      /* eslint-disable no-unused-vars */\n      transitionName,\n      transitionTime,\n      /* eslint-enable no-unused-vars */\n      ...props\n    } = this.props;\n\n    const { transition } = this.state;\n\n    let divider;\n    if (!below && !toolbar) {\n      divider = (\n        <TextFieldDivider\n          key=\"text-divider\"\n          active={active}\n          error={error}\n          lineDirection={lineDirection}\n          className=\"md-divider--select-field\"\n        />\n      );\n    }\n\n    let visibleLabel = activeLabel;\n    if (!activeLabel && activeLabel !== 0) {\n      visibleLabel = ((!label || active) && placeholder) || '';\n    }\n\n    const labelActive = !!activeLabel || activeLabel === 0;\n\n    let icon = dropdownIcon;\n    if (iconClassName || iconChildren) {\n      icon = <FontIcon iconClassName={iconClassName}>{iconChildren}</FontIcon>;\n    }\n    icon = React.cloneElement(icon, { disabled });\n\n    return (\n      <AccessibleFakeInkedButton\n        {...props}\n        id={`${id}-toggle`}\n        role=\"listbox\"\n        disabled={disabled}\n        component={Paper}\n        zDepth={below && active ? 1 : 0}\n        inkDisabled={!below}\n        className={cn('md-select-field', themeColors({\n          disabled,\n          hint: !labelActive && placeholder,\n          text: labelActive,\n        }), className)}\n      >\n        <IconSeparator\n          label={visibleLabel}\n          labelClassName={transition}\n          className={cn('md-text-field', {\n            'md-text-field--margin': !below && !label,\n            'md-text-field--floating-margin': label,\n            'md-text-field--toolbar': toolbar && !below,\n            'md-select-field--text-field': !below,\n            'md-select-field--btn': below,\n          })}\n        >\n          {icon}\n        </IconSeparator>\n        {divider}\n        <input\n          key=\"value\"\n          type=\"hidden\"\n          id={id}\n          name={name}\n          value={value}\n          required={required}\n          disabled={disabled}\n        />\n      </AccessibleFakeInkedButton>\n    );\n  }\n}\n"]}