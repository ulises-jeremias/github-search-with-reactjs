{"version":3,"sources":["../../src/js/SelectionControls/RadioGroup.js"],"names":["RadioGroup","props","children","id","defaultValue","name","value","map","controls","Object","assign","radio","checkedIcon","uncheckedIcon","checkedIconChildren","checkedIconClassName","uncheckedIconChildren","uncheckedIconClassName","propTypes","oneOfType","number","string","className","arrayOf","node","isRequired","inline","bool","onChange","func","_deprecated"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAgBqBA,U;;;;;;;;;;;+BAiBV;AAAA,qBACwB,KAAKC,KAD7B;AAAA,YACCC,QADD,UACCA,QADD;AAAA,YACcD,KADd;;AAEP,eAAOA,MAAME,EAAb;AACA,eAAOF,MAAMG,YAAb;;AAHO,sBAKoB,KAAKH,KALzB;AAAA,YAKDE,EALC,WAKDA,EALC;AAAA,YAKGC,YALH,WAKGA,YALH;;AAMP,YAAI,CAACD,EAAL,EAAS;AACPA,eAAQF,MAAMI,IAAd;AACD;;AAED,YAAI,OAAOJ,MAAMK,KAAb,KAAuB,WAA3B,EAAwC;AACtC,cAAI,OAAOF,YAAP,KAAwB,WAA5B,EAAyC;AACvCA,2BAAe,gBAASG,GAAT,CAAaL,QAAb,EAAuB;AAAA,kBAAYI,KAAZ,QAAGL,KAAH,CAAYK,KAAZ;AAAA,qBAA0BA,KAA1B;AAAA,aAAvB,EAAwD,CAAxD,CAAf;AACD;AACF;;AAED,YAAME,WAAW,gBAASD,GAAT,CAAaL,QAAb,EAAuB,iBAAS;AAC/C,cAAMD,QAAQQ,OAAOC,MAAP,CAAc,EAAd,EAAkBC,MAAMV,KAAxB,CAAd;AACA,iBAAOA,MAAMW,WAAb;AACA,iBAAOX,MAAMY,aAAb;AACA,iBAAOZ,MAAMa,mBAAb;AACA,iBAAOb,MAAMc,oBAAb;AACA,iBAAOd,MAAMe,qBAAb;AACA,iBAAOf,MAAMgB,sBAAb;AACA,8BAAYhB,KAAZ;AACD,SATgB,CAAjB;AAUA,eAAO,4EAA2BA,KAA3B,IAAkC,IAAIE,EAAtC,EAA0C,cAAcC,YAAxD,EAAsE,MAAK,OAA3E,EAAmF,UAAUI,QAA7F,IAAP;AACD;;;;;;AA5CkBR,Y,CACZkB,S,GAAY;AACjBf,QAAI,oBAAUgB,SAAV,CAAoB,CACtB,oBAAUC,MADY,EAEtB,oBAAUC,MAFY,CAApB,CADa;AAKjBjB,kBAAc,oBAAUiB,MALP;AAMjBC,eAAW,oBAAUD,MANJ;AAOjBnB,cAAU,oBAAUqB,OAAV,CAAkB,oBAAUC,IAA5B,EAAkCC,UAP3B;AAQjBC,YAAQ,oBAAUC,IARD;AASjBC,cAAU,oBAAUC,IATH;AAUjBxB,UAAM,oBAAUgB,MAVC;AAWjBf,WAAO,oBAAUe,MAXA;;AAajBS,iBAAa,0BAAW,oBAAUH,IAArB,EAA2B,mDAA3B;AAbI,G;oBADA3B,U","file":"RadioGroup.js","sourcesContent":["/* eslint-disable no-unused-vars, no-shadow */\nimport React, { PureComponent, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport deprecated from 'react-prop-types/lib/deprecated';\n\nimport SelectionControlGroup from './SelectionControlGroup';\n\n// This will still work, but generate a lot of warnings\n\n/**\n * The `RadioGroup` component is a state manager for the `Radio` component.\n * It will automatically inject the name, an onChange function, and\n * determine whether a radio is checked.\n *\n * This is just a simple wrapper to reduce some prop redundancy.\n */\nexport default class RadioGroup extends PureComponent {\n  static propTypes = {\n    id: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    defaultValue: PropTypes.string,\n    className: PropTypes.string,\n    children: PropTypes.arrayOf(PropTypes.node).isRequired,\n    inline: PropTypes.bool,\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    value: PropTypes.string,\n\n    _deprecated: deprecated(PropTypes.bool, 'Use the `SelectionControlGroup` component instead'),\n  };\n\n  render() {\n    const { children, ...props } = this.props;\n    delete props.id;\n    delete props.defaultValue;\n\n    let { id, defaultValue } = this.props;\n    if (!id) {\n      id = `${props.name}-radios-unique-please`;\n    }\n\n    if (typeof props.value === 'undefined') {\n      if (typeof defaultValue === 'undefined') {\n        defaultValue = Children.map(children, ({ props: { value } }) => value)[0];\n      }\n    }\n\n    const controls = Children.map(children, radio => {\n      const props = Object.assign({}, radio.props);\n      delete props.checkedIcon;\n      delete props.uncheckedIcon;\n      delete props.checkedIconChildren;\n      delete props.checkedIconClassName;\n      delete props.uncheckedIconChildren;\n      delete props.uncheckedIconClassName;\n      return { ...props };\n    });\n    return <SelectionControlGroup {...props} id={id} defaultValue={defaultValue} type=\"radio\" controls={controls} />;\n  }\n}\n"]}