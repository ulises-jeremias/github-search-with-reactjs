{"version":3,"sources":["../../src/js/Sliders/Track.js"],"names":["half","w","Track","props","on","off","active","disabled","dragging","className","thumbLeft","trackFillWidth","trackFillStyle","trackFillClassName","discreteValueStyle","discreteValueClassName","maskInked","maskLeaving","thumbStyle","thumbClassName","discrete","onThumbFocus","onThumbKeyUp","onThumbKeyDown","value","tickWidth","discreteTicks","scale","step","valuePrecision","ticks","amt","offset","inc","i","left","width","push","propTypes","style","object","string","bool","isRequired","number","func","oneOfType"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,MAAMA,OAAO,SAAPA,IAAO;AAAA,WAAKC,IAAI,CAAT;AAAA,GAAb;;AAEA;;;;;MAIqBC,K;;;;;;;;;;;+BAkCV;AAAA,qBA6BH,KAAKC,KA7BF;AAAA,YAELC,EAFK,UAELA,EAFK;AAAA,YAGLC,GAHK,UAGLA,GAHK;AAAA,YAILC,MAJK,UAILA,MAJK;AAAA,YAKLC,QALK,UAKLA,QALK;AAAA,YAMLC,QANK,UAMLA,QANK;AAAA,YAOLC,SAPK,UAOLA,SAPK;AAAA,YAQLC,SARK,UAQLA,SARK;AAAA,YASLC,cATK,UASLA,cATK;AAAA,YAULC,cAVK,UAULA,cAVK;AAAA,YAWLC,kBAXK,UAWLA,kBAXK;AAAA,YAYLC,kBAZK,UAYLA,kBAZK;AAAA,YAaLC,sBAbK,UAaLA,sBAbK;AAAA,YAcLC,SAdK,UAcLA,SAdK;AAAA,YAeLC,WAfK,UAeLA,WAfK;AAAA,YAgBLC,UAhBK,UAgBLA,UAhBK;AAAA,YAiBLC,cAjBK,UAiBLA,cAjBK;AAAA,YAkBLC,QAlBK,UAkBLA,QAlBK;AAAA,YAmBLC,YAnBK,UAmBLA,YAnBK;AAAA,YAoBLC,YApBK,UAoBLA,YApBK;AAAA,YAqBLC,cArBK,UAqBLA,cArBK;AAAA,YAsBLC,KAtBK,UAsBLA,KAtBK;AAAA,YAuBLC,SAvBK,UAuBLA,SAvBK;AAAA,YAwBLC,aAxBK,UAwBLA,aAxBK;AAAA,YAyBLC,KAzBK,UAyBLA,KAzBK;AAAA,YA0BLC,IA1BK,UA0BLA,IA1BK;AAAA,YA2BLC,cA3BK,UA2BLA,cA3BK;AAAA,YA4BF1B,KA5BE;;AA+BP,YAAM2B,QAAQ,EAAd;AACA,YAAI,OAAOJ,aAAP,KAAyB,WAAzB,IAAwC,CAACnB,QAAzC,IAAqDa,QAAzD,EAAmE;AACjE,cAAMW,MAAMJ,SAASD,gBAAgBE,IAAzB,CAAZ;AACA,cAAMI,SAAS,0BAAWP,SAAX,EAAsBzB,IAAtB,EAA4B,IAA5B,CAAf;AACA,cAAMiC,MAAM,MAAMF,GAAlB;;AAEA,eAAK,IAAIG,IAAI,CAAb,EAAgBA,KAAKH,GAArB,EAA0BG,GAA1B,EAA+B;AAC7B,gBAAIC,OAAUD,IAAID,GAAd,MAAJ;AACA,gBAAIG,QAAQX,SAAZ;AACA,gBAAIS,MAAM,CAAN,IAAWA,MAAMH,GAArB,EAA0B;AACxBK,sBAAQ,0BAAWX,SAAX,EAAsBzB,IAAtB,CAAR;AACD,aAFD,MAEO;AACLmC,+BAAeA,IAAf,WAAyBH,MAAzB;AACD;;AAEDF,kBAAMO,IAAN,CACE;AACE,6BAAaH,CADf;AAEE,yBAAU,yBAFZ;AAGE,qBAAO,EAAEC,UAAF,EAAQC,YAAR;AAHT,cADF;AAOD;AACF;;AAED,eACE;AAAA;AAAA,uBAASjC,KAAT,IAAgB,WAAW,0BAAG,iBAAH,EAAsBM,SAAtB,CAA3B;AACGqB,eADH;AAEE;AACE,mBAAOlB,cADT;AAEE,uBAAWC,kBAFb;AAGE,sBAAUN,QAHZ;AAIE,sBAAUC,QAJZ;AAKE,4BAAgBG;AALlB,YAFF;AASE;AACE,mBAAOO,UADT;AAEE,uBAAWC,cAFb;AAGE,gBAAIf,EAHN;AAIE,iBAAKC,GAJP;AAKE,sBAAUE,QALZ;AAME,sBAAUC,QANZ;AAOE,oBAAQF,MAPV;AAQE,uBAAWI,SARb;AASE,qBAASW,YATX;AAUE,qBAASC,YAVX;AAWE,uBAAWC,cAXb;AAYE,sBAAUH;AAZZ,YATF;AAuBE;AACE,mBAAON,kBADT;AAEE,uBAAWC,sBAFb;AAGE,sBAAUK,QAHZ;AAIE,sBAAUZ,QAJZ;AAKE,oBAAQF,MALV;AAME,mBAAOkB,KANT;AAOE,uBAAWd,SAPb;AAQE,4BAAgBmB;AARlB,YAvBF;AAiCE;AACE,sBAAUrB,QADZ;AAEE,sBAAUD,QAFZ;AAGE,uBAAWG,SAHb;AAIE,uBAAWM,SAJb;AAKE,sBAAUI,QALZ;AAME,qBAASH;AANX;AAjCF,SADF;AA4CD;;;;;;AAtIkBf,O,CACZoC,S,GAAY;AACjBC,WAAO,oBAAUC,MADA;AAEjB/B,eAAW,oBAAUgC,MAFJ;AAGjBvB,gBAAY,oBAAUsB,MAHL;AAIjBrB,oBAAgB,oBAAUsB,MAJT;AAKjB7B,oBAAgB,oBAAU4B,MALT;AAMjB3B,wBAAoB,oBAAU4B,MANb;AAOjB3B,wBAAoB,oBAAU0B,MAPb;AAQjBzB,4BAAwB,oBAAU0B,MARjB;AASjBrC,QAAI,oBAAUsC,IATG;AAUjBrC,SAAK,oBAAUqC,IAVE;AAWjBpC,YAAQ,oBAAUoC,IAXD;AAYjBlC,cAAU,oBAAUkC,IAZH;AAajBnC,cAAU,oBAAUmC,IAbH;AAcjBhC,eAAW,oBAAU+B,MAAV,CAAiBE,UAdX;AAejBhC,oBAAgB,oBAAU8B,MAAV,CAAiBE,UAfhB;AAgBjBnB,WAAO,oBAAUoB,MAAV,CAAiBD,UAhBP;AAiBjBvB,cAAU,oBAAUsB,IAjBH;AAkBjB1B,eAAW,oBAAU0B,IAlBJ;AAmBjBzB,iBAAa,oBAAUyB,IAnBN;AAoBjBpB,kBAAc,oBAAUuB,IAAV,CAAeF,UApBZ;AAqBjBpB,oBAAgB,oBAAUsB,IAAV,CAAeF,UArBd;AAsBjBtB,kBAAc,oBAAUwB,IAAV,CAAeF,UAtBZ;AAuBjBhB,WAAO,oBAAUiB,MAvBA;AAwBjBhB,UAAM,oBAAUgB,MAxBC;AAyBjBlB,mBAAe,oBAAUkB,MAzBR;AA0BjBnB,eAAW,oBAAUqB,SAAV,CAAoB,CAC7B,oBAAUF,MADmB,EAE7B,oBAAUH,MAFmB,CAApB,CA1BM;AA8BjBZ,oBAAgB,oBAAUe,MAAV,CAAiBD;AA9BhB,G;oBADAzC,K","file":"Track.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport updateUnit from '../utils/NumberUtils/updateUnit';\nimport TrackFill from './TrackFill';\nimport Thumb from './Thumb';\nimport ThumbMask from './ThumbMask';\nimport DiscreteValue from './DiscreteValue';\n\nconst half = w => w / 2;\n\n/**\n * The `Track` component is used for showing the current state of the slider.\n * It will render the `TrackFill`, `Thumb`, and `ThumbMask` components.\n */\nexport default class Track extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    thumbStyle: PropTypes.object,\n    thumbClassName: PropTypes.string,\n    trackFillStyle: PropTypes.object,\n    trackFillClassName: PropTypes.string,\n    discreteValueStyle: PropTypes.object,\n    discreteValueClassName: PropTypes.string,\n    on: PropTypes.bool,\n    off: PropTypes.bool,\n    active: PropTypes.bool,\n    dragging: PropTypes.bool,\n    disabled: PropTypes.bool,\n    thumbLeft: PropTypes.string.isRequired,\n    trackFillWidth: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    discrete: PropTypes.bool,\n    maskInked: PropTypes.bool,\n    maskLeaving: PropTypes.bool,\n    onThumbKeyUp: PropTypes.func.isRequired,\n    onThumbKeyDown: PropTypes.func.isRequired,\n    onThumbFocus: PropTypes.func.isRequired,\n    scale: PropTypes.number,\n    step: PropTypes.number,\n    discreteTicks: PropTypes.number,\n    tickWidth: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string,\n    ]),\n    valuePrecision: PropTypes.number.isRequired,\n  };\n\n  render() {\n    const {\n      on,\n      off,\n      active,\n      disabled,\n      dragging,\n      className,\n      thumbLeft,\n      trackFillWidth,\n      trackFillStyle,\n      trackFillClassName,\n      discreteValueStyle,\n      discreteValueClassName,\n      maskInked,\n      maskLeaving,\n      thumbStyle,\n      thumbClassName,\n      discrete,\n      onThumbFocus,\n      onThumbKeyUp,\n      onThumbKeyDown,\n      value,\n      tickWidth,\n      discreteTicks,\n      scale,\n      step,\n      valuePrecision,\n      ...props\n    } = this.props;\n\n    const ticks = [];\n    if (typeof discreteTicks !== 'undefined' && !disabled && discrete) {\n      const amt = scale / (discreteTicks / step);\n      const offset = updateUnit(tickWidth, half, 'px');\n      const inc = 100 / amt;\n\n      for (let i = 0; i <= amt; i++) {\n        let left = `${i * inc}%`;\n        let width = tickWidth;\n        if (i === 0 || i === amt) {\n          width = updateUnit(tickWidth, half);\n        } else {\n          left = `calc(${left} - ${offset})`;\n        }\n\n        ticks.push(\n          <span\n            key={`tick-${i}`}\n            className=\"md-slider-discrete-tick\"\n            style={{ left, width }}\n          />\n        );\n      }\n    }\n\n    return (\n      <div {...props} className={cn('md-slider-track', className)}>\n        {ticks}\n        <TrackFill\n          style={trackFillStyle}\n          className={trackFillClassName}\n          disabled={disabled}\n          dragging={dragging}\n          trackFillWidth={trackFillWidth}\n        />\n        <Thumb\n          style={thumbStyle}\n          className={thumbClassName}\n          on={on}\n          off={off}\n          disabled={disabled}\n          dragging={dragging}\n          active={active}\n          thumbLeft={thumbLeft}\n          onFocus={onThumbFocus}\n          onKeyUp={onThumbKeyUp}\n          onKeyDown={onThumbKeyDown}\n          discrete={discrete}\n        />\n        <DiscreteValue\n          style={discreteValueStyle}\n          className={discreteValueClassName}\n          discrete={discrete}\n          dragging={dragging}\n          active={active}\n          value={value}\n          thumbLeft={thumbLeft}\n          valuePrecision={valuePrecision}\n        />\n        <ThumbMask\n          dragging={dragging}\n          disabled={disabled}\n          thumbLeft={thumbLeft}\n          maskInked={maskInked}\n          discrete={discrete}\n          leaving={maskLeaving}\n        />\n      </div>\n    );\n  }\n}\n"]}