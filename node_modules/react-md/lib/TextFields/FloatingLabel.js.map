{"version":3,"sources":["../../src/js/TextFields/FloatingLabel.js"],"names":["FloatingLabel","props","label","htmlFor","className","floating","active","error","disabled","iconOffset","customSize","hint","primary","propTypes","style","object","string","node","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAMqBA,a;;;;;;;;;;;+BAcV;AAAA;;AAAA,qBAYH,KAAKC,KAZF;AAAA,YAELC,KAFK,UAELA,KAFK;AAAA,YAGLC,OAHK,UAGLA,OAHK;AAAA,YAILC,SAJK,UAILA,SAJK;AAAA,YAKLC,QALK,UAKLA,QALK;AAAA,YAMLC,MANK,UAMLA,MANK;AAAA,YAOLC,KAPK,UAOLA,KAPK;AAAA,YAQLC,QARK,UAQLA,QARK;AAAA,YASLC,UATK,UASLA,UATK;AAAA,YAULC,UAVK,UAULA,UAVK;AAAA,YAWFT,KAXE;;AAcP,YAAI,CAACC,KAAL,EAAY;AACV,iBAAO,IAAP;AACD;;AAED,eACE;AAAA;AAAA,uBACMD,KADN;AAEE,qBAASE,OAFX;AAGE,uBAAW,0BAAG,mBAAH;AACT,6CAA+B,CAACE,QADvB;AAET,mDAAqC,CAACA,QAAD,IAAa,CAACK;AAF1C,4DAGcA,UAHd,EAG6BA,UAH7B,yDAIuBA,UAJvB,EAIsCA,cAAc,CAACL,QAJrD,wBAKT,6BALS,EAKsBA,QALtB,wBAMT,gCANS,EAMyBI,UANzB,SAOR,2BAAY;AACbD,gCADa;AAEbD,0BAFa;AAGbI,oBAAM,CAACL,MAHM;AAIbM,uBAASN;AAJI,aAAZ,EAKAF,SALA,CAPQ;AAHb;AAiBGF;AAjBH,SADF;AAqBD;;;;;;AArDkBF,e,CACZa,S,GAAY;AACjBC,WAAO,oBAAUC,MADA;AAEjBX,eAAW,oBAAUY,MAFJ;AAGjBd,WAAO,oBAAUe,IAHA;AAIjBZ,cAAU,oBAAUa,IAJH;AAKjBX,WAAO,oBAAUW,IALA;AAMjBZ,YAAQ,oBAAUY,IAND;AAOjBV,cAAU,oBAAUU,IAPH;AAQjBT,gBAAY,oBAAUS,IARL;AASjBR,gBAAY,oBAAUM,MATL;AAUjBb,aAAS,oBAAUa;AAVF,G;oBADAhB,a","file":"FloatingLabel.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\n\nexport default class FloatingLabel extends PureComponent {\n  static propTypes = {\n    style: PropTypes.object,\n    className: PropTypes.string,\n    label: PropTypes.node,\n    floating: PropTypes.bool,\n    error: PropTypes.bool,\n    active: PropTypes.bool,\n    disabled: PropTypes.bool,\n    iconOffset: PropTypes.bool,\n    customSize: PropTypes.string,\n    htmlFor: PropTypes.string,\n  };\n\n  render() {\n    const {\n      label,\n      htmlFor,\n      className,\n      floating,\n      active,\n      error,\n      disabled,\n      iconOffset,\n      customSize,\n      ...props\n    } = this.props;\n\n    if (!label) {\n      return null;\n    }\n\n    return (\n      <label\n        {...props}\n        htmlFor={htmlFor}\n        className={cn('md-floating-label', {\n          'md-floating-label--inactive': !floating,\n          'md-floating-label--inactive-sized': !floating && !customSize,\n          [`md-floating-label--${customSize}`]: customSize,\n          [`md-floating-label--inactive-${customSize}`]: customSize && !floating,\n          'md-floating-label--floating': floating,\n          'md-floating-label--icon-offset': iconOffset,\n        }, themeColors({\n          disabled,\n          error,\n          hint: !active,\n          primary: active,\n        }, className))}\n      >\n        {label}\n      </label>\n    );\n  }\n}\n"]}