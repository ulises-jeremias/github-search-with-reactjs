{"version":3,"sources":["../../src/js/TextFields/TextFieldMessage.js"],"names":["TextFieldMessage","props","state","message","error","errorText","helpText","isMessageVisible","_isMessageVisible","nextProps","keys","_anyChanges","setState","p1","p2","changed","some","key","helpOnFocus","active","maxLength","className","currentLength","leftIcon","rightIcon","block","disabled","propTypes","string","bool","node","number"],"mappings":"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","file":"TextFieldMessage.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport themeColors from '../utils/themeColors';\nimport Message from './Message';\n\nexport default class TextFieldMessage extends PureComponent {\n  static propTypes = {\n    className: PropTypes.string,\n    error: PropTypes.bool,\n    helpText: PropTypes.node,\n    errorText: PropTypes.node,\n    active: PropTypes.bool,\n    helpOnFocus: PropTypes.bool,\n    maxLength: PropTypes.number,\n    currentLength: PropTypes.number,\n    leftIcon: PropTypes.bool,\n    rightIcon: PropTypes.bool,\n    block: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      message: (props.error && props.errorText) || props.helpText || props.errorText,\n      isMessageVisible: this._isMessageVisible(props),\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const keys = ['active', 'error', 'helpOnFocus', 'helpText', 'errorText'];\n    if (this._anyChanges(keys, this.props, nextProps)) {\n      this.setState({\n        isMessageVisible: this._isMessageVisible(nextProps),\n        message: (nextProps.error && nextProps.errorText) || nextProps.helpText || nextProps.errorText,\n      });\n    }\n  }\n\n  _anyChanges(keys, p1, p2) {\n    let changed = false;\n    keys.some(key => {\n      if (p1[key] !== p2[key]) {\n        changed = true;\n      }\n\n      return changed;\n    });\n\n    return changed;\n  }\n\n  _isMessageVisible(props) {\n    const { error, errorText, helpText, helpOnFocus, active } = props;\n    if (error && errorText) {\n      return true;\n    }\n\n    return !!(helpText && (!helpOnFocus || active));\n  }\n\n  render() {\n    const {\n      maxLength,\n      error,\n      className,\n      errorText,\n      helpText,\n      currentLength,\n      leftIcon,\n      rightIcon,\n      block,\n      active,\n    } = this.props;\n    const { isMessageVisible, message } = this.state;\n\n    if (currentLength === 'undefined' || (!helpText && !errorText && !maxLength)) {\n      return null;\n    }\n\n    return (\n      <div\n        className={cn('md-text-field-message-container', {\n          'md-text-field-message-container--count-only': !message || !isMessageVisible,\n          'md-text-field-message-container--left-icon-offset': leftIcon,\n          'md-text-field-message-container--right-icon-offset': rightIcon,\n          'md-full-width': !block,\n        }, themeColors({ error, disabled: !error }), className)}\n      >\n        <Message key=\"message\" active={isMessageVisible}>{message}</Message>\n        <Message key=\"counter\" className=\"md-text-field-message--counter\" active={active}>\n          {maxLength ? `${currentLength} / ${maxLength}` : null}\n        </Message>\n      </div>\n    );\n  }\n}\n"]}