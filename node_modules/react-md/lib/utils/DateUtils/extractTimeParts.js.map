{"version":3,"sources":["../../../src/js/utils/DateUtils/extractTimeParts.js"],"names":["extractTimeParts","DateTimeFormat","locales","time","formatted","match","hours","minutes","separator","remaining","timePeriod","length","join","trim"],"mappings":";;;;;;;;;;;;;;;;;;oBAYwBA,gB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AATxB;;;;;;;;;AASe,WAASA,gBAAT,CAA0BC,cAA1B,EAA0CC,OAA1C,EAAmDC,IAAnD,EAAyD;AACtE,QAAMC,YAAY,0BAAWH,cAAX,EAA2BC,OAA3B,EAAoCC,IAApC,CAAlB;;AAEA;AACA;;AAJsE,2BAK7CC,UAAUC,KAAV,CAAgB,SAAhB,CAL6C;AAAA;AAAA,QAK/DC,KAL+D;AAAA,QAKxDC,OALwD;;AAAA,4BAMpCH,UAAUC,KAAV,CAAgB,aAAhB,CANoC;AAAA;AAAA,QAM/DG,SAN+D;AAAA,QAMjDC,SANiD;;AAOtE,QAAIC,mBAAJ;AACA,QAAID,aAAaA,UAAUE,MAA3B,EAAmC;AACjCD,mBAAaD,UAAUG,IAAV,CAAe,EAAf,EAAmBC,IAAnB,EAAb;AACD;;AAED,WAAO;AACLP,kBADK;AAELC,eAASC,YAAYD,OAFhB;AAGLG;AAHK,KAAP;AAKD","file":"extractTimeParts.js","sourcesContent":["/** @module utils/DateUtils/extractTimeParts */\nimport formatTime from './formatTime';\n\n/**\n * Extracts the hours, minutes, and optional time period from\n * a date time.\n *\n * @param {function} DateTimeFormat the DateTimeFormat function to use.\n * @param {string|string[]} locales the locales to use.\n * @param {Date} time the time to extract from.\n * @return {Object} an object of { hours, minutes, timePeriod }\n */\nexport default function extractTimeParts(DateTimeFormat, locales, time) {\n  const formatted = formatTime(DateTimeFormat, locales, time);\n\n  // IE does not like lookaheads or splitting on [^0-9]\n  // it will include the non-printable characters..\n  const [hours, minutes] = formatted.match(/[0-9]+/g);\n  const [separator, ...remaining] = formatted.match(/[ ,.:A-z]+/g);\n  let timePeriod;\n  if (remaining && remaining.length) {\n    timePeriod = remaining.join('').trim();\n  }\n\n  return {\n    hours,\n    minutes: separator + minutes,\n    timePeriod,\n  };\n}\n\n"]}