{"version":3,"sources":["../../../src/js/utils/EventUtils/handleKeyboardAccessibility.js"],"names":["handleKeyboardAccessibility","e","onClick","listenToEnter","listenToSpace","key","which","keyCode","space","enter","tagName","target","preventDefault","form","submit","querySelector","click"],"mappings":";;;;;;;;;;;;;;;;;;oBA2BwBA,2B;;;;;;;;;;;;AArBxB;;;;;;;;;;;;;;;;;;;;;AAqBe,WAASA,2BAAT,CAAqCC,CAArC,EAAwCC,OAAxC,EAA6F;AAAA,QAA5CC,aAA4C,uEAA5B,IAA4B;AAAA,QAAtBC,aAAsB,uEAAN,IAAM;;AAC1G,QAAMC,MAAMJ,EAAEK,KAAF,IAAWL,EAAEM,OAAzB;AACA,QAAMC,QAAQJ,iBAAiBC,uBAA/B;AACA,QAAMI,QAAQJ,uBAAd;;AAH0G,QAKlGK,OALkG,GAKtFT,EAAEU,MALoF,CAKlGD,OALkG;;AAM1G,QAAIF,SAAUE,YAAY,OAAZ,IAAuBA,YAAY,UAAjD,EAA8D;AAAE;AAC9D;AACAT,QAAEW,cAAF;AACD;;AAED,QAAIH,SAAS,8BAAeR,EAAEU,MAAjB,CAAb,EAAuC;AACrC,UAAME,OAAO,uBAAQZ,EAAEU,MAAV,EAAkB,MAAlB,CAAb;AACA,UAAMG,SAASD,OAAOA,KAAKE,aAAL,CAAmB,kBAAnB,CAAP,GAAgD,IAA/D;AACA,UAAID,MAAJ,EAAY;AACVA,eAAOE,KAAP;AACD;;AAED,aAAO,IAAP;AACD;;AAED,QAAKP,SAASN,aAAV,IAA4BK,KAAhC,EAAuC;AACrCN,cAAQD,CAAR;;AAEA,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD,G,CAvDD","file":"handleKeyboardAccessibility.js","sourcesContent":["/** @module utils/EventUtils/handleKeyboardAccessibility */\n\nimport { SPACE, ENTER } from '../../constants/keyCodes';\nimport closest from '../closest';\nimport isFormPartRole from '../isFormPartRole';\n\n/**\n * A utility function for adding keyboard accessibility to elements that are not a natively\n * clickable (div, span, etc). When the space or enter key is pressed while focusing the\n * element, different flows will happen.\n *\n * - space - The click event will be triggered and the default page scrolling behavior of the\n *      spacebar will be prevented\n * - enter - If the element has a form role ('checkbox' or 'radio'), the click event will not\n *      be triggered. Instead, it will find out if the element is inside a form. If it is, it\n *      will emulate the default behavior of attempting to submit the form. If the element does\n *      not have a form role, the click event will be triggered.\n *\n * @param {Event} e - the keydown event\n * @param {function} onClick - the on click event to be triggered if space or enter was pressed\n * @param {boolean=true} listenToEnter - boolean if the enter key should be used to trigger the\n *      the click event. Even if this is true, the click event will not be triggered if the role\n *      is for a form role.\n * @param {boolean=true} listenToSpace - boolean if the space key should be used to trigger the\n *      click event.\n * @return {Boolean} true if the enter or space keys were pressed while their listener is also active.\n */\nexport default function handleKeyboardAccessibility(e, onClick, listenToEnter = true, listenToSpace = true) {\n  const key = e.which || e.keyCode;\n  const space = listenToSpace && key === SPACE;\n  const enter = key === ENTER;\n\n  const { tagName } = e.target;\n  if (space && (tagName !== 'INPUT' && tagName !== 'TEXTAREA')) { // it is valid to press space in text fields\n    // Stop page scrolling\n    e.preventDefault();\n  }\n\n  if (enter && isFormPartRole(e.target)) {\n    const form = closest(e.target, 'form');\n    const submit = form ? form.querySelector('*[type=\"submit\"]') : null;\n    if (submit) {\n      submit.click();\n    }\n\n    return true;\n  }\n\n  if ((enter && listenToEnter) || space) {\n    onClick(e);\n\n    return true;\n  }\n\n  return false;\n}\n"]}